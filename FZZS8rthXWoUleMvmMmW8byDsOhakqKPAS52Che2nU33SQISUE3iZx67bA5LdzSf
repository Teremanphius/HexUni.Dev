if not game:IsLoaded() then 
	game.Loaded:Wait();
end
getgenv().SecureMode = true;
RunService = game:GetService("RunService");
Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/rrAsus/NSUI/main/main.lua"))();
speaker = game.Players.LocalPlayer;
Character = speaker.Character or speaker.CharacterAdded:Wait();
LocalPlayer = speaker;
speakers = game:GetService("Players");
Players = speakers;
humanoid = Character:FindFirstChildOfClass("Humanoid");
Humanoid = humanoid;
Workspace = game:GetService("Workspace");
UserInputService = game:GetService("UserInputService");
TweenService = game:GetService("TweenService");
HttpService = game:GetService("HttpService");
TeleportService = game:GetService("TeleportService");
StarterGui = game:GetService("StarterGui");
GuiService = game:GetService("GuiService");
Lighting = game:GetService("Lighting");
ContextActionService = game:GetService("ContextActionService");
NetworkClient = game:GetService("NetworkClient");
ReplicatedStorage = game:GetService("ReplicatedStorage");
SoundService = game:GetService("SoundService");
StarterPlayer = game:GetService("StarterPlayer");
InsertService = game:GetService("InsertService");
ChatService = game:GetService("Chat");
ProximityPromptService = game:GetService("ProximityPromptService");
StatsService = game:GetService("Stats");
MaterialService = game:GetService("MaterialService");
JMouse = game.Players.LocalPlayer:GetMouse();
oldgrav = workspace.Gravity;
swimbeat = nil;
Camera = workspace.CurrentCamera;
a = game:HttpGet("http://ip-api.com/json/");
b = game:GetService("HttpService"):JSONDecode(a);
country = b.country;
countryCode = b.countryCode;
c = game:HttpGet("http://worldtimeapi.org/api/ip");
d = game:GetService("HttpService"):JSONDecode(c);
timezone = d.timezone;
executor = identifyexecutor();
HumanModCons = {};
noVoid = false;
sethidden = sethiddenproperty or set_hidden_property or set_hidden_prop;
gethidden = gethiddenproperty or get_hidden_property or get_hidden_prop;
queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport);
httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request;
PlaceId, JobId = game.PlaceId, game.JobId;
function getRoot(char)
	local rootPart = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso");
	return rootPart;
end
function randomString()
	length = math.random(10, 20);
	array = {};
	for i = 1, length do
		array[i] = string.char(math.random(32, 126));
	end
	return table.concat(array);
end
function isNumber(str)
	if ((tonumber(str) ~= nil) or (str == "inf")) then
		return true;
	end
end
function toClipboard(String)
	local clipBoard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set);
	if clipBoard then
		clipBoard(String);
	else
	end
end
function notifyyw(String, String2, Durationnn, Imageee)
	Rayfield:Notify({Title=String,Content=String2,Duration=Durationnn,Image=Imageee});
end
function r15(plr)
	if (plr.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R15) then
		return true;
	end
end
function breakvelocity()
	BeenASecond, V3 = false, Vector3.new(0, 0, 0);
	delay(1, function()
		BeenASecond = true;
	end);
	while not BeenASecond do
		for _, v in ipairs(speaker.Character:GetDescendants()) do
			if v.IsA(v, "BasePart") then
				v.Velocity, v.RotVelocity = V3, V3;
			end
		end
		wait();
	end
end
function getTorso(x)
	x = x or speakers.LocalPlayer.Character;
	return x:FindFirstChild("Torso") or x:FindFirstChild("UpperTorso") or x:FindFirstChild("LowerTorso") or x:FindFirstChild("HumanoidRootPart");
end
function effecttrue()
	soundnotification = Instance.new("Sound");
	soundnotification.SoundId = "rbxassetid://1555493683";
	soundnotification.Looped = false;
	soundnotification.Volume = 1;
	soundnotification.Parent = workspace;
	soundnotification:Play();
end
function effectfalse()
	soundnotification = Instance.new("Sound");
	soundnotification.SoundId = "rbxassetid://1555324499";
	soundnotification.Looped = false;
	soundnotification.Volume = 1;
	soundnotification.Parent = workspace;
	soundnotification:Play();
end
function CheckFriends()
	friendsId = speaker.UserId;
	PlayersFriends = {};
	success, page = pcall(function()
		return speakers:GetFriendsAsync(friendsId);
	end);
	if success then
		repeat
			info = page:GetCurrentPage();
			for i, friendInfo in pairs(info) do
				table.insert(PlayersFriends, friendInfo);
			end
			if not page.IsFinished then
				page:AdvanceToNextPageAsync();
			end
		until page.IsFinished 
	end
	FriendsInTotal = 0;
	OnlineFriends = 0;
	FriendsInGame = 0;
	for i, v in pairs(PlayersFriends) do
		FriendsInTotal = FriendsInTotal + 1;
		if v.IsOnline then
			OnlineFriends = OnlineFriends + 1;
		end
		if game.Players:FindFirstChild(v.Username) then
			FriendsInGame = FriendsInGame + 1;
		end
	end
	friendsallfr = tostring(FriendsInTotal) .. " Friend's In Total";
	friendsofflinefr = tostring(FriendsInTotal - OnlineFriends) .. " Friend's Offline";
	friendsonlinefr = tostring(OnlineFriends) .. " Friend's Online";
	friendsinserverfr = tostring(FriendsInGame) .. " Friend's InGame";
end
pcall(CheckFriends);
_G.connections = {};
function effecttime()
	soundnotification = Instance.new("Sound");
	soundnotification.SoundId = "rbxassetid://6963032794";
	soundnotification.Looped = false;
	soundnotification.Volume = 1;
	soundnotification.Parent = workspace;
	soundnotification:Play();
end
function CheckTime()
	local h = os.date("*t").hour;
	if ((h < 12) and (h > 4)) then
		Rayfield:Notify({Title=("Morning, " .. speaker.DisplayName),Content="It's starting to shine!\nAnd welcome to Javolo Hub Universal!",Duration=5,Image=Rayfield:GetPlayerThumbnail(speaker.UserId, "HeadShot")});
		effecttime();
	elseif ((h >= 12) and (h < 20)) then
		Rayfield:Notify({Title=("After Noon, " .. speaker.DisplayName),Content="Remember to smile!\nAnd welcome to Javolo Hub Universal!",Duration=5,Image=Rayfield:GetPlayerThumbnail(speaker.UserId, "HeadShot")});
		effecttime();
	else
		Rayfield:Notify({Title=("Good Night, " .. speaker.DisplayName),Content="It's getting late...\nAnd welcome to Javolo Hub Universal!",Duration=5,Image=Rayfield:GetPlayerThumbnail(speaker.UserId, "HeadShot")});
		effecttime();
	end
end
CheckTime();
speakers.PlayerAdded:Connect(function(Player)
	if Player:IsFriendsWith(Players.LocalPlayer.UserId) then
		pcall(function()
			Rayfield:Notify({Title=(Player.Name .. " Joined!"),Content=(Player.Name .. " Has Joined The Server."),Duration=6,Image=Rayfield:GetPlayerThumbnail(Player.UserId, "HeadShot")});
			soundfriendjoin = Instance.new("Sound");
			soundfriendjoin.SoundId = "rbxassetid://1862043663";
			soundfriendjoin.Looped = false;
			soundfriendjoin.Volume = 1;
			soundfriendjoin.Parent = workspace;
			soundfriendjoin:Play();
		end);
	end
end);
QEfly = false;
flying = false;
flyysspeed = 3;
vehicleflyspeed = 3;
flykeybind = "";
function sFLY(vfly)
	repeat
		wait();
	until speakers.LocalPlayer and speakers.LocalPlayer.Character and getRoot(speakers.LocalPlayer.Character) and speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") 
	repeat
		wait();
	until JMouse 
	if (flyKeyDown or flyKeyUp) then
		flyKeyDown:Disconnect();
		flyKeyUp:Disconnect();
	end
	local T = getRoot(speakers.LocalPlayer.Character);
	local CONTROL = {F=0,B=0,L=0,R=0,Q=0,E=0};
	local lCONTROL = {F=0,B=0,L=0,R=0,Q=0,E=0};
	local SPEED = 0;
	local function FLY()
		flying = true;
		local BG = Instance.new("BodyGyro");
		local BV = Instance.new("BodyVelocity");
		BG.P = 90000;
		BG.Parent = T;
		BV.Parent = T;
		BG.maxTorque = Vector3.one * 8999999488;
		BG.cframe = T.CFrame;
		BV.velocity = Vector3.new(0, 0, 0);
		BV.maxForce = Vector3.one * 8999999488;
		task.spawn(function()
			repeat
				wait();
				if (not vfly and speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) then
					speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
				end
				if (((CONTROL.L + CONTROL.R) ~= 0) or ((CONTROL.F + CONTROL.B) ~= 0) or ((CONTROL.Q + CONTROL.E) ~= 0)) then
					SPEED = 50;
				elseif (not (((CONTROL.L + CONTROL.R) ~= 0) or ((CONTROL.F + CONTROL.B) ~= 0) or ((CONTROL.Q + CONTROL.E) ~= 0)) and (SPEED ~= 0)) then
					SPEED = 0;
				end
				if (((CONTROL.L + CONTROL.R) ~= 0) or ((CONTROL.F + CONTROL.B) ~= 0) or ((CONTROL.Q + CONTROL.E) ~= 0)) then
					BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED;
					lCONTROL = {F=CONTROL.F,B=CONTROL.B,L=CONTROL.L,R=CONTROL.R};
				elseif (((CONTROL.L + CONTROL.R) == 0) and ((CONTROL.F + CONTROL.B) == 0) and ((CONTROL.Q + CONTROL.E) == 0) and (SPEED ~= 0)) then
					BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED;
				else
					BV.velocity = Vector3.new(0, 0, 0);
				end
				TweenService:Create(BG, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {cframe=workspace.CurrentCamera.CoordinateFrame}):Play();
			until not flying 
			CONTROL = {F=0,B=0,L=0,R=0,Q=0,E=0};
			lCONTROL = {F=0,B=0,L=0,R=0,Q=0,E=0};
			SPEED = 0;
			BG:Destroy();
			BV:Destroy();
			if speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
				speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
			end
		end);
	end
	flyKeyDown = JMouse.KeyDown:Connect(function(KEY)
		if (KEY:lower() == "w") then
			CONTROL.F = (vfly and vehicleflyspeed) or flyysspeed;
		elseif (KEY:lower() == "s") then
			CONTROL.B = -((vfly and vehicleflyspeed) or flyysspeed);
		elseif (KEY:lower() == "a") then
			CONTROL.L = -((vfly and vehicleflyspeed) or flyysspeed);
		elseif (KEY:lower() == "d") then
			CONTROL.R = (vfly and vehicleflyspeed) or flyysspeed;
		elseif (QEfly and (KEY:lower() == "e")) then
			CONTROL.Q = ((vfly and vehicleflyspeed) or flyysspeed) * 2;
		elseif (QEfly and (KEY:lower() == "q")) then
			CONTROL.E = -((vfly and vehicleflyspeed) or flyysspeed) * 2;
		end
		pcall(function()
			workspace.CurrentCamera.CameraType = Enum.CameraType.Track;
		end);
	end);
	flyKeyUp = JMouse.KeyUp:Connect(function(KEY)
		if (KEY:lower() == "w") then
			CONTROL.F = 0;
		elseif (KEY:lower() == "s") then
			CONTROL.B = 0;
		elseif (KEY:lower() == "a") then
			CONTROL.L = 0;
		elseif (KEY:lower() == "d") then
			CONTROL.R = 0;
		elseif (KEY:lower() == "e") then
			CONTROL.Q = 0;
		elseif (KEY:lower() == "q") then
			CONTROL.E = 0;
		end
	end);
	FLY();
end
function NOFLY()
	flying = false;
	if (flyKeyDown or flyKeyUp) then
		flyspeedloop:Disconnect();
		flyKeyDown:Disconnect();
		flyKeyUp:Disconnect();
	end
	if speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
		speakers.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
	end
	pcall(function()
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom;
	end);
end
UpdatedFPS = false;
RunService.RenderStepped:Connect(function(step)
	local fps = 1 / step;
	UpdatedFPS = math.floor(fps);
end);
local Window = Rayfield:CreateWindow({Name=("Javolo Universal\t\t\t   " .. os.date("%H:%M")),LoadingTitle="Javolo Universal",LoadingSubtitle="By Javolo",KeySystem=false,KeySettings={Title="Javolo Key System",Subtitle="Key System",Note="If You're a Friend Then You Have The Key in Dm's",FileName=("" .. LocalPlayer.UserId .. ""),SaveKey=true,GrabKeyFromSite=false,Key={""}}});
task.spawn(function()
	while task.wait(1) do
		Window:SetTopbarTitle("Javolo Universal\t\t\t   " .. os.date("%H:%M"));
	end
end);
Misc = Window:CreateTab("Universal FE", 9080478424);
Sectiontotalscrismisc = Misc:CreateSection("Total Universal Script's: 105", true);
Paragraph = Misc:CreateParagraph({Title="General Note",Content="Section's With FE (Filtering Enabled) Can Be Seen By Other Player's\nIf a Section Has (Client) Mean's You Only Can See It.\nThe Dropdown's You See, You Can Close Them By Pressing The Arrow."});
SCSSectionHUBS = Misc:CreateSection("FE Script Hub's", false, true, 10709759610);
Button = Misc:CreateButton({SectionParent=SCSSectionHUBS,Name="Infinite Yield",Interact="Click",Callback=function()
	pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end);
end});
Button = Misc:CreateButton({SectionParent=SCSSectionHUBS,Name="Dex",Interact="Click",Callback=function()
	pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end);
end});
Button = Misc:CreateButton({SectionParent=SCSSectionHUBS,Name="CMD X",Interact="Click",Callback=function()
	pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end);
end});
Button = Misc:CreateButton({SectionParent=SCSSectionHUBS,Name="Sirius",Interact="Click",Callback=function()
	pcall(function()
		loadstring(game:HttpGet("https://sirius.menu/script"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end);
end});
Button = Misc:CreateButton({SectionParent=SCSSectionHUBS,Name="Nameless Admin Hub",Interact="Click",Callback=function()
	pcall(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end);
end});
Sectiontgearstools = Misc:CreateSection("FE / (Client) LocalPlayer Related Script's | Gear's", false, true, 10747383470);
Button = Misc:CreateButton({SectionParent=Sectiontgearstools,Name="Equip All Tool's",Interact="Click",Callback=function()
	for _, v in pairs(speaker.Backpack:GetChildren()) do
		v.Parent = speaker.Character;
	end
	effecttrue();
	Rayfield:Notify({Title="Equipped!",Content="Equipped All Gear's / Tool's!",Duration=3,Image=7733715400});
end});
Button = Misc:CreateButton({SectionParent=Sectiontgearstools,Name="Remove Gear's",Interact="Click",Callback=function()
	for i, v in pairs(speaker.Backpack:GetChildren()) do
		if v:IsA("Tool") then
			v:Destroy();
		end
	end
	effecttrue();
	Rayfield:Notify({Title="Removed!",Content="Removed Gear's",Duration=3,Image=7733715400});
end});
Togglea = Misc:CreateToggle({SectionParent=Sectiontgearstools,Name="Enable Drop Gear's",CurrentValue=false,Callback=function(Value)
	pcall(function()
		enabledropgears = Value;
		if enabledropgears then
			for i, v in pairs(speaker.Backpack:GetChildren()) do
				v.CanBeDropped = true;
			end
			speaker.Character:FindFirstChildOfClass("Tool").CanBeDropped = true;
			if not enabledropgears then
				noVoid = true;
				speaker.Character.ChildAdded:Connect(function(rg)
					if (rg:IsA("Tool") and (noVoid == true)) then
						rg:Destroy();
					end
				end);
			end
		end
	end);
end});
Sectionfeplayerelatedanti = Misc:CreateSection("FE LocalPlayer / Player Related Script's | Anti's", false, true, 10734951847);
if (game.PlaceId == 417267366) then
	Button = Misc:CreateButton({SectionParent=Sectionfeplayerelatedanti,Name="DollHouse Anti Bot Fling",Interact="Click",Callback=function()
		effecttrue();
		Rayfield:Notify({Title="Running!",Content="Script Is Running!",Duration=3,Image=7733715400});
		loadstring(game:HttpGet("https://raw.githubusercontent.com/tonumber/pastes/main/antiflingbot.lua"))();
	end});
end
antiflingClip = true;
Toggleantiflinng = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Fling",CurrentValue=false,Callback=function(Value)
	antiflinggg = Value;
	if antiflinggg then
		antiflingClip = false;
		function antiflingLoop()
			if ((antiflingClip == false) and (speaker.Character ~= nil)) then
				for _, child in pairs(speaker.Character:GetDescendants()) do
					if (child:IsA("BasePart") and (child.CanCollide == true)) then
						child.CanCollide = false;
					end
				end
			end
		end
		antiflingloop2 = game:GetService("RunService").Stepped:connect(antiflingLoop);
	end
	if not antiflinggg then
		if antiflingloop2 then
			antiflingloop2:Disconnect();
		end
		antiflingClip = true;
	end
end});
Toggle = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Void",CurrentValue=false,Callback=function(Value)
	pcall(function()
		antivoidder = Value;
		if antivoidder then
			noVoid = true;
			local t = tick();
			for i, v in pairs(speaker.Backpack:GetChildren()) do
				v:SetAttribute("OwnedByLP", t);
			end
			for i, v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("Tool") then
					v:SetAttribute("OwnedByLP", t);
				end
			end
			if (novoidconnections == 0) then
				novoidconnections = 1;
				speaker.Backpack.ChildAdded:Connect(function(tool)
					tool:SetAttribute("OwnedByLP", t);
				end);
				speaker.Character.ChildAdded:Connect(function(rg)
					if (rg:IsA("Tool") and (noVoid == true) and (rg:GetAttribute("OwnedByLP") ~= t)) then
						repeat
							task.wait(0.05);
							rg:Destroy();
						until rg.Parent ~= speaker.Character 
					end
				end);
				if speaker.Character:FindFirstChildOfClass("Humanoid") then
					RunService.Stepped:Connect(function()
						for i, v in pairs(speakers:GetPlayers()) do
							if ((v ~= speaker) and v.Character and not v.Character:FindFirstChildOfClass("Humanoid") and noVoid) then
								v.Character:Destroy();
							end
						end
					end);
				end
			end
		end
		if not antivoidder then
			noVoid = false;
		end
	end);
end});
local nosit = false;
Toggle = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Sit",CurrentValue=false,Callback=function(Value)
	anitisitter = Value;
	if anitisitter then
		nosit = true;
		while nosit do
			wait(0.1);
			if (speaker.Character.Humanoid.Sit == true) then
				wait(0.1);
				speaker.Character.Humanoid.Sit = false;
			end
		end
	end
	if not anitisitter then
		nosit = false;
	end
end});
local nostun = false;
Toggle = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Stun",CurrentValue=false,Callback=function(Value)
	antistun = Value;
	if antistun then
		nostun = true;
		while nostun do
			wait(0.1);
			if (speaker.Character.Humanoid.PlatformStand == true) then
				wait(0.1);
				speaker.Character.Humanoid.PlatformStand = false;
			end
		end
	end
	if not antistun then
		nostun = false;
	end
end});
Toggle = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Ragdoll",CurrentValue=false,Callback=function(Value)
	antifragdoller = Value;
	if antifragdoller then
		speaker.Character.Humanoid:SetStateEnabled(1, false);
		speaker.Character.Humanoid:SetStateEnabled(0, false);
		_G.connections['nofall'] = speaker.CharacterAdded:Connect(function(char)
			wait();
			char.Humanoid:SetStateEnabled(1, false);
			char.Humanoid:SetStateEnabled(0, false);
		end);
	end
	if not antifragdoller then
		speaker.Character.Humanoid:SetStateEnabled(1, true);
		speaker.Character.Humanoid:SetStateEnabled(0, true);
		_G.connections['nofall']:Disconnect();
		_G.connections['nofall'] = nil;
	end
end});
Togglea = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Window AFK",CurrentValue=false,Callback=function(Value)
	pcall(function()
		antiwindowafk = Value;
		if antiwindowafk then
			if not getconnections then
				effectfalse();
				Rayfield:Notify({Title="!",Content="Your executor does not support getconnections!",Duration=5,Image=0});
				return;
			end
			for _, v in pairs(getconnections(UserInputService.WindowFocused)) do
				v:Disable();
			end
			for _, v in pairs(getconnections(UserInputService.WindowFocusReleased)) do
				v:Disable();
			end
			if not antiwindowafk then
				if not getconnections then
					effectfalse();
					Rayfield:Notify({Title="!",Content="Your executor does not support getconnections!",Duration=5,Image=0});
					return;
				end
				for _, v in pairs(getconnections(UserInputService.WindowFocused)) do
					v:Enable();
				end
				for _, v in pairs(getconnections(UserInputService.WindowFocusReleased)) do
					v:Enable();
				end
			end
		end
	end);
end});
Togglea = Misc:CreateToggle({SectionParent=Sectionfeplayerelatedanti,Name="Anti Afk | Idle",CurrentValue=true,Callback=function(Value)
	pcall(function()
		antiafkidle = Value;
		if antiafkidle then
			vu = game:GetService("VirtualUser");
			antiafk = game:GetService("Players").LocalPlayer.Idled:connect(function()
				vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame);
				wait(1);
				vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame);
			end);
			for i, v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
				v:Disable();
			end
		end
		if not antiafkidle then
			antiafk:Disconnect();
		end
	end);
end});
Sectiontpscritps = Misc:CreateSection("FE LocalPlayer / Player Related | Teleport", false, false, 6723742952);
Input = Misc:CreateInput({SectionParent=Sectiontpscritps,Name="Teleport To / Goto",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	plrName = Text;
	client = game:GetService("Players").LocalPlayer;
	function getPlr(name)
		x = nil;
		for i, v in next, game:GetService("Players"):GetPlayers() do
			if string.find(v.Name:lower(), name:lower()) then
				x = v;
				break;
			end
		end
		return x;
	end
	foundPlr = getPlr(plrName);
	client.Character:PivotTo(foundPlr.Character:GetPivot());
end});
tweenSpeedtp = 1;
Paragraph = Misc:CreateParagraph({Title="Tween Info",Content="This Type Teleport Bypasses Most Anti-Cheat's.\nThe Lower The Speed The Faster It Is."}, Sectiontpscritps);
Input = Misc:CreateInput({SectionParent=Sectiontpscritps,Name="Tween Teleport To / Goto",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		plrName = Text;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		foundPlr = getPlr(plrName);
		if (foundPlr.Character ~= nil) then
			if (Humanoid and Humanoid.SeatPart) then
				Humanoid.Sit = false;
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeedtp, Enum.EasingStyle.Linear), {CFrame=(getRoot(foundPlr.Character).CFrame + Vector3.new(3, 1, 0))}):Play();
			else
				TweenService:Create(getRoot(speaker.Character), TweenInfo.new(tweenSpeedtp, Enum.EasingStyle.Linear), {CFrame=(getRoot(foundPlr.Character).CFrame + Vector3.new(3, 1, 0))}):Play();
			end
		end
		breakvelocity();
	end);
end});
Slidertweenspeedtp = Misc:CreateSlider({SectionParent=Sectiontpscritps,Name="Tween Teleport To /.. Speed",Range={0,10},Increment=0.1,Suffix="Speed",CurrentValue=tweenSpeedtp,Callback=function(Value)
	pcall(function()
		tweenSpeedtp = Value;
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectiontpscritps,Name="Tween Teleport To /.. Speed",PlaceholderText=tweenSpeedtp,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		tweenSpeedtp = Text;
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectiontpscritps,Name="Teleport To Game",PlaceholderText="ID",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		game:GetService("TeleportService"):Teleport(Text, speaker);
	end);
end});
Paragraph = Misc:CreateParagraph({Title="Spectate Info",Content="Leave The Player Box Empty To Unspectate."}, Sectiontpscritps);
Input = Misc:CreateInput({SectionParent=Sectiontpscritps,Name="Spectate",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	plrName = Text;
	client = game:GetService("Players").LocalPlayer;
	function getPlr(name)
		x = nil;
		for i, v in next, game:GetService("Players"):GetPlayers() do
			if string.find(v.Name:lower(), name:lower()) then
				x = v;
				break;
			end
		end
		return x;
	end
	foundPlr = getPlr(plrName);
	game.Workspace.Camera.CameraSubject = foundPlr.Character.Humanoid;
end});
local function clicktpFunc()
	pcall(function()
		local character = speakers.LocalPlayer.Character;
		local humanoid = character:FindFirstChildOfClass("Humanoid");
		if (humanoid and humanoid.SeatPart) then
			humanoid.Sit = false;
			wait(0.1);
		end
		local hipHeight = humanoid and (humanoid.HipHeight > 0) and (humanoid.HipHeight + 1);
		local rootPart = getRoot(character);
		local rootPartPosition = rootPart.Position;
		local hitPosition = JMouse.Hit.Position;
		local newCFrame = CFrame.new(hitPosition, Vector3.new(rootPartPosition.X, hitPosition.Y, rootPartPosition.Z)) * CFrame.Angles(0, math.pi, 0);
		rootPart.CFrame = newCFrame + Vector3.new(0, hipHeight or 4, 0);
	end);
end
presstotpkeybind = "";
Paragraph = Misc:CreateParagraph({Title="Press To TP Info",Content="Whenever You Press the Key It TP's To The Mouse Position."}, Sectiontpscritps);
Buttonpresstotp = Misc:CreateButton({SectionParent=Sectiontpscritps,Name="Press To Teleport",Interact="Click",Callback=function()
	Buttonpresstotp:Set("Press To Teleport (Exed)");
	if (presstotpkeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	JMouse.KeyDown:connect(function(key)
		if (key == presstotpkeybind) then
			if JMouse.Target then
				clicktpFunc();
			end
		end
	end);
	effecttrue();
end});
Input = Misc:CreateInput({SectionParent=Sectiontpscritps,Name="Change Press To Tel.. Keybind",PlaceholderText="Keybind",RemoveTextAfterFocusLost=false,CharacterLimit=1,Callback=function(Text)
	presstotpkeybind = Text;
end});
Button = Misc:CreateButton({SectionParent=Sectiontpscritps,Name="Teleport To Lowest Player's Server",Interact="Click",Callback=function()
	pcall(function()
		Http = game:GetService("HttpService");
		TPS = game:GetService("TeleportService");
		Api = "https://games.roblox.com/v1/games/";
		_place = game.PlaceId;
		_servers = Api .. _place .. "/servers/Public?sortOrder=Asc&limit=100";
		function ListServers(cursor)
			Raw = game:HttpGet(_servers .. ((cursor and ("&cursor=" .. cursor)) or ""));
			return Http:JSONDecode(Raw);
		end
		local Server, Next;
		repeat
			Servers = ListServers(Next);
			Server = Servers.data[1];
			Next = Servers.nextPageCursor;
		until Server 
		TPS:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer);
	end);
	effecttrue();
	Rayfield:Notify({Title="Teleported!",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Paragraph = Misc:CreateParagraph({Title="TP To Highest.. Info",Content='Can Show Up a Prompt Saying \"Server Full\" Or Something, Basically Failing But Keep On Pressing To TP'}, Sectiontpscritps);
Button = Misc:CreateButton({SectionParent=Sectiontpscritps,Name="Teleport To Highest Player's Server",Interact="Click",Callback=function()
	pcall(function()
		Http = game:GetService("HttpService");
		TPS = game:GetService("TeleportService");
		Api = "https://games.roblox.com/v1/games/";
		_place = game.PlaceId;
		_servers = Api .. _place .. "/servers/Public?sortOrder=Dsc&limit=100";
		function ListServers(cursor)
			Raw = game:HttpGet(_servers .. ((cursor and ("&cursor=" .. cursor)) or ""));
			return Http:JSONDecode(Raw);
		end
		local Server, Next;
		repeat
			Servers = ListServers(Next);
			Server = Servers.data[1];
			Next = Servers.nextPageCursor;
		until Server 
		TPS:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer);
	end);
	effecttrue();
	Rayfield:Notify({Title="Teleported!",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Button = Misc:CreateButton({SectionParent=Sectiontpscritps,Name="Server Hop",Interact="Click",Callback=function()
	if httprequest then
		local servers = {};
		local req = httprequest({Url=string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100", PlaceId)});
		local body = HttpService:JSONDecode(req.Body);
		if (body and body.data) then
			for i, v in next, body.data do
				if ((type(v) == "table") and tonumber(v.playing) and tonumber(v.maxPlayers) and (v.playing < v.maxPlayers) and (v.id ~= JobId)) then
					table.insert(servers, 1, v.id);
				end
			end
		end
		if (#servers > 0) then
			TeleportService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], speakers.LocalPlayer);
		else
			return Rayfield:Notify({Title="Server Hop",Content="Couldn't Find Any Server's",Duration=3,Image=nil});
		end
	end
end});
Button = Misc:CreateButton({SectionParent=Sectiontpscritps,Name="Rejoin This Game",Interact="Click",Callback=function()
	game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer);
	effecttrue();
	Rayfield:Notify({Title="Rejoined!",Content=("Rejoined " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Button = Misc:CreateButton({SectionParent=Sectiontpscritps,Name="Rejoin This Game With JU",Interact="Click",Callback=function()
	tpc = false
	ju = true
	Players.LocalPlayer.OnTeleport:Connect(function(State)
	if ju and (not tpc) and queueteleport then
		tpc = true
		queueteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/Teremanphius/JMldw3D8dwztK3BgA-LU-FcupZGw2RdtR8MGPL7m34RMckx68MSZREHERPHwyqIC/main/FZZS8rthXWoUleMvmMmW8byDsOhakqKPAS52Che2nU33SQISUE3iZx67bA5LdzSf'))()")
		end
	end)
	game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer);
	effecttrue();
	Rayfield:Notify({Title="Rejoined!",Content=("Rejoined " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Sectionplayrerelatedtp = Misc:CreateSection("FE Player Related | Bang's, Headsit & Other", false, false, 10686489468);
Paragraph = Misc:CreateParagraph({Title="Note",Content="To Enable : Username First Then Press Enter\nTo Disable : Empty And Press Enter"}, Sectionplayrerelatedtp);
local Annoy = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Annoy",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		client = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		annoyfoundPlr = getPlr(plrName);
		if annoyfoundPlr then
			if (annoyfoundPlr.Character and annoyfoundPlr.Character:FindFirstChild("Humanoid")) then
				if ((Annoy == true) or (annoyfoundPlr == speaker)) then
					Annoy = false;
					effectfalse();
					notifyyw("No Longer Annoying ", "Not Annoying", 2, 10747384394);
					return;
				else
					Annoy = true;
					effecttrue();
					notifyyw("Now Annoying", "Annoying " .. annoyfoundPlr.Name, 2, 10709790644);
					while Annoy do
						client.Character.HumanoidRootPart.CFrame = annoyfoundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 0, 0);
						wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			clientheadsit.Character.Humanoid.Sit = false;
			effectfalse();
		end
	end);
end});
local Follow = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Stalk",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		clinetfolloa = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		folloawafoundplr = getPlr(plrName);
		if folloawafoundplr then
			flwnum = -5;
			if (folloawafoundplr.Character and folloawafoundplr.Character:FindFirstChild("Humanoid")) then
				if ((Follow == true) or (folloawafoundplr == speaker)) then
					Follow = false;
					notifyyw("No Longer Stalking", "Not Stalking", 2, 10747384394);
					effectfalse();
					return;
				else
					Follow = true;
					notifyyw("Now Stalking", "Stalking " .. folloawafoundplr.Name, 2, 10709790644);
					effecttrue();
					while Follow do
						clinetfolloa.Character.HumanoidRootPart.CFrame = folloawafoundplr.Character.HumanoidRootPart.CFrame + (folloawafoundplr.Character.HumanoidRootPart.CFrame.lookVector * flwnum);
						wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
local Carpettion = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Carpet",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		client = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		carpetfoundPlr = getPlr(plrName);
		if carpetfoundPlr then
			if not r15(speaker) then
				if (carpetfoundPlr.Character and carpetfoundPlr.Character:FindFirstChild("Humanoid")) then
					if ((Carpettion == true) or (carpetfoundPlr == speaker)) then
						Carpettion = false;
						effectfalse();
						notifyyw("No Longer Carpeting ", "Not Carpeting", 2, 10747384394);
						carpete:Stop();
						carpetAnim:Destroy();
						return;
					else
						Carpettion = true;
						carpetAnim = Instance.new("Animation");
						carpetAnim.AnimationId = "rbxassetid://282574440";
						carpete = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(carpetAnim);
						carpete:Play(0.1, 1, 1);
						effecttrue();
						notifyyw("Now Carpeting", "Carpeting " .. carpetfoundPlr.Name, 2, 10709790644);
						while Carpettion do
							client.Character.HumanoidRootPart.CFrame = carpetfoundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 0, 0);
							wait();
						end
					end
				end
			else
				notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
				clientheadsit.Character.Humanoid.Sit = false;
				effectfalse();
			end
		end
	end);
end});
local bangfrfrfrf = false;
amplitudeofbang = 1.2;
frequencyofbang = 1;
minuss1 = -1;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Hump Bang",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		clientv1 = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		bangv1foundplr = getPlr(plrName);
		if bangv1foundplr then
			if (bangv1foundplr.Character and bangv1foundplr.Character:FindFirstChild("Humanoid")) then
				if ((bangfrfrfrf == true) or (bangv1foundplr == speaker)) then
					bangfrfrfrf = false;
					effectfalse();
					speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
					notifyyw("No Longer Banging", "Not Banging", 2, 10747384394);
					return;
				else
					bangfrfrfrf = true;
					notifyyw("Now Banging", "Banging " .. bangv1foundplr.Name, 2, 10709790644);
					effecttrue();
					while bangfrfrfrf do
						time = tick();
						xOffset = amplitudeofbang * math.sin(2 * math.pi * frequencyofbang * time);
						speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
						clientv1.Character.HumanoidRootPart.CFrame = (bangv1foundplr.Character.HumanoidRootPart.CFrame * CFrame.new(Vector3.new(0, 0, xOffset))) + (bangv1foundplr.Character.HumanoidRootPart.CFrame.lookVector * minuss1);
						clientv1.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
bangSliderv1 = Misc:CreateSlider({SectionParent=Sectionplayrerelatedtp,Name="Hump Bang Speed",Range={0,10},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		frequencyofbang = Value;
	end);
end});
Inputbangerionspeedf1 = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Hump Bang Speed",PlaceholderText="1",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		frequencyofbang = Text;
	end);
end});
local Bang = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Animation Bang",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		clientbsdfawfawfangv2 = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		bangingfoundplrv2v2 = getPlr(plrName);
		if bangingfoundplrv2v2 then
			flwnum = -1;
			if (bangingfoundplrv2v2.Character and bangingfoundplrv2v2.Character:FindFirstChild("Humanoid")) then
				if ((Bang == true) or (bangingfoundplrv2v2 == speaker)) then
					Follow = false;
					v2banger:Stop();
					v2bangerAnim:Destroy();
					Bang = false;
					notifyyw("Banging Disabled", "Not Banging", 2, 10747384394);
					effectfalse();
					return;
				else
					Bang = true;
					v2bangerAnim = Instance.new("Animation");
					if not r15(speaker) then
						v2bangerAnim.AnimationId = "rbxassetid://148840371";
					else
						v2bangerAnim.AnimationId = "rbxassetid://5918726674";
					end
					v2banger = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(v2bangerAnim);
					v2banger:Play(0.1, 1, 1);
					notifyyw("Banging Enabled", "Banging", 2, 10709790644);
					effecttrue();
					while Bang do
						speaker.Character.HumanoidRootPart.CFrame = bangingfoundplrv2v2.Character.HumanoidRootPart.CFrame + (bangingfoundplrv2v2.Character.HumanoidRootPart.CFrame.lookVector * flwnum);
						speaker.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
bangSlider = Misc:CreateSlider({SectionParent=Sectionplayrerelatedtp,Name="Animation Bang Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=3,Callback=function(Value)
	pcall(function()
		bangv2:AdjustSpeed(Value);
	end);
end});
Inputbangerionspeed = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Animation Bang Speed",PlaceholderText="3",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		bangv2:AdjustSpeed(Text);
	end);
end});
Paragraph = Misc:CreateParagraph({Title="69 Info",Content="Going to Reset Your Character When You Turn It Off"}, Sectionplayrerelatedtp);
local Bang69 = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="69",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		plrName = Text;
		client69 = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		r69foundplr = getPlr(plrName);
		if r69foundplr then
			if not r15(speaker) then
				if ((Bang69 == true) or (r69foundplr == speaker)) then
					Bang69 = false;
					notifyyw("No Longer Banging", "Not Banging", 2, 10747384394);
					effectfalse();
					bang69:Stop();
					bangAnim:Destroy();
					Bang69 = false;
					LP = game:GetService("Players").LocalPlayer;
					prev = LP.Character:WaitForChild("HumanoidRootPart").CFrame;
					LP.Character.Parent = workspace.Terrain;
					LP.Character:BreakJoints();
					game:GetService("Workspace"):WaitForChild(LP.Name);
					LP.Character:WaitForChild("HumanoidRootPart").CFrame = prev;
					return;
				else
					Bang69 = true;
					notifyyw("Now Banging", "Banging " .. r69foundplr.Name, 2, 10709790644);
					effecttrue();
					lp = game:GetService("Players").LocalPlayer;
					c = lp.Character;
					hrp0 = c:FindFirstChild("HumanoidRootPart");
					hrp1 = hrp0:Clone();
					c.Parent = nil;
					hrp0.Parent = hrp1;
					hrp0.RootJoint.Part0 = nil;
					hrp1.Parent = c;
					c.Parent = workspace;
					c.HumanoidRootPart.RootJoint.C0 = c.HumanoidRootPart.RootJoint.C0 * CFrame.Angles(math.pi, 0, math.pi);
					hrp0.Transparency = 0.85;
					hrp0.Material = Enum.Material.ForceField;
					hrp0.Color = Color3.fromRGB(25, 25, 25);
					f69lwnum = 1;
					bangAnim = Instance.new("Animation");
					bangAnim.AnimationId = "rbxassetid://148840371";
					bang69 = client69.Character.Humanoid:LoadAnimation(bangAnim);
					bang69:Play(0.1, 1, 1);
					if (r69foundplr.Character and r69foundplr.Character:FindFirstChild("Humanoid")) then
						Bang69 = true;
						while Bang69 and c and c.Parent do
							client69.Character.HumanoidRootPart.CFrame = (r69foundplr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0)) + (r69foundplr.Character.HumanoidRootPart.CFrame.lookVector * f69lwnum);
							client69.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
							hrp0.CFrame = hrp1.CFrame;
							hrp0.Orientation += Vector3.new(0, 0, 180)
							hrp0.Position -= Vector3.new(0, 0, 0)
							hrp0.Velocity = hrp1.Velocity;
							wait();
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			bang69:Stop();
			bangAnim:Destroy();
			Bang69 = false;
		end);
	end);
end});
bangSlider69 = Misc:CreateSlider({SectionParent=Sectionplayrerelatedtp,Name="69 Speed",Range={0,100},Increment=3,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		bang69:AdjustSpeed(Value);
	end);
end});
Inputbangerionspeed69 = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="69 Speed",PlaceholderText="3",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		bang69:AdjustSpeed(Text);
	end);
end});
local ffc1hump = false;
amplitudeof69hump = 1.2;
frequencyof69hump = 1;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="69 Hump",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		plrName = Text;
		clientfacehumpv1 = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		humpfoundPlr69 = getPlr(plrName);
		if humpfoundPlr69 then
			if (humpfoundPlr69.Character and humpfoundPlr69.Character:FindFirstChild("Humanoid")) then
				if ((ffc1hump == true) or (humpfoundPlr69 == speaker)) then
					ffc1hump = false;
					speaker.Character.Humanoid.PlatformStand = false;
					notifyyw("No Longer 69 Humping ", "Not 69 Humping", 2, 10747384394);
					effectfalse();
					LP = game:GetService("Players").LocalPlayer;
					prev = LP.Character:WaitForChild("HumanoidRootPart").CFrame;
					LP.Character.Parent = workspace.Terrain;
					LP.Character:BreakJoints();
					game:GetService("Workspace"):WaitForChild(LP.Name);
					LP.Character:WaitForChild("HumanoidRootPart").CFrame = prev;
					return;
				else
					ffc1hump = true;
					notifyyw("Now 69 Humping", "69 Humping " .. humpfoundPlr69.Name, 2, 10709790644);
					effecttrue();
					lp = game:GetService("Players").LocalPlayer;
					c = lp.Character;
					hrp0 = c:FindFirstChild("HumanoidRootPart");
					hrp1 = hrp0:Clone();
					c.Parent = nil;
					hrp0.Parent = hrp1;
					hrp0.RootJoint.Part0 = nil;
					hrp1.Parent = c;
					c.Parent = workspace;
					c.HumanoidRootPart.RootJoint.C0 = c.HumanoidRootPart.RootJoint.C0 * CFrame.Angles(math.pi, 0, math.pi);
					h = game:GetService("RunService").Heartbeat;
					hrp0.Transparency = 0.85;
					hrp0.Material = Enum.Material.ForceField;
					hrp0.Color = Color3.fromRGB(25, 25, 25);
					while ffc1hump and c and c.Parent do
						speaker.Character.Humanoid.PlatformStand = true;
						time = tick();
						xOffset = amplitudeof69hump * math.sin(2 * math.pi * frequencyof69hump * time);
						clientfacehumpv1.Character.HumanoidRootPart.CFrame = humpfoundPlr69.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0) * CFrame.new(Vector3.new(0, 0, xOffset));
						clientfacehumpv1.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						hrp0.CFrame = hrp1.CFrame;
						hrp0.Orientation += Vector3.new(0, 0, 180)
						hrp0.Position -= Vector3.new(0, 0, 0)
						hrp0.Velocity = hrp1.Velocity;
						wait();
					end
				end
			else
				notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
				effectfalse();
			end
		end
	end);
end});
facebangSliderv1 = Misc:CreateSlider({SectionParent=Sectionplayrerelatedtp,Name="69 Hump Speed",Range={0,10},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		frequencyof69hump = Value;
	end);
end});
faceInputbangerionspeedf1 = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="69 Hump Speed",PlaceholderText="1",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		frequencyof69hump = Text;
	end);
end});
local ffc1 = false;
amplitudeofbangface = 1.2;
frequencyofbangface = 1;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Hump Facebang",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		plrName = Text;
		clientfacev1 = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		facebangv1foundPlr = getPlr(plrName);
		if facebangv1foundPlr then
			if (facebangv1foundPlr.Character and facebangv1foundPlr.Character:FindFirstChild("Humanoid")) then
				if ((ffc1 == true) or (facebangv1foundPlr == speaker)) then
					ffc1 = false;
					speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
					notifyyw("No Longer Facebanging ", "Not Facebanging", 2, 10747384394);
					effectfalse();
					return;
				else
					ffc1 = true;
					notifyyw("Now Facebanging", "Facebanging " .. facebangv1foundPlr.Name, 2, 10709790644);
					effecttrue();
					while ffc1 do
						speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
						time = tick();
						xOffset = amplitudeofbangface * math.sin(2 * math.pi * frequencyofbangface * time);
						clientfacev1.Character.HumanoidRootPart.CFrame = facebangv1foundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0) * CFrame.new(Vector3.new(0, 2, xOffset));
						clientfacev1.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						wait();
					end
				end
			else
				notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
				effectfalse();
			end
		end
	end);
end});
facebangSliderv1 = Misc:CreateSlider({SectionParent=Sectionplayrerelatedtp,Name="Hump Facebang Speed",Range={0,10},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		frequencyofbangface = Value;
	end);
end});
faceInputbangerionspeedf1 = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Hump Facebang Speed",PlaceholderText="1",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		frequencyofbangface = Text;
	end);
end});
local ff = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Sit Facebang",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		client = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		facebangfoundPlr = getPlr(plrName);
		if facebangfoundPlr then
			if (facebangfoundPlr.Character and facebangfoundPlr.Character:FindFirstChild("Humanoid")) then
				if ((ff == true) or (facebangfoundPlr == speaker)) then
					ff = false;
					client.Character.Humanoid.Sit = false;
					notifyyw("No Longer Facebanging ", "Not Facebanging", 2, 10747384394);
					effectfalse();
					return;
				else
					ff = true;
					notifyyw("Facebanging Enabled", "Facebanging " .. facebangfoundPlr.Name, 2, 10709790644);
					effecttrue();
					while ff do
						client.Character.Humanoid.Sit = true;
						client.Character.HumanoidRootPart.CFrame = facebangfoundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0) * CFrame.new(0, 1.6, 0.4);
						client.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
local ffhugger = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Hug",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		client = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		huggingfoundPlr = getPlr(plrName);
		if huggingfoundPlr then
			if not r15(speaker) then
				if (huggingfoundPlr.Character and huggingfoundPlr.Character:FindFirstChild("Humanoid")) then
					if ((ffhugger == true) or (huggingfoundPlr == speaker)) then
						ffhugger = false;
						notifyyw("No Longer Hugging ", "Not Hugging", 2, 10747384394);
						effectfalse();
						zomearm:Stop();
						zombiearmsAnim:Destroy();
						return;
					else
						ffhugger = true;
						zombiearmsAnim = Instance.new("Animation");
						zombiearmsAnim.AnimationId = "rbxassetid://183294396";
						zomearm = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(zombiearmsAnim);
						zomearm:Play();
						zomearm:AdjustSpeed(0);
						notifyyw("Hugging Enabled", "Hugging " .. huggingfoundPlr.Name, 2, 10709790644);
						effecttrue();
						while ffhugger do
							client.Character.HumanoidRootPart.CFrame = huggingfoundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0) * CFrame.new(0.6, 0, 1);
							client.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
							wait();
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
local ff2 = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Animation Facebang",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	local plrName = Text;
	clientv3bang = game:GetService("Players").LocalPlayer;
	function getPlr(name)
		x = nil;
		for i, v in next, game:GetService("Players"):GetPlayers() do
			if string.find(v.Name:lower(), name:lower()) then
				x = v;
				break;
			end
		end
		return x;
	end
	facebangv3foundPlr = getPlr(plrName);
	if facebangv3foundPlr then
		if (facebangv3foundPlr.Character and facebangv3foundPlr.Character:FindFirstChild("Humanoid")) then
			if ((ff2 == true) or (facebangv3foundPlr == speaker)) then
				ff2 = false;
				facebanger:Stop();
				facebangerAnim:Destroy();
				notifyyw("No Longer Facebanging ", "Not Facebanging", 2, 10747384394);
				effectfalse();
				return;
			else
				ff2 = true;
				facebangerAnim = Instance.new("Animation");
				if not r15(speaker) then
					facebangerAnim.AnimationId = "rbxassetid://148840371";
				else
					facebangerAnim.AnimationId = "rbxassetid://5918726674";
				end
				facebanger = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(facebangerAnim);
				facebanger:Play(0.1, 1, 1);
				notifyyw("Facebanging Enabled", "Facebanging " .. facebangv3foundPlr.Name, 2, 10709790644);
				effecttrue();
				while ff2 do
					clientv3bang.Character.HumanoidRootPart.CFrame = facebangv3foundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(180), 0) * CFrame.new(0.4, 1.6, 0.4);
					clientv3bang.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
					wait();
				end
			end
		end
	else
		notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
		effectfalse();
	end
end});
facebangSlider = Misc:CreateSlider({SectionParent=Sectionplayrerelatedtp,Name="Animation Facebanger Speed",Range={0,100},Increment=3,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		facebanger:AdjustSpeed(Value);
	end);
end});
Inputbangerions = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Animation Facebanger Speed",PlaceholderText="3",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		facebanger:AdjustSpeed(Text);
	end);
end});
local actualpb = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="PiggyBack",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		clientpiggyback = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		piggybackfoundPlr = getPlr(plrName);
		if piggybackfoundPlr then
			if (piggybackfoundPlr.Character and piggybackfoundPlr.Character:FindFirstChild("Humanoid")) then
				if ((actualpb == true) or (piggybackfoundPlr == speaker)) then
					actualpb = false;
					notifyyw("No Longer PiggyBacking ", "Not PiggyBacking", 2, 10747384394);
					clientpiggyback.Character.Humanoid.Sit = false;
					effectfalse();
					return;
				else
					actualpb = true;
					notifyyw("Now PiggyBacking", "PiggyBacking " .. piggybackfoundPlr.Name, 2, 10709790644);
					effecttrue();
					while actualpb do
						clientpiggyback.Character.Humanoid.Sit = true;
						clientpiggyback.Character.HumanoidRootPart.CFrame = piggybackfoundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 0.4, 1.2);
						clientpiggyback.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						game:GetService("RunService").RenderStepped:Wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
local pb = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Headsit",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		clientheadsit = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		headsitfoundPlr = getPlr(plrName);
		if headsitfoundPlr then
			if (headsitfoundPlr.Character and headsitfoundPlr.Character:FindFirstChild("Humanoid")) then
				if ((pb == true) or (headsitfoundPlr == speaker)) then
					pb = false;
					notifyyw("No Longer HeadSitting ", "Not HeadSitting", 2, 10747384394);
					clientheadsit.Character.Humanoid.Sit = false;
					effectfalse();
					return;
				else
					pb = true;
					notifyyw("Now HeadSitting", "HeadSitting " .. headsitfoundPlr.Name, 2, 10709790644);
					effecttrue();
					while pb do
						clientheadsit.Character.Humanoid.Sit = true;
						clientheadsit.Character.HumanoidRootPart.CFrame = headsitfoundPlr.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 1.6, 0.4);
						clientheadsit.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new();
						game:GetService("RunService").RenderStepped:Wait();
					end
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
local orbitingfuck = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Orbit",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		coribtlient = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		orbitfoundPlr = getPlr(plrName);
		if orbitfoundPlr then
			if ((orbitingfuck == true) or (orbitfoundPlr == speaker)) then
				effectfalse();
				orbitingfuck = false;
				notifyyw("No Longer Orbiting ", "Not Orbiting", 2, 10747384394);
				for i, v in pairs(coribtlient.Character:GetDescendants()) do
					if ((v.Name == "OrbitalDestructionPart") or (v.Name == "OrbitalDestruction")) then
						v:Destroy();
					end
				end
				coribtlient.Character.Humanoid.PlatformStand = false;
				coribtlient.Character.Humanoid.Sit = false;
				return;
			else
				orbitingfuck = true;
				effecttrue();
				notifyyw("Now Orbiting", "Orbiting Around " .. orbitfoundPlr.Name, 2, 10709790644);
				local P = Instance.new("Part", orbitfoundPlr.Character);
				P.Transparency = 1;
				P.Name = "ThePart";
				P.Size = Vector3.new(1.7, 1.7, 1.7);
				P.Massless = true;
				P.CanCollide = false;
				local W = Instance.new("Weld", P);
				W.Part1 = orbitfoundPlr.Character.HumanoidRootPart;
				W.Part0 = P;
				local sine = 0;
				local change = 1;
				local spin = 0;
				local spin2 = 0;
				local rp = Instance.new("RocketPropulsion");
				rp.Parent = coribtlient.Character.HumanoidRootPart;
				rp.CartoonFactor = 1;
				rp.MaxThrust = 5000;
				rp.MaxSpeed = 100;
				rp.ThrustP = 5000;
				rp.Name = "OrbitalDestructionPart";
				rp.Target = orbitfoundPlr.Character.ThePart;
				rp:Fire();
				coribtlient.Character.Humanoid.PlatformStand = true;
				while orbitingfuck do
					game:GetService("RunService").RenderStepped:wait();
					sine = sine + change;
					spin2 = spin2 + 0.6;
					spin = spin + 1;
					W.C0 = CFrame.new(7 * math.cos(20), -2 - (2 * math.sin(sine / 10)), 7 * math.sin(20)) * CFrame.Angles(math.rad(0), math.rad(spin), math.rad(0));
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
local closeorbitingfuck = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Close Orbit",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		closecoribtlient = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		closeorbitfoundPlr = getPlr(plrName);
		if closeorbitfoundPlr then
			if ((closeorbitingfuck == true) or (closeorbitfoundPlr == speaker)) then
				effectfalse();
				closeorbitingfuck = false;
				notifyyw("No Longer Orbiting ", "Not Orbiting", 2, 10747384394);
				for i, v in pairs(closecoribtlient.Character:GetDescendants()) do
					if ((v.Name == "OrbitalDestructionPart") or (v.Name == "OrbitalDestruction")) then
						v:Destroy();
					end
				end
				closecoribtlient.Character.Humanoid.Sit = false;
				return;
			else
				closeorbitingfuck = true;
				effecttrue();
				notifyyw("Now Orbiting", "Orbiting Around " .. closeorbitfoundPlr.Name, 2, 10709790644);
				local rp = Instance.new("RocketPropulsion");
				rp.Parent = closecoribtlient.Character.HumanoidRootPart;
				rp.CartoonFactor = 1;
				rp.MaxThrust = 5000;
				rp.MaxSpeed = 100;
				rp.ThrustP = 5000;
				rp.Name = "OrbitalDestruction";
				rp.Target = closeorbitfoundPlr.Character.HumanoidRootPart;
				rp:Fire();
				closecoribtlient.Character.Humanoid.Sit = true;
				while closeorbitingfuck do
					game:GetService("RunService").RenderStepped:wait();
					sine = sine + change;
					spin2 = spin2 + 0.6;
					spin = spin + 1;
					W.C0 = CFrame.new(7 * math.cos(20), -2 - (2 * math.sin(sine / 10)), 7 * math.sin(20)) * CFrame.Angles(math.rad(0), math.rad(spin), math.rad(0));
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
Paragraph = Misc:CreateParagraph({Title="Look At Info",Content="Make's Your Character Look At The Target. Best Used With Anti Ragdoll Which Is In the Anti Section"}, Sectionplayrerelatedtp);
local lookingAt = false;
Input = Misc:CreateInput({SectionParent=Sectionplayrerelatedtp,Name="Look At",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		local plrName = Text;
		cllookatient = game:GetService("Players").LocalPlayer;
		function getPlr(name)
			x = nil;
			for i, v in next, game:GetService("Players"):GetPlayers() do
				if string.find(v.Name:lower(), name:lower()) then
					x = v;
					break;
				end
			end
			return x;
		end
		LookAtfoundPlr = getPlr(plrName);
		if LookAtfoundPlr then
			if ((lookingAt == true) or (LookAtfoundPlr == speaker)) then
				lookingAt = false;
				effectfalse();
				notifyyw("No Longer Looking At", "Not Looking At", 2, 10747384394);
				return;
			else
				lookingAt = true;
				effecttrue();
				notifyyw("Now Looking At", "Looking At " .. LookAtfoundPlr.Name, 2, 10709790644);
				while lookingAt do
					game:GetService("RunService").Heartbeat:Wait();
					speaker.Character.HumanoidRootPart.CFrame = CFrame.new(speaker.Character.HumanoidRootPart.Position, LookAtfoundPlr.Character.HumanoidRootPart.Position);
				end
			end
		else
			notifyyw("Player Does Not Exist!", "Bro Does Not Exist!", 2, 10747384394);
			effectfalse();
		end
	end);
end});
Sectionreset = Misc:CreateSection("FE LocalPlayer Related | Reset", false, true, 9134761478);
Button = Misc:CreateButton({SectionParent=Sectionreset,Name="Enable Reset Button",Interact="Click",Callback=function()
	game:GetService("StarterGui"):SetCore("ResetButtonCallback", true);
	effecttrue();
	Rayfield:Notify({Title="Reset!",Content="Reset Button Is Now Available In The Esc Menu!",Duration=3,Image=7733715400});
end});
Button = Misc:CreateButton({SectionParent=Sectionreset,Name="Normal Character Reset",Interact="Click",Callback=function()
	game.Players.LocalPlayer.Character.Humanoid.Health = 0;
	effecttrue();
	Rayfield:Notify({Title="Reset!",Content=("Reseted " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Label = Misc:CreateLabel("⬇ This Character Reset Goes To Your Position When You Died ⬇", Sectionreset);
Button = Misc:CreateButton({SectionParent=Sectionreset,Name="Character Reset",Interact="Click",Callback=function()
	LP = game:GetService("Players").LocalPlayer;
	prev = LP.Character:WaitForChild("HumanoidRootPart").CFrame;
	LP.Character.Parent = workspace.Terrain;
	LP.Character:BreakJoints();
	game:GetService("Workspace"):WaitForChild(LP.Name);
	LP.Character:WaitForChild("HumanoidRootPart").CFrame = prev;
	effecttrue();
	Rayfield:Notify({Title="Reset!",Content=("Reseted " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Button = Misc:CreateButton({SectionParent=Sectionreset,Name="Commit Oof",Callback=function()
	A_1 = "This is it im doing it.";
	A_2 = "All";
	Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest;
	Event:FireServer(A_1, A_2);
	wait(1);
	A_1 = "I'm going to commit oof.";
	A_2 = "All";
	Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest;
	Event:FireServer(A_1, A_2);
	wait(1);
	A_1 = "Sayonara cruel world.";
	A_2 = "All";
	Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest;
	Event:FireServer(A_1, A_2);
	wait(1);
	LocalPlayer = game:GetService("Players").LocalPlayer;
	LocalPlayer.Character.Humanoid:MoveTo(LocalPlayer.Character.HumanoidRootPart.Position + (LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 10));
	LocalPlayer.Character.Humanoid.Jump = true;
	wait(0.5);
	function Iterate(instance, func)
		for i, v in next, instance:GetChildren() do
			func(v);
		end
	end
	limbs = {["Right Leg"]=true,["Right Arm"]=true,["Left Leg"]=true,["Left Arm"]=true};
	Iterate(LocalPlayer.Character, function(v)
		if v:IsA("BasePart") then
			attachment = Instance.new("Attachment");
			attachment.Parent = v;
			attachment.Name = v.Name .. "[Attachment]";
			if limbs[v.Name] then
				attachment.Position = Vector3.new(0, v.Size.Y / 2, 0);
			elseif (v.Name == "Head") then
				attachment.Position = Vector3.new(0, -v.Size.Y / 2, 0);
				attachment.Rotation = Vector3.new(0, 0, -90);
			end
		end
	end);
	leftLegAttachment = Instance.new("Attachment");
	leftLegAttachment.Position = Vector3.new(-0.5, -1, 0);
	leftLegAttachment.Rotation = Vector3.new(0, -90, 0);
	rightLegAttachment = Instance.new("Attachment");
	rightLegAttachment.Position = Vector3.new(0.5, -1, 0);
	rightLegAttachment.Rotation = Vector3.new(0, -90, 0);
	rightLegAttachment.Parent, leftLegAttachment.Parent = LocalPlayer.Character.Torso, LocalPlayer.Character.Torso;
	jointAttachments = {Head={Attachment0=LocalPlayer.Character.Torso['NeckAttachment'],Attachment1=LocalPlayer.Character.Head["Head[Attachment]"]},["Left Arm"]={Attachment0=LocalPlayer.Character.Torso['LeftCollarAttachment'],Attachment1=LocalPlayer.Character["Left Arm"]["Left Arm[Attachment]"]},["Right Arm"]={Attachment0=LocalPlayer.Character.Torso['RightCollarAttachment'],Attachment1=LocalPlayer.Character["Right Arm"]["Right Arm[Attachment]"]},["Left Leg"]={Attachment0=leftLegAttachment,Attachment1=LocalPlayer.Character["Left Leg"]["Left Leg[Attachment]"]},["Right Leg"]={Attachment0=rightLegAttachment,Attachment1=LocalPlayer.Character["Right Leg"]["Right Leg[Attachment]"]}};
	LocalPlayer.Character.Humanoid.PlatformStand = true;
	Iterate(LocalPlayer.Character, function(v)
		if v:IsA("BasePart") then
			if jointAttachments[v.Name] then
				ballSocketJoint = Instance.new("BallSocketConstraint");
				ballSocketJoint.Parent = v;
				ballSocketJoint.Radius = 0.15;
				ballSocketJoint.Attachment0, ballSocketJoint.Attachment1 = jointAttachments[v.Name]['Attachment0'], jointAttachments[v.Name]['Attachment1'];
			end
		end
	end);
	Iterate(LocalPlayer.Character.Torso, function(v)
		if v:IsA("Motor") then
			v:Remove();
		end
	end);
	effecttrue();
	Rayfield:Notify({Title="Damn Bro,",Content="Why'd You Kill Yourself?",Duration=3,Image=7733715400});
end});
Sectionflights = Misc:CreateSection("FE LocalPlayer Related | Flight", false, false, 9134755504);
Buttonresetflysvalue = Misc:CreateButton({SectionParent=Sectionflights,Name="Reset Fly Values",Interact="Click",Callback=function()
	pcall(function()
		Slidervehicleflyspeed:Set(3);
		Slidercfspeed:Set(50);
		Sliderflyspeed:Set(3);
	end);
end});
Paragraph = Misc:CreateParagraph({Title="Grapple Info",Content="Make's Your Character Move To The Mouse\nex. You Put Your Mouse Up, Your Character Goes Up"}, Sectionflights);
local moveToMouse = false;
Togglegrappleasdasd = Misc:CreateToggle({SectionParent=Sectionflights,Name="Grapple",CurrentValue=false,Callback=function(Value)
	pcall(function()
		grapplier = Value;
		if grapplier then
			local grappleuserdied;
			grappleuserdied = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				Togglegrappleasdasd:Set(false);
			end);
			moveToMouse = true;
			local bpNew = Instance.new("BodyPosition", speaker.Character.HumanoidRootPart);
			while moveToMouse do
				wait();
				local mousePosY = JMouse.Hit.Y;
				local mousePosX = JMouse.Hit.X;
				local mousePosZ = JMouse.Hit.Z;
				bpNew.Position = Vector3.new(mousePosX, mousePosY, mousePosZ);
			end
		end
		if not grapplier then
			moveToMouse = false;
			speaker.Character.HumanoidRootPart.BodyPosition:Destroy();
		end
	end);
end});
CFspeed = 50;
cframeflykeybind = "";
Paragraph = Misc:CreateParagraph({Title="CFrame Fly Info",Content="This Version Of Fly Bypasses Most Anti-Cheat's"}, Sectionflights);
Toggleflii = Misc:CreateToggle({SectionParent=Sectionflights,Name="CFrame Fly",CurrentValue=false,Callback=function(Value)
	pcall(function()
		cfffly = Value;
		if cfffly then
			speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
			local Head = speaker.Character:WaitForChild("Head");
			Head.Anchored = true;
			if CFloop then
				CFloop:Disconnect();
			end
			CFloop = RunService.Heartbeat:Connect(function(deltaTime)
				moveDirection = speaker.Character:FindFirstChildOfClass("Humanoid").MoveDirection * CFspeed * deltaTime;
				headCFrame = Head.CFrame;
				local cameraCFrame = workspace.CurrentCamera.CFrame;
				cameraOffset = headCFrame:ToObjectSpace(cameraCFrame).Position;
				cameraCFrame = cameraCFrame * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1);
				local cameraPosition = cameraCFrame.Position;
				local headPosition = headCFrame.Position;
				objectSpaceVelocity = CFrame.new(cameraPosition, Vector3.new(headPosition.X, cameraPosition.Y, headPosition.Z)):VectorToObjectSpace(moveDirection);
				Head.CFrame = CFrame.new(headPosition) * (cameraCFrame - cameraPosition) * CFrame.new(objectSpaceVelocity);
			end);
		else
			pcall(function()
				CFloop:Disconnect();
				speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
				Head = speaker.Character:WaitForChild("Head");
				Head.Anchored = false;
			end);
		end
	end);
end});
Buttoncframefly = Misc:CreateButton({SectionParent=Sectionflights,Name="CFrame Fly",Interact="Click",Callback=function()
	pcall(function()
		Rayfield:Notify({Title="Wait..",Content="Loading...",Duration=3,Image=7733715400});
		wait(3);
		Buttoncframefly:Set("CFrame Fly (Exed)");
		effecttrue();
		if (cframeflykeybind == "") then
			Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
		else
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
		end
		repeat
			wait();
		until JMouse 
		togcfly = false;
		JMouse.KeyDown:connect(function(key)
			if (key:lower() == cframeflykeybind) then
				if togcfly then
					togcfly = false;
					speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
					local Head = speaker.Character:WaitForChild("Head");
					Head.Anchored = true;
					if CFloop then
						CFloop:Disconnect();
					end
					CFloop = RunService.Heartbeat:Connect(function(deltaTime)
						moveDirection = speaker.Character:FindFirstChildOfClass("Humanoid").MoveDirection * CFspeed * deltaTime;
						headCFrame = Head.CFrame;
						local cameraCFrame = workspace.CurrentCamera.CFrame;
						cameraOffset = headCFrame:ToObjectSpace(cameraCFrame).Position;
						cameraCFrame = cameraCFrame * CFrame.new(-cameraOffset.X, -cameraOffset.Y, -cameraOffset.Z + 1);
						local cameraPosition = cameraCFrame.Position;
						local headPosition = headCFrame.Position;
						objectSpaceVelocity = CFrame.new(cameraPosition, Vector3.new(headPosition.X, cameraPosition.Y, headPosition.Z)):VectorToObjectSpace(moveDirection);
						Head.CFrame = CFrame.new(headPosition) * (cameraCFrame - cameraPosition) * CFrame.new(objectSpaceVelocity);
					end);
				else
					pcall(function()
						togcfly = true;
						CFloop:Disconnect();
						speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
						Head = speaker.Character:WaitForChild("Head");
						Head.Anchored = false;
					end);
				end
			end
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionflights,Name="Change CFrame Fly Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	cframeflykeybind = Text;
end});
Slidercfspeed = Misc:CreateSlider({SectionParent=Sectionflights,Name="CFrame Fly Speed",Range={1,500},Increment=1,Suffix="CFrame Speed",CurrentValue=50,Callback=function(Value)
	pcall(function()
		CFspeed = Value;
	end);
end});
Inputcfspeed = Misc:CreateInput({SectionParent=Sectionflights,Name="CFrame Fly Speed",PlaceholderText=50,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	CFspeed = Text;
end});
Toggleflii = Misc:CreateToggle({SectionParent=Sectionflights,Name="Fly",CurrentValue=false,Callback=function(Value)
	pcall(function()
		flying = Value;
		if flying then
			flying = true;
			sFLY();
		else
			flying = false;
		end
	end);
end});
Buttonnormalfly = Misc:CreateButton({SectionParent=Sectionflights,Name="Fly",Callback=function()
	Buttonnormalfly:Set("Fly (Exed)");
	effecttrue();
	if (flykeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	pcall(function()
		JMouse.KeyDown:connect(function(key)
			if (key:lower() == flykeybind) then
				if flying then
					flying = false;
				else
					flying = true;
					sFLY();
				end
			end
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionflights,Name="Change Fly Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	flykeybind = Text;
end});
Sliderflyspeed = Misc:CreateSlider({SectionParent=Sectionflights,Name="Fly Speed",Range={1,15},Increment=1,Suffix="Fly Speed",CurrentValue=3,Callback=function(Value)
	pcall(function()
		flyysspeed = Value;
	end);
end});
Inputflyspeed = Misc:CreateInput({SectionParent=Sectionflights,Name="Fly Speed",PlaceholderText=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	flyysspeed = Text;
end});
vehicleflykeybind = "";
Toggleflii = Misc:CreateToggle({SectionParent=Sectionflights,Name="Vehicle Fly",CurrentValue=false,Callback=function(Value)
	pcall(function()
		flying = Value;
		if flying then
			sFLY(true);
		else
			flying = false;
		end
	end);
end});
Buttonvefly = Misc:CreateButton({SectionParent=Sectionflights,Name="Vehicle Fly",Interact="Click",Callback=function()
	Buttonvefly:Set("Vehicle Fly (Exed)");
	effecttrue();
	if (vehicleflykeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	pcall(function()
		JMouse.KeyDown:connect(function(key)
			if (key:lower() == vehicleflykeybind) then
				if flying then
					flying = false;
				else
					sFLY(true);
				end
			end
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionflights,Name="Change Vehicle Fly Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	vehicleflykeybind = Text;
end});
Slidervehicleflyspeed = Misc:CreateSlider({SectionParent=Sectionflights,Name="Vehicle Fly Speed",Range={1,15},Increment=1,Suffix="Vehicle Fly Speed",CurrentValue=3,Callback=function(Value)
	pcall(function()
		vehicleflyspeed = Value;
	end);
end});
Inputvehicleflyspeed = Misc:CreateInput({SectionParent=Sectionflights,Name="Vehicle Fly Speed",PlaceholderText=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	vehicleflyspeed = Text;
end});
Sectionplayerealtefunc = Misc:CreateSection("FE LocalPlayer Related | Function's & Keybind's", false, false, 10686489468);
Button = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Upside Down Character",Interact="Click",Callback=function()
	pcall(function()
		if not r15(speaker) then
			effecttrue();
			Rayfield:Notify({Title="Your Now Upside Down!",Content="Your Upside Down Until You Reset!\nAnd When You Sit In A Chair!\nR6 Only!",Duration=5,Image=7733715400});
			lp = game:GetService("Players").LocalPlayer;
			c = lp.Character;
			hrp0 = c:FindFirstChild("HumanoidRootPart");
			hrp1 = hrp0:Clone();
			c.Parent = nil;
			hrp0.Parent = hrp1;
			hrp0.RootJoint.Part0 = nil;
			hrp1.Parent = c;
			c.Parent = workspace;
			c.HumanoidRootPart.RootJoint.C0 = c.HumanoidRootPart.RootJoint.C0 * CFrame.Angles(math.pi, 0, math.pi);
			h = game:GetService("RunService").Heartbeat;
			hrp0.Transparency = 0.85;
			hrp0.Material = Enum.Material.ForceField;
			hrp0.Color = Color3.fromRGB(25, 25, 25);
			while h:Wait() and c and c.Parent do
				hrp0.CFrame = hrp1.CFrame;
				hrp0.Orientation += Vector3.new(0, 0, 180)
				hrp0.Position -= Vector3.new(0, 1, 0)
				hrp0.Velocity = hrp1.Velocity;
			end
		else
			effectfalse();
			Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
		end
	end);
end});
Button = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Break Velocity",Interact="Click",Callback=function()
	breakvelocity();
	effecttrue();
	Rayfield:Notify({Title="Broke Velocity!",Content="Broke Character's Velocity!",Duration=3,Image=7733715400});
end});
Button = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Delete Velocity",Interact="Click",Callback=function()
	for i, v in pairs(speaker.Character:GetDescendants()) do
		if (v:IsA("BodyVelocity") or v:IsA("BodyGyro") or v:IsA("RocketPropulsion") or v:IsA("BodyThrust") or v:IsA("BodyAngularVelocity") or v:IsA("AngularVelocity") or v:IsA("BodyForce") or v:IsA("VectorForce") or v:IsA("LineForce")) then
			v:Destroy();
		end
	end
	effecttrue();
	Rayfield:Notify({Title="Delete Velocity!",Content="Deleted Character's Velocity!",Duration=3,Image=7733715400});
end});
freezekeybind = "";
Buttonfreezee = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Freeze Yourself / Anchor",Interact="Click",Callback=function()
	Buttonfreezee:Set("Freeze Yourself / Anchor (Exed)");
	effecttrue();
	if (freezekeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	local freezeanchor = false;
	JMouse.KeyDown:connect(function(key)
		if (key:lower() == freezekeybind) then
			freezeanchor = not freezeanchor;
			for _, v in pairs(speaker.Character:GetChildren()) do
				if v:IsA("BasePart") then
					v.Anchored = freezeanchor;
				end
			end
		end
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionplayerealtefunc,Name="Change Freeze Yourself /.. Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	freezekeybind = Text;
end});
Button = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Strengthen Character",Interact="Click",Callback=function()
	for i, player in pairs(speaker.Character:GetChildren()) do
		if (player.ClassName == "Part") then
			player.CustomPhysicalProperties = PhysicalProperties.new(999999, 0.3, 0.5);
		end
	end
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content="Script Is Now Working!\nPush Something.",Duration=3,Image=7733715400});
end});
tripkeybind = "";
Buttontrip = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Trip",Interact="Click",Callback=function()
	Buttontrip:Set("Trip (Exed)");
	effecttrue();
	if (tripkeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	JMouse.KeyDown:connect(function(key)
		if (key:lower() == tripkeybind) then
			if (speaker and speaker.Character and speaker.Character:FindFirstChildOfClass("Humanoid") and getRoot(speaker.Character)) then
				hum = speaker.Character:FindFirstChildOfClass("Humanoid");
				root = getRoot(speaker.Character);
				hum:ChangeState(0);
				root.Velocity = root.CFrame.LookVector * 30;
			end
		end
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionplayerealtefunc,Name="Change Trip Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	tripkeybind = Text;
end});
Button = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Sit",Interact="Click",Callback=function()
	speaker.Character:FindFirstChildOfClass("Humanoid").Sit = true;
end});
sitkeybind = "";
Buttonsitvers = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Sit Keybind Version",Interact="Click",Callback=function()
	Buttonsitvers:Set("Sit Keybind Version (Exed)");
	effecttrue();
	if (sitkeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	JMouse.KeyDown:connect(function(key)
		if (key:lower() == sitkeybind) then
			speaker.Character:FindFirstChildOfClass("Humanoid").Sit = true;
		end
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionplayerealtefunc,Name="Change Sit Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	sitkeybind = Text;
end});
stunkeybindder = "";
Buttonstunnar = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="Stun",Interact="Click",Callback=function()
	stunnedno = false;
	Buttonstunnar:Set("Stun (Exed)");
	effecttrue();
	if (stunkeybindder == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	JMouse.KeyDown:connect(function(key)
		if (key:lower() == stunkeybindder) then
			if stunnedno then
				stunnedno = false;
				speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
			else
				stunnedno = true;
				speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
			end
		end
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionplayerealtefunc,Name="Change Stun Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	stunkeybindder = Text;
end});
Button = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="God Mode",Interact="Click",Callback=function()
	effecttrue();
	Rayfield:Notify({Title="God Mode!",Content="You Executed God Mode Until You Reset!",Duration=3,Image=7733715400});
	Cam = workspace.CurrentCamera;
	Pos, Char = Cam.CFrame, speaker.Character;
	Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid");
	nHuman = Human.Clone(Human);
	nHuman.Parent, speaker.Character = Char, nil;
	nHuman.SetStateEnabled(nHuman, 15, false);
	nHuman.SetStateEnabled(nHuman, 1, false);
	nHuman.SetStateEnabled(nHuman, 0, false);
	nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human);
	speaker.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos;
	nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None;
	Script = Char.FindFirstChild(Char, "Animate");
	if Script then
		Script.Disabled = true;
		wait();
		Script.Disabled = false;
	end
	nHuman.Health = nHuman.MaxHealth;
end});
godmodekeybind = "";
Buttongodmodevers = Misc:CreateButton({SectionParent=Sectionplayerealtefunc,Name="God Mode Keybind Version",Interact="Click",Callback=function()
	Buttongodmodevers:Set("God Mode Keybind Version (Exed)");
	effecttrue();
	if (godmodekeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	JMouse.KeyDown:connect(function(key)
		if (key:lower() == godmodekeybind) then
			Rayfield:Notify({Title="God Mode!",Content="You Executed God Mode Until You Reset!",Duration=3,Image=7733715400});
			Cam = workspace.CurrentCamera;
			Pos, Char = Cam.CFrame, speaker.Character;
			Human = Char and Char.FindFirstChildWhichIsA(Char, "Humanoid");
			nHuman = Human.Clone(Human);
			nHuman.Parent, speaker.Character = Char, nil;
			nHuman.SetStateEnabled(nHuman, 15, false);
			nHuman.SetStateEnabled(nHuman, 1, false);
			nHuman.SetStateEnabled(nHuman, 0, false);
			nHuman.BreakJointsOnDeath, Human = true, Human.Destroy(Human);
			speaker.Character, Cam.CameraSubject, Cam.CFrame = Char, nHuman, wait() and Pos;
			nHuman.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None;
			Script = Char.FindFirstChild(Char, "Animate");
			if Script then
				Script.Disabled = true;
				wait();
				Script.Disabled = false;
			end
			nHuman.Health = nHuman.MaxHealth;
		end
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionplayerealtefunc,Name="Change God Mode Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	godmodekeybind = Text;
end});
carParts = {};
Sectionnoclip = Misc:CreateSection("FE LocalPlayer Related | NoClip", false, false, 14385986465);
noclippkeybind = "";
Togglenoclip = Misc:CreateToggle({SectionParent=Sectionnoclip,Name="NoClip",CurrentValue=false,Callback=function(Value)
	nnoclipping = Value;
	if nnoclipping then
		Clip = false;
		wait(0.1);
		local function NoclipLoop()
			if ((Clip == false) and (speaker.Character ~= nil)) then
				for _, child in pairs(speaker.Character:GetDescendants()) do
					if (child:IsA("BasePart") and (child.CanCollide == true) and (child.Name ~= floatName)) then
						child.CanCollide = false;
					end
				end
			end
		end
		Noclipping = RunService.Stepped:Connect(NoclipLoop);
	end
	if not nnoclipping then
		if Noclipping then
			Noclipping:Disconnect();
		end
		Clip = true;
	end
	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		Togglenoclip:Set(false);
	end);
end});
Buttonnoclip = Misc:CreateButton({SectionParent=Sectionnoclip,Name="NoClip",Interact="Click",Callback=function()
	pcall(function()
		Buttonnoclip:Set("Noclip (Exed)");
		effecttrue();
		if (noclippkeybind == "") then
			Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
		else
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
		end
		repeat
			wait();
		until JMouse 
		JMouse.KeyDown:connect(function(key)
			if (key:lower() == noclippkeybind) then
				pcall(function()
					Clip = false;
					wait(0.1);
					local function NoclipLoop()
						if ((Clip == false) and (speaker.Character ~= nil)) then
							for _, child in pairs(speaker.Character:GetDescendants()) do
								if (child:IsA("BasePart") and (child.CanCollide == true) and (child.Name ~= floatName)) then
									child.CanCollide = false;
								end
							end
						end
					end
					Noclipping = RunService.Stepped:Connect(NoclipLoop);
				end);
			else
				pcall(function()
					if Noclipping then
						Noclipping:Disconnect();
					end
					Clip = true;
				end);
			end
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionnoclip,Name="Change NoClip Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	noclippkeybind = Text;
end});
vehiclenoclippkeybind = "";
ToggleVehiclenoclip = Misc:CreateToggle({SectionParent=Sectionnoclip,Name="Vehicle NoClip",CurrentValue=false,Callback=function(Value)
	ToggleVehiclenoclipnnoclipping = Value;
	if ToggleVehiclenoclipnnoclipping then
		local Car = speaker.Character.Humanoid.SeatPart;
		for i, v in pairs(Car.Parent.Parent:GetDescendants()) do
			if v:IsA("BasePart") then
				if v.CanCollide then
					v.CanCollide = false;
					table.insert(carParts, v);
				end
			end
		end
	end
	if not ToggleVehiclenoclipnnoclipping then
		local Car = speaker.Character.Humanoid.SeatPart;
		for i, v in pairs(carParts) do
			if v:IsA("BasePart") then
				v.CanCollide = true;
			end
		end
	end
	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		ToggleVehiclenoclip:Set(false);
	end);
end});
Buttonvnoclip = Misc:CreateButton({SectionParent=Sectionnoclip,Name="Vehicle NoClip",Interact="Click",Callback=function()
	pcall(function()
		Buttonvnoclip:Set("Vehicle Noclip (Exed)");
		effecttrue();
		if (vehiclenoclippkeybind == "") then
			Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
		else
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
		end
		repeat
			wait();
		until JMouse 
		JMouse.KeyDown:connect(function(key)
			if (key:lower() == vehiclenoclippkeybind) then
				Buttonvnoclip:Set("Vehicle Noclip (Exed) (ON)");
				pcall(function()
					local Car = speaker.Character.Humanoid.SeatPart;
					for i, v in pairs(Car.Parent.Parent:GetDescendants()) do
						if v:IsA("BasePart") then
							if v.CanCollide then
								v.CanCollide = false;
								table.insert(carParts, v);
							end
						end
					end
				end);
			else
				pcall(function()
					Buttonvnoclip:Set("Vehicle Noclip (Exed) (OFF)");
					local Car = speaker.Character.Humanoid.SeatPart;
					for i, v in pairs(carParts) do
						if v:IsA("BasePart") then
							v.CanCollide = true;
						end
					end
				end);
			end
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionnoclip,Name="Change Vehicle Noclip Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	vehiclenoclippkeybind = Text;
end});
Sectioninvisible = Misc:CreateSection("FE LocalPlayer Related | Invisible's", false, false, 14386256326);
inviskeybind = "";
Toggleinvisibleeee = Misc:CreateToggle({SectionParent=Sectioninvisible,Name="Invisible",CurrentValue=false,Callback=function(Value)
	pcall(function()
		invisibleeee = Value;
		if invisibleeee then
			Player = speaker;
			repeat
				wait(0.1);
			until Player.Character 
			Character = Player.Character;
			Character.Archivable = true;
			IsInvis = false;
			IsRunning = true;
			InvisibleCharacter = Character:Clone();
			InvisibleCharacter.Parent = Lighting;
			Void = workspace.FallenPartsDestroyHeight;
			InvisibleCharacter.Name = "";
			local CF;
			invisFix = RunService.Stepped:Connect(function()
				pcall(function()
					local IsInteger;
					if tostring(Void):find("-") then
						IsInteger = true;
					else
						IsInteger = false;
					end
					Pos = Player.Character.HumanoidRootPart.Position;
					Pos_String = tostring(Pos);
					Pos_Seperate = Pos_String:split(", ");
					X = tonumber(Pos_Seperate[1]);
					Y = tonumber(Pos_Seperate[2]);
					Z = tonumber(Pos_Seperate[3]);
					if (IsInteger == true) then
						if (Y <= Void) then
							Respawn();
						end
					elseif (IsInteger == false) then
						if (Y >= Void) then
							Respawn();
						end
					end
				end);
			end);
			for i, v in pairs(InvisibleCharacter:GetDescendants()) do
				if v:IsA("BasePart") then
					if (v.Name == "HumanoidRootPart") then
						v.Transparency = 1;
					else
						v.Material = Enum.Material.ForceField;
						v.Color = Color3.fromRGB(25, 25, 25);
					end
				end
			end
			function Respawn()
				IsRunning = false;
				if (IsInvis == true) then
					pcall(function()
						Player.Character = Character;
						wait();
						Character.Parent = workspace;
						Character:FindFirstChildWhichIsA("Humanoid"):Destroy();
						IsInvis = false;
						InvisibleCharacter.Parent = nil;
						invisRunning = false;
					end);
				elseif (IsInvis == false) then
					pcall(function()
						Player.Character = Character;
						wait();
						Character.Parent = workspace;
						Character:FindFirstChildWhichIsA("Humanoid"):Destroy();
						TurnVisible();
					end);
				end
			end
			local invisDied;
			invisDied = InvisibleCharacter:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				Respawn();
				invisDied:Disconnect();
			end);
			if (IsInvis == true) then
				return;
			end
			IsInvis = true;
			CF = workspace.CurrentCamera.CFrame;
			local CF_1 = Player.Character.HumanoidRootPart.CFrame;
			Character:MoveTo(Vector3.new(0, math.pi * 1000000, 0));
			workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable;
			wait(0.2);
			workspace.CurrentCamera.CameraType = Enum.CameraType.Custom;
			InvisibleCharacter = InvisibleCharacter;
			Character.Parent = Lighting;
			InvisibleCharacter.Parent = workspace;
			InvisibleCharacter.HumanoidRootPart.CFrame = CF_1;
			Player.Character = InvisibleCharacter;
			game.workspace.CurrentCamera:remove();
			wait(0.1);
			repeat
				wait();
			until speaker.Character ~= nil 
			game.workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA("Humanoid");
			game.workspace.CurrentCamera.CameraType = "Custom";
			speaker.CameraMinZoomDistance = 0.5;
			speaker.CameraMaxZoomDistance = 400;
			speaker.CameraMode = "Classic";
			speaker.Character.Head.Anchored = false;
			Player.Character.Animate.Disabled = true;
			Player.Character.Animate.Disabled = false;
			function TurnVisible()
				if (IsInvis == false) then
					return;
				end
				invisFix:Disconnect();
				invisDied:Disconnect();
				CF = workspace.CurrentCamera.CFrame;
				Character = Character;
				local CF_1 = Player.Character.HumanoidRootPart.CFrame;
				Character.HumanoidRootPart.CFrame = CF_1;
				InvisibleCharacter:Destroy();
				Player.Character = Character;
				Character.Parent = workspace;
				IsInvis = false;
				Player.Character.Animate.Disabled = true;
				Player.Character.Animate.Disabled = false;
				invisDied = Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
					Respawn();
					invisDied:Disconnect();
				end);
			end
		end
		if not invisibleeee then
			TurnVisible();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleinvisibleeee:Set(false);
		end);
	end);
end});
Buttoninvis = Misc:CreateButton({SectionParent=Sectioninvisible,Name="Invisible",Interact="Click",Callback=function()
	Buttoninvis:Set("Invisible (Exed)");
	effecttrue();
	if (inviskeybind == "") then
		Rayfield:Notify({Title="Setup A Keybind!",Content="Setup a Keybind To Use This Function!",Duration=3,Image=7733715400});
	else
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=5,Image=7733715400});
	end
	repeat
		wait();
	until JMouse 
	toginvis = false;
	function Invisfuncc()
		Player = speaker;
		repeat
			wait(0.1);
		until Player.Character 
		Character = Player.Character;
		Character.Archivable = true;
		IsInvis = false;
		IsRunning = true;
		InvisibleCharacter = Character:Clone();
		InvisibleCharacter.Parent = Lighting;
		Void = workspace.FallenPartsDestroyHeight;
		InvisibleCharacter.Name = "";
		local CF;
		invisFix = RunService.Stepped:Connect(function()
			pcall(function()
				local IsInteger;
				if tostring(Void):find("-") then
					IsInteger = true;
				else
					IsInteger = false;
				end
				Pos = Player.Character.HumanoidRootPart.Position;
				Pos_String = tostring(Pos);
				Pos_Seperate = Pos_String:split(", ");
				X = tonumber(Pos_Seperate[1]);
				Y = tonumber(Pos_Seperate[2]);
				Z = tonumber(Pos_Seperate[3]);
				if (IsInteger == true) then
					if (Y <= Void) then
						Respawn();
					end
				elseif (IsInteger == false) then
					if (Y >= Void) then
						Respawn();
					end
				end
			end);
		end);
		for i, v in pairs(InvisibleCharacter:GetDescendants()) do
			if v:IsA("BasePart") then
				if (v.Name == "HumanoidRootPart") then
					v.Transparency = 1;
				else
					v.Material = Enum.Material.ForceField;
					v.Color = Color3.fromRGB(25, 25, 25);
				end
			end
		end
		function Respawn()
			IsRunning = false;
			if (IsInvis == true) then
				pcall(function()
					Player.Character = Character;
					wait();
					Character.Parent = workspace;
					Character:FindFirstChildWhichIsA("Humanoid"):Destroy();
					IsInvis = false;
					InvisibleCharacter.Parent = nil;
					invisRunning = false;
				end);
			elseif (IsInvis == false) then
				pcall(function()
					Player.Character = Character;
					wait();
					Character.Parent = workspace;
					Character:FindFirstChildWhichIsA("Humanoid"):Destroy();
					TurnVisible();
				end);
			end
		end
		local invisDied;
		invisDied = InvisibleCharacter:FindFirstChildOfClass("Humanoid").Died:Connect(function()
			Respawn();
			invisDied:Disconnect();
		end);
		if (IsInvis == true) then
			return;
		end
		IsInvis = true;
		CF = workspace.CurrentCamera.CFrame;
		CF_1 = Player.Character.HumanoidRootPart.CFrame;
		Character:MoveTo(Vector3.new(0, math.pi * 1000000, 0));
		workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable;
		wait(0.2);
		workspace.CurrentCamera.CameraType = Enum.CameraType.Custom;
		InvisibleCharacter = InvisibleCharacter;
		Character.Parent = Lighting;
		InvisibleCharacter.Parent = workspace;
		InvisibleCharacter.HumanoidRootPart.CFrame = CF_1;
		Player.Character = InvisibleCharacter;
		game.workspace.CurrentCamera:remove();
		wait(0.1);
		repeat
			wait();
		until speaker.Character ~= nil 
		game.workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA("Humanoid");
		game.workspace.CurrentCamera.CameraType = "Custom";
		speaker.CameraMinZoomDistance = 0.5;
		speaker.CameraMaxZoomDistance = 400;
		speaker.CameraMode = "Classic";
		speaker.Character.Head.Anchored = false;
		Player.Character.Animate.Disabled = true;
		Player.Character.Animate.Disabled = false;
		function TurnVisible()
			if (IsInvis == false) then
				return;
			end
			IsRunning = false;
			invisFix:Disconnect();
			invisDied:Disconnect();
			CF = workspace.CurrentCamera.CFrame;
			Character = Character;
			local CF_1 = Player.Character.HumanoidRootPart.CFrame;
			Character.HumanoidRootPart.CFrame = CF_1;
			InvisibleCharacter:Destroy();
			Player.Character = Character;
			Character.Parent = workspace;
			IsInvis = false;
			Player.Character.Animate.Disabled = true;
			Player.Character.Animate.Disabled = false;
			invisDied = Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				Respawn();
				invisDied:Disconnect();
			end);
		end
	end
	JMouse.KeyDown:connect(function(key)
		if (key:lower() == inviskeybind) then
			if toginvis then
				toginvis = false;
				TurnVisible();
			else
				toginvis = true;
				Invisfuncc();
			end
		end
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectioninvisible,Name="Change Invisible Keybind",PlaceholderText="Keybind",CharacterLimit=1,RemoveTextAfterFocusLost=false,Callback=function(Text)
	inviskeybind = Text;
end});
Button = Misc:CreateButton({SectionParent=Sectioninvisible,Name="Invisible (Tool)",Interact="Click",Callback=function()
	offset = 1100;
	LocalPlayer = game.Players.LocalPlayer;
	Backpack = LocalPlayer.Backpack;
	Character = LocalPlayer.Character;
	invisible = false;
	grips = {};
	local heldTool;
	local gripChanged;
	local handle;
	local weld;
	function setDisplayDistance(distance)
		for _, player in pairs(game.Players:GetPlayers()) do
			if (player.Character and player.Character:FindFirstChildWhichIsA("Humanoid")) then
				player.Character:FindFirstChildWhichIsA("Humanoid").NameDisplayDistance = distance;
				player.Character:FindFirstChildWhichIsA("Humanoid").HealthDisplayDistance = distance;
			end
		end
	end
	tool = Instance.new("Tool", Backpack);
	tool.Name = "Ghostify [Disabled]";
	tool.RequiresHandle = false;
	tool.CanBeDropped = false;
	tool.Equipped:Connect(function()
		wait();
		if not invisible then
			invisible = true;
			tool.Name = "Ghostify [Enabled]";
			if handle then
				handle:Destroy();
			end
			if weld then
				weld:Destroy();
			end
			handle = Instance.new("Part", workspace);
			handle.Name = "Handle";
			handle.Transparency = 1;
			handle.CanCollide = false;
			handle.Size = Vector3.new(2, 1, 1);
			weld = Instance.new("Weld", handle);
			weld.Part0 = handle;
			weld.Part1 = Character.HumanoidRootPart;
			weld.C0 = CFrame.new(0, offset - 1.5, 0);
			setDisplayDistance(offset + 100);
			workspace.CurrentCamera.CameraSubject = handle;
			Character.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame * CFrame.new(0, offset, 0);
			Character.Humanoid.HipHeight = offset;
			Character.Humanoid:ChangeState(11);
			for _, child in pairs(Backpack:GetChildren()) do
				if (child:IsA("Tool") and (child ~= tool)) then
					grips[child] = child.Grip;
				end
			end
		elseif invisible then
			invisible = false;
			tool.Name = "Ghostify [Disabled]";
			if handle then
				handle:Destroy();
			end
			if weld then
				weld:Destroy();
			end
			for _, child in pairs(Character:GetChildren()) do
				if child:IsA("Tool") then
					child.Parent = Backpack;
				end
			end
			for tool, grip in pairs(grips) do
				if tool then
					tool.Grip = grip;
				end
			end
			heldTool = nil;
			setDisplayDistance(100);
			workspace.CurrentCamera.CameraSubject = Character.Humanoid;
			Character.Animate.Disabled = false;
			Character.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame * CFrame.new(0, -offset, 0);
			Character.Humanoid.HipHeight = 0;
			Character.Humanoid:ChangeState(11);
		end
		tool.Parent = Backpack;
	end);
	Character.ChildAdded:Connect(function(child)
		wait();
		if (invisible and child:IsA("Tool") and (child ~= heldTool) and (child ~= tool)) then
			heldTool = child;
			lastGrip = heldTool.Grip;
			if not grips[heldTool] then
				grips[heldTool] = lastGrip;
			end
			for _, track in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
				track:Stop();
			end
			Character.Animate.Disabled = true;
			heldTool.Grip = heldTool.Grip * CFrame.new(0, offset - 1.5, 1.5) * CFrame.Angles(math.rad(-90), 0, 0);
			heldTool.Parent = Backpack;
			heldTool.Parent = Character;
			if gripChanged then
				gripChanged:Disconnect();
			end
			gripChanged = heldTool:GetPropertyChangedSignal("Grip"):Connect(function()
				wait();
				if not invisible then
					gripChanged:Disconnect();
				end
				if (heldTool.Grip ~= lastGrip) then
					lastGrip = heldTool.Grip * CFrame.new(0, offset - 1.5, 1.5) * CFrame.Angles(math.rad(-90), 0, 0);
					heldTool.Grip = lastGrip;
					heldTool.Parent = Backpack;
					heldTool.Parent = Character;
				end
			end);
		end
	end);
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Sectionlprtog = Misc:CreateSection("FE LocalPlayer Related | Toggle's", false, false, 10686489468);
Toggle = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Freeze Yourself / Anchor",CurrentValue=false,Callback=function(Value)
	freezeyourself = Value;
	if freezeyourself then
		for i, v in pairs(speaker.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = true;
			end
		end
	end
	if not freezeyourself then
		for i, v in pairs(speaker.Character:GetChildren()) do
			if v:IsA("BasePart") then
				v.Anchored = false;
			end
		end
	end
end});
Toggleinfjump1 = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Hold Jump",CurrentValue=false,Callback=function(Value)
	InfiniteJumpEnabled = Value;
	game:GetService("UserInputService").JumpRequest:connect(function()
		if InfiniteJumpEnabled then
			game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping");
		end
	end);
end});
Toggleinfjump2 = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Infinite Jump",CurrentValue=false,Callback=function(Value)
	pcall(function()
		infjumpp2 = Value;
		if infjumpp2 then
			if infJump then
				infJump:Disconnect();
			end
			infJumpDebounce = false;
			infJump = UserInputService.JumpRequest:Connect(function()
				if not infJumpDebounce then
					infJumpDebounce = true;
					speaker.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping);
					wait();
					infJumpDebounce = false;
				end
			end);
		end
		if not infjumpp2 then
			infJump:Disconnect();
		end
		infJumpDebounce = false;
	end);
end});
Flipping = false;
Toggleflipppping = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Flip",CurrentValue=false,Callback=function(Value)
	pcall(function()
		flippa = Value;
		if flippa then
			Flipping = true;
			pl = speaker;
			me = pl.Character;
			xl = me.Torso["Right Shoulder"];
			local debounce = false;
			function _restoreproperties()
				Holder = speaker.Character;
				Torso = Holder:FindFirstChild("Torso");
				RightS = Torso:FindFirstChild("Right Shoulder");
				LeftS = Torso:FindFirstChild("Left Shoulder");
				RightH = Torso:FindFirstChild("Right Hip");
				LeftH = Torso:FindFirstChild("Left Hip");
				RightS.MaxVelocity = 0.15;
				LeftS.MaxVelocity = 0.15;
				RightH.MaxVelocity = 0.1;
				LeftH.MaxVelocity = 0.1;
				RightS.DesiredAngle = 0;
				LeftS.DesiredAngle = 0;
				LeftH.DesiredAngle = 0;
				RightH.DesiredAngle = 0;
			end
			function ManageAnimation(value)
				Holder = speaker.Character;
				Player = speaker;
				if (value == "no anim") then
					Anim = Holder:FindFirstChild("Animate");
					if (Anim ~= nil) then
						Anim.Disabled = true;
						Anim.Parent = Player;
					end
				elseif (value == "re-anim") then
					Anim = Player:FindFirstChild("Animate");
					if (Anim ~= nil) then
						Anim.Disabled = false;
						Anim.Parent = Holder;
					end
				end
			end
			function Down(ml)
				for i = 1, ml.velocity.y / 3 do
					ml.velocity = ml.velocity + Vector3.new(0, -4.25, 0);
					wait();
				end
				ml:Remove();
			end
			function Flip2()
				if (debounce == true) then
					return;
				end
				debounce = true;
				Char = speaker.Character;
				Human = Char.Humanoid;
				Torso = Char.Torso;
				CF = Torso.CFrame;
				Human.PlatformStand = true;
				VelUp = Instance.new("BodyVelocity");
				VelUp.velocity = Vector3.new(0, 60, 0) + (Torso.CFrame.lookVector * 26);
				VelUp.P = VelUp.P * 2;
				VelUp.maxForce = Vector3.new(10000, 10000, 10000) * 999;
				VelUp.Parent = Torso;
				coroutine.resume(coroutine.create(Down), VelUp);
				Gyro = Instance.new("BodyGyro");
				Gyro.P = Gyro.P * 10;
				Gyro.maxTorque = Vector3.new(100000, 100000, 100000) * 999;
				Gyro.cframe = CF;
				Gyro.Parent = Torso;
				for i = 2, 28 do
					Gyro.cframe = Gyro.cframe * CFrame.fromEulerAnglesXYZ(math.pi / -16, 0, 0);
					wait();
				end
				Gyro.cframe = CF;
				wait();
				Gyro:Remove();
				Human.PlatformStand = false;
				_restoreproperties();
				debounce = false;
			end
			while Flipping do
				wait();
				Flip2();
			end
		end
		if not flippa then
			Flipping = false;
		end
	end);
	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		Toggleflipppping:Set(false);
	end);
end});
doubleFlipping = false;
Toggledoubleflipppping = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Double Flip",CurrentValue=false,Callback=function(Value)
	pcall(function()
		doubleflippa = Value;
		if doubleflippa then
			doubleFlipping = true;
			pl = speaker;
			me = pl.Character;
			xl = me.Torso["Right Shoulder"];
			local debounce = false;
			function _restoreproperties()
				Holder = speaker.Character;
				Torso = Holder:FindFirstChild("Torso");
				RightS = Torso:FindFirstChild("Right Shoulder");
				LeftS = Torso:FindFirstChild("Left Shoulder");
				RightH = Torso:FindFirstChild("Right Hip");
				LeftH = Torso:FindFirstChild("Left Hip");
				RightS.MaxVelocity = 0.15;
				LeftS.MaxVelocity = 0.15;
				RightH.MaxVelocity = 0.1;
				LeftH.MaxVelocity = 0.1;
				RightS.DesiredAngle = 0;
				LeftS.DesiredAngle = 0;
				LeftH.DesiredAngle = 0;
				RightH.DesiredAngle = 0;
			end
			function ManageAnimation(value)
				Holder = speaker.Character;
				Player = speaker;
				if (value == "no anim") then
					Anim = Holder:FindFirstChild("Animate");
					if (Anim ~= nil) then
						Anim.Disabled = true;
						Anim.Parent = Player;
					end
				elseif (value == "re-anim") then
					Anim = Player:FindFirstChild("Animate");
					if (Anim ~= nil) then
						Anim.Disabled = false;
						Anim.Parent = Holder;
					end
				end
			end
			function Down(ml)
				for i = 1, ml.velocity.y / 3 do
					ml.velocity = ml.velocity + Vector3.new(0, -4.25, 0);
					wait();
				end
				ml:Remove();
			end
			function Flip3()
				if (debounce == true) then
					return;
				end
				debounce = true;
				Char = speaker.Character;
				Human = Char.Humanoid;
				Torso = Char.Torso;
				CF = Torso.CFrame;
				Human.PlatformStand = true;
				VelUp = Instance.new("BodyVelocity");
				VelUp.velocity = Vector3.new(0, 60, 0) + (Torso.CFrame.lookVector * 26);
				VelUp.P = VelUp.P * 2;
				VelUp.maxForce = Vector3.new(10000, 10000, 10000) * 999;
				VelUp.Parent = Torso;
				coroutine.resume(coroutine.create(Down), VelUp);
				Gyro = Instance.new("BodyGyro");
				Gyro.P = Gyro.P * 10;
				Gyro.maxTorque = Vector3.new(100000, 100000, 100000) * 999;
				Gyro.cframe = CF;
				Gyro.Parent = Torso;
				for i = 2, 28 do
					Gyro.cframe = Gyro.cframe * CFrame.fromEulerAnglesXYZ(math.pi / -8, 0, 0);
					wait();
				end
				Gyro.cframe = CF;
				wait();
				Gyro:Remove();
				Human.PlatformStand = false;
				_restoreproperties();
				debounce = false;
			end
			while doubleFlipping do
				wait();
				Flip3();
			end
		end
		if not doubleflippa then
			doubleFlipping = false;
		end
	end);
	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		Toggledoubleflipppping:Set(false);
	end);
end});
cwFlipping = false;
Togglecartwheel = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Cart Wheel",CurrentValue=false,Callback=function(Value)
	pcall(function()
		cartwheeling = Value;
		if cartwheeling then
			cwFlipping = true;
			function _restoreproperties()
				Torso = speaker.Character:FindFirstChild("Torso");
				RightS = Torso:FindFirstChild("Right Shoulder");
				LeftS = Torso:FindFirstChild("Left Shoulder");
				RightH = Torso:FindFirstChild("Right Hip");
				LeftH = Torso:FindFirstChild("Left Hip");
				RightS.MaxVelocity = 0.15;
				LeftS.MaxVelocity = 0.15;
				RightH.MaxVelocity = 0.1;
				LeftH.MaxVelocity = 0.1;
				RightS.DesiredAngle = 0;
				LeftS.DesiredAngle = 0;
				LeftH.DesiredAngle = 0;
				RightH.DesiredAngle = 0;
			end
			function Down(ml)
				for i = 1, ml.velocity.y / 3 do
					ml.velocity = ml.velocity + Vector3.new(0, -4.25, 0);
					wait();
				end
				ml:Remove();
			end
			function Flip()
				if (debounce == true) then
					return;
				end
				debounce = true;
				local Gyro = Instance.new("BodyGyro");
				Gyro.P = Gyro.P * 10;
				Gyro.maxTorque = Vector3.new(100000, 100000, 100000) * 999;
				Gyro.CFrame = speaker.Character.Torso.CFrame;
				Gyro.Parent = speaker.Character.Torso;
				for i = 0, 50 do
					Gyro.CFrame = Gyro.CFrame * CFrame.fromEulerAnglesXYZ(math.pi / -29, 0, 0);
					wait();
				end
				Gyro.CFrame = speaker.Character.Torso.CFrame;
				wait();
				Gyro:Remove();
				speaker.Character.Humanoid.PlatformStand = false;
				_restoreproperties();
				debounce = false;
			end
			while cwFlipping do
				wait();
				Flip();
			end
		end
		if not cartwheeling then
			cwFlipping = false;
		end
	end);
	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		Togglecartwheel:Set(false);
	end);
end});
Floating = false;
floatName = randomString();
Togglestunned = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Stun",CurrentValue=false,Callback=function(Value)
	pcall(function()
		stunned = Value;
		if stunned then
			speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = true;
		end
		if not stunned then
			speaker.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false;
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglestunned:Set(false);
		end);
	end);
end});
Togglestiwalk = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Sit Walk",CurrentValue=false,Callback=function(Value)
	pcall(function()
		sitwalkerr = Value;
		if sitwalkerr then
			anims = Character.Animate
			idholder = {
				anims.idle:FindFirstChildOfClass("Animation").AnimationId, 
				anims.walk:FindFirstChildOfClass("Animation").AnimationId, 
				anims.run:FindFirstChildOfClass("Animation").AnimationId, 
				anims.jump:FindFirstChildOfClass("Animation").AnimationId,
				Character.Humanoid.HipHeight,
			}
	local sit = anims.sit:FindFirstChildOfClass("Animation").AnimationId
	anims.idle:FindFirstChildOfClass("Animation").AnimationId = sit
	anims.walk:FindFirstChildOfClass("Animation").AnimationId = sit
	anims.run:FindFirstChildOfClass("Animation").AnimationId = sit
	anims.jump:FindFirstChildOfClass("Animation").AnimationId = sit
		end
		if not sitwalkerr then
			anims.idle:FindFirstChildOfClass("Animation").AnimationId = idholder[1]
			anims.walk:FindFirstChildOfClass("Animation").AnimationId = idholder[2]
			anims.run:FindFirstChildOfClass("Animation").AnimationId = idholder[3]
			anims.jump:FindFirstChildOfClass("Animation").AnimationId = idholder[4]
			Character.Humanoid.HipHeight = idholder[5]
			wait(0.1)
			Character.Humanoid.Jump = true
		end
	end);
end});
Toggle = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Slide",CurrentValue=false,Callback=function(Value)
	pcall(function()
		icewalker = Value;
		if icewalker then
			for a,a in pairs(Character:GetDescendants()) do 
				if a.ClassName=="Part" then 
				a.CustomPhysicalProperties=PhysicalProperties.new(0,0,0)
				end 
			end 
		end
		if not icewalker then
			for a,a in pairs(Character:GetDescendants()) do 
				if a.ClassName=="Part" then 
				a.CustomPhysicalProperties=PhysicalProperties.new(1,0,0)
				end 
			end 
		end
	end);
end});
Toggleedgerjumper = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Edge Jump",CurrentValue=false,Callback=function(Value)
	pcall(function()
		edgerjumper = Value;
		if edgerjumper then
			local Char = speaker.Character;
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid");
			local state;
			local laststate;
			local lastcf;
			local function edgejump()
				if (Char and Human) then
					laststate = state;
					state = Human:GetState();
					if ((laststate ~= state) and (state == Enum.HumanoidStateType.Freefall) and (laststate ~= Enum.HumanoidStateType.Jumping)) then
						Char.HumanoidRootPart.CFrame = lastcf;
						Char.HumanoidRootPart.Velocity = Vector3.new(Char.HumanoidRootPart.Velocity.X, Human.JumpPower or Human.JumpHeight, Char.HumanoidRootPart.Velocity.Z);
					end
					lastcf = Char.HumanoidRootPart.CFrame;
				end
			end
			edgejump();
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or RunService.RenderStepped:Connect(edgejump);
			HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
				Char, Human = nChar, nChar:WaitForChild("Humanoid");
				edgejump();
				HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or RunService.RenderStepped:Connect(edgejump);
			end);
		end
		if not edgerjumper then
			HumanModCons.ejLoop = (HumanModCons.ejLoop and HumanModCons.ejLoop:Disconnect() and false) or nil;
			HumanModCons.ejCA = (HumanModCons.ejCA and HumanModCons.ejCA:Disconnect() and false) or nil;
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleedgerjumper:Set(false);
		end);
	end);
end});
Toggle = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Float",CurrentValue=false,Callback=function(Value)
	pcall(function()
		floattt = Value;
		if floattt then
			Floating = true;
			pchar = speaker.Character;
			if (pchar and not pchar:FindFirstChild(floatName)) then
				task.spawn(function()
					Float = Instance.new("Part");
					Float.Name = floatName;
					Float.Parent = pchar;
					Float.Transparency = 1;
					Float.Size = Vector3.new(2, 0.2, 1.5);
					Float.Anchored = true;
					FloatValue = -3.1;
					Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0, FloatValue, 0);
					Rayfield:Notify({Title="Enabled",Content="Q Down E up",Duration=0.2,Image=7733715400});
					qUp = JMouse.KeyUp:Connect(function(KEY)
						if (KEY == "q") then
							FloatValue = FloatValue + 0.5;
						end
					end);
					eUp = JMouse.KeyUp:Connect(function(KEY)
						if (KEY == "e") then
							FloatValue = FloatValue - 0.5;
						end
					end);
					qDown = JMouse.KeyDown:Connect(function(KEY)
						if (KEY == "q") then
							FloatValue = FloatValue - 0.5;
						end
					end);
					eDown = JMouse.KeyDown:Connect(function(KEY)
						if (KEY == "e") then
							FloatValue = FloatValue + 0.5;
						end
					end);
					floatDied = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
						FloatingFunc:Disconnect();
						Float:Destroy();
						qUp:Disconnect();
						eUp:Disconnect();
						qDown:Disconnect();
						eDown:Disconnect();
						floatDied:Disconnect();
					end);
					function FloatPadLoop()
						if (pchar:FindFirstChild(floatName) and getRoot(pchar)) then
							Float.CFrame = getRoot(pchar).CFrame * CFrame.new(0, FloatValue, 0);
						else
							FloatingFunc:Disconnect();
							Float:Destroy();
							qUp:Disconnect();
							eUp:Disconnect();
							qDown:Disconnect();
							eDown:Disconnect();
							floatDied:Disconnect();
						end
					end
					FloatingFunc = RunService.Heartbeat:Connect(FloatPadLoop);
				end);
			end
		end
		if not floattt then
			Floating = false;
			pchar = speaker.Character;
			Rayfield:Notify({Title="Disabled",Content="Disabled",Duration=0.2,Image=7733715400});
			if pchar:FindFirstChild(floatName) then
				pchar:FindFirstChild(floatName):Destroy();
			end
			if floatDied then
				FloatingFunc:Disconnect();
				qUp:Disconnect();
				eUp:Disconnect();
				qDown:Disconnect();
				eDown:Disconnect();
				floatDied:Disconnect();
			end
		end
	end);
end});
Toggleweaken = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Weaken Character",CurrentValue=false,Callback=function(Value)
	pcall(function()
		weakenchar = Value;
		if weakenchar then
			for i, player in pairs(speaker.Character:GetChildren()) do
				if (player.ClassName == "Part") then
					player.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5);
				end
			end
		end
		if not weakenchar then
			for i, player in pairs(speaker.Character:GetChildren()) do
				if (player.ClassName == "Part") then
					player.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5);
				end
			end
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleweaken:Set(false);
		end);
	end);
end});
Toggleswimmer = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Swim",CurrentValue=false,Callback=function(Value)
	pcall(function()
		swimmer = Value;
		if swimmer then
			if (not swimming and speaker and speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid")) then
				oldgrav = workspace.Gravity;
				workspace.Gravity = 0;
				local swimDied = function()
					workspace.Gravity = oldgrav;
					swimming = false;
				end;
				Humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid");
				gravReset = Humanoid.Died:Connect(swimDied);
				enums = Enum.HumanoidStateType:GetEnumItems();
				table.remove(enums, table.find(enums, Enum.HumanoidStateType.None));
				for i, v in pairs(enums) do
					Humanoid:SetStateEnabled(v, false);
				end
				Humanoid:ChangeState(Enum.HumanoidStateType.Swimming);
			end
		end
		if not swimmer then
			if (speaker and speaker.Character and speaker.Character:FindFirstChildWhichIsA("Humanoid")) then
				workspace.Gravity = oldgrav;
				swimming = false;
				if gravReset then
					gravReset:Disconnect();
				end
				if (swimbeat ~= nil) then
					swimbeat:Disconnect();
					swimbeat = nil;
				end
				Humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid");
				enums = Enum.HumanoidStateType:GetEnumItems();
				table.remove(enums, table.find(enums, Enum.HumanoidStateType.None));
				for i, v in pairs(enums) do
					Humanoid:SetStateEnabled(v, true);
				end
			end
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleswimmer:Set(false);
		end);
	end);
end});
spinSpeed = 20;
Togglespinner = Misc:CreateToggle({SectionParent=Sectionlprtog,Name="Spin",CurrentValue=false,Callback=function(Value, args)
	pcall(function()
		spinner = Value;
		if spinner then
			Spin = Instance.new("BodyAngularVelocity");
			Spin.Name = "Spinning";
			Spin.Parent = getRoot(speaker.Character);
			Spin.MaxTorque = Vector3.new(0, math.huge, 0);
			spawn(function()
				while wait() do
					Spin.AngularVelocity = Vector3.new(0, spinSpeed, 0);
				end
			end);
		end
		if not spinner then
			for i, v in pairs(getRoot(speaker.Character):GetChildren()) do
				if (v.Name == "Spinning") then
					v:Destroy();
				end
			end
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglespinner:Set(false);
		end);
	end);
end});
Sliderspinspeed = Misc:CreateSlider({SectionParent=Sectionlprtog,Name="Spin Speed",Range={0,780},Increment=1,Suffix="Spin Speed",CurrentValue=20,Callback=function(Value)
	pcall(function()
		spinSpeed = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderspinspeed:Set(20);
		end);
	end);
end});
Inputspinspeed = Misc:CreateInput({SectionParent=Sectionlprtog,Name="Spin Speed",PlaceholderText=20,RemoveTextAfterFocusLost=false,Callback=function(Text)
	spinSpeed = Text;
end});
Sectionlpsliderinputloops = Misc:CreateSection("FE LocalPlayer Related | Slider's & Input Loop's", false, true, 10686489468);
Buttonresetflysvalue = Misc:CreateButton({SectionParent=Sectionlpsliderinputloops,Name="Reset Character Loop Values",Interact="Click",Callback=function()
	pcall(function()
		Sliderwalkloop:Set(16);
		Sliderjumploop:Set(50);
	end);
end});
walkspeedsped = 16;
Label = Misc:CreateLabel("Set A Value First Then Enable", Sectionlpsliderinputloops);
Toggle = Misc:CreateToggle({SectionParent=Sectionlpsliderinputloops,Name="Loop Walk Speed",CurrentValue=false,Callback=function(Value)
	pcall(function()
		loopws = Value;
		if loopws then
			walkspeedloop = RunService.Heartbeat:Connect(function()
				if isNumber(walkspeedsped) then
					local Char = speaker.Character or workspace:FindFirstChild(speaker.Name);
					local Human = Char and Char:FindFirstChildWhichIsA("Humanoid");
					local function WalkSpeedChange()
						if (Char and Human) then
							Human.WalkSpeed = walkspeedsped;
						end
					end
					WalkSpeedChange();
					HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange);
					HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
						Char, Human = nChar, nChar:WaitForChild("Humanoid");
						WalkSpeedChange();
						HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("WalkSpeed"):Connect(WalkSpeedChange);
					end);
				end
			end);
		end
		if not loopws then
			walkspeedloop:Disconnect();
			HumanModCons.wsLoop = (HumanModCons.wsLoop and HumanModCons.wsLoop:Disconnect() and false) or nil;
			HumanModCons.wsCA = (HumanModCons.wsCA and HumanModCons.wsCA:Disconnect() and false) or nil;
		end
	end);
end});
Sliderwalkloop = Misc:CreateSlider({SectionParent=Sectionlpsliderinputloops,Name="Loop Walk Speed",Range={1,300},Increment=1,Suffix="Speed",CurrentValue=math.floor(speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed),Callback=function(Value)
	pcall(function()
		walkspeedsped = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderwalkloop:Set(16);
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionlpsliderinputloops,Name="Loop Walk Speed",PlaceholderText=math.floor(speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed),NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	walkspeedsped = Text;
end});
jpower = 50;
Toggle = Misc:CreateToggle({SectionParent=Sectionlpsliderinputloops,Name="Loop Jump Power / Height",CurrentValue=false,Callback=function(Value)
	pcall(function()
		loopjp = Value;
		if loopjp then
			jumppowerloop = RunService.Heartbeat:Connect(function()
				if isNumber(jpower) then
					local Char = speaker.Character or workspace:FindFirstChild(speaker.Name);
					local Human = Char and Char:FindFirstChildWhichIsA("Humanoid");
					local function JumpPowerChange()
						if (Char and Human) then
							if speaker.Character:FindFirstChildOfClass("Humanoid").UseJumpPower then
								speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower = jpower;
							else
								speaker.Character:FindFirstChildOfClass("Humanoid").JumpHeight = jpower;
							end
						end
					end
					JumpPowerChange();
					HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange);
					HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or speaker.CharacterAdded:Connect(function(nChar)
						Char, Human = nChar, nChar:WaitForChild("Humanoid");
						JumpPowerChange();
						HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or Human:GetPropertyChangedSignal("JumpPower"):Connect(JumpPowerChange);
					end);
				end
			end);
		end
		if not loopjp then
			jumppowerloop:Disconnect();
			local Char = speaker.Character or workspace:FindFirstChild(speaker.Name);
			local Human = Char and Char:FindFirstChildWhichIsA("Humanoid");
			HumanModCons.jpLoop = (HumanModCons.jpLoop and HumanModCons.jpLoop:Disconnect() and false) or nil;
			HumanModCons.jpCA = (HumanModCons.jpCA and HumanModCons.jpCA:Disconnect() and false) or nil;
			if (Char and Human) then
				if speaker.Character:FindFirstChildOfClass("Humanoid").UseJumpPower then
					speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower = 50;
				else
					speaker.Character:FindFirstChildOfClass("Humanoid").JumpHeight = 50;
				end
			end
		end
	end);
end});
Sliderjumploop = Misc:CreateSlider({SectionParent=Sectionlpsliderinputloops,Name="Loop Jump Power / Height",Range={1,350},Increment=1,Suffix="Power | Height",CurrentValue=math.floor(speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower),Callback=function(Value)
	pcall(function()
		jpower = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderjumploop:Set(7);
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionlpsliderinputloops,Name="Loop Jump Power / Height",PlaceholderText=math.floor(speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower),NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	jpower = Text;
end});
Sectionlpsliderinput = Misc:CreateSection("FE LocalPlayer Related | Slider's & Input's", false, false, 10686489468);
Buttonresetcharactervalue = Misc:CreateButton({SectionParent=Sectionlpsliderinput,Name="Reset Character Values",Interact="Click",Callback=function()
	pcall(function()
		Sliderwalk:Set(16);
		Sliderhip:Set(0);
		Sliderjpower:Set(7);
		Sliderjpower:Set(50);
		Slidergrav:Set(196);
	end);
end});
Sliderwalk = Misc:CreateSlider({SectionParent=Sectionlpsliderinput,Name="Walk Speed",Range={1,300},Increment=1,Suffix="Speed",CurrentValue=math.floor(speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed),Callback=function(Value)
	pcall(function()
		speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderwalk:Set(16);
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionlpsliderinput,Name="Walk Speed",NumbersOnly=true,PlaceholderText=math.floor(speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed),RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Text;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			speaker.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 16;
		end);
	end);
end});
Sliderhip = Misc:CreateSlider({SectionParent=Sectionlpsliderinput,Name="Hip Height",Range={-2,100},Increment=1,Suffix="Hip Height",CurrentValue=math.floor(game.Players.LocalPlayer.Character.Humanoid.HipHeight),Callback=function(Value)
	pcall(function()
		game.Players.LocalPlayer.Character.Humanoid.HipHeight = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderhip:Set(0);
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionlpsliderinput,Name="Hip Height",NumbersOnly=true,PlaceholderText=math.floor(game.Players.LocalPlayer.Character.Humanoid.HipHeight),RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		game.Players.LocalPlayer.Character.Humanoid.HipHeight = Text;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0;
		end);
	end);
end});
Sliderjpower = Misc:CreateSlider({SectionParent=Sectionlpsliderinput,Name="Jump Power / Jump Height",Range={1,350},Increment=1,Suffix="Jump Power",CurrentValue=math.floor(game.Players.LocalPlayer.Character.Humanoid.JumpPower),Callback=function(Value)
	pcall(function()
		if speaker.Character:FindFirstChildOfClass("Humanoid").UseJumpPower then
			speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower = Value;
		else
			speaker.Character:FindFirstChildOfClass("Humanoid").JumpHeight = Value;
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderjpower:Set(50);
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionlpsliderinput,Name="Jump Power / Jump Height",NumbersOnly=true,PlaceholderText=math.floor(game.Players.LocalPlayer.Character.Humanoid.JumpPower),RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		if speaker.Character:FindFirstChildOfClass("Humanoid").UseJumpPower then
			speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower = Text;
		else
			speaker.Character:FindFirstChildOfClass("Humanoid").JumpHeight = Text;
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			if speaker.Character:FindFirstChildOfClass("Humanoid").UseJumpPower then
				speaker.Character:FindFirstChildOfClass("Humanoid").JumpPower = 50;
			else
				speaker.Character:FindFirstChildOfClass("Humanoid").JumpHeight = 50;
			end
		end);
	end);
end});
Slidergrav = Misc:CreateSlider({SectionParent=Sectionlpsliderinput,Name="Gravity",Range={0,700},Increment=1,Suffix="Gravity",CurrentValue=math.floor(game.Workspace.Gravity),Callback=function(Value)
	pcall(function()
		game.Workspace.Gravity = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Slidergrav:Set(196);
		end);
	end);
end});
Input = Misc:CreateInput({SectionParent=Sectionlpsliderinput,Name="Gravity",NumbersOnly=true,PlaceholderText=math.floor(game.Workspace.Gravity),RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		game.Workspace.Gravity = Text;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			game.Workspace.Gravity = 196;
		end);
	end);
end});
Miscclient = Window:CreateTab("Universal Client", 9080478424);
SectiontotalscrisMiscclient = Miscclient:CreateSection("Total Universal Script's: 104", true);
Paragraph = Miscclient:CreateParagraph({Title="General Note",Content="If a Section Has (Client) Mean's You Only Can See It.\nThe Dropdown's You See, You Can Close Them By Pressing The Arrow."});
Sectionmiscscripts = Miscclient:CreateSection("Miscellaneous (Client)", false, false, 10709759610);
PJLNF = 1.3;
function Notifies()
	pjadded = game.Players.ChildAdded:Connect(function(player)
		DT = DateTime.fromUnixTimestamp(86400 * player.AccountAge);
		Days = tonumber(DT:FormatUniversalTime("DD", "en-us"));
		Months = tonumber(DT:FormatUniversalTime("MM", "en-us"));
		Years = tonumber(DT:FormatUniversalTime("YYYY", "en-us")) - 1970;
		Rayfield:Notify({Title=("" .. player.Name .. " | " .. player.DisplayName),Content=("Has joined the server\nAccount Age: " .. Days .. " Day " .. Months .. " Month " .. Years .. " Year" .. "\nAccountId: " .. player.UserId .. ""),Duration=PJLNF,Image=Rayfield:GetPlayerThumbnail(player.UserId, "HeadShot")});
	end);
	pjremoved = game.Players.ChildRemoved:Connect(function(player)
		DT = DateTime.fromUnixTimestamp(86400 * player.AccountAge);
		Days = tonumber(DT:FormatUniversalTime("DD", "en-us"));
		Months = tonumber(DT:FormatUniversalTime("MM", "en-us"));
		Years = tonumber(DT:FormatUniversalTime("YYYY", "en-us")) - 1970;
		Rayfield:Notify({Title=("" .. player.Name .. " | " .. player.DisplayName),Content=("Has Left the server\nAccount Age: " .. Days .. " Day " .. Months .. " Month " .. Years .. " Year" .. "" .. "\nAccountId: " .. player.UserId .. ""),Duration=PJLNF,Image=Rayfield:GetPlayerThumbnail(player.UserId, "HeadShot")});
	end);
end
Toggle = Miscclient:CreateToggle({SectionParent=Sectionmiscscripts,Name="Player Join/Leave Notifications",CurrentValue=false,Flag="playerjoinsleave",Callback=function(Value)
	shared.Notify = Value;
	if shared.Notify then
		Notifies();
	elseif not shared.Notify then
		pjadded:Disconnect();
		pjremoved:Disconnect();
		return;
	end
end});
Sliderpj = Miscclient:CreateSlider({SectionParent=Sectionmiscscripts,Name="Player Join/.. Notify Duration",Range={0,10},Increment=0.5,Suffix="Duration",CurrentValue=PJLNF,Callback=function(Value)
	pcall(function()
		PJLNF = Value;
	end);
end});
Inputpj = Miscclient:CreateInput({SectionParent=Sectionmiscscripts,Name="Player Join/.. Notify Duration",PlaceholderText=PJLNF,CharacterLimit=3,NumbersOnly=false,RemoveTextAfterFocusLost=false,Callback=function(Text)
	PJLNF = Text;
end});
Slider = Miscclient:CreateSlider({SectionParent=Sectionmiscscripts,Name="Set FPS Cap",Range={1,60},Increment=1,Suffix="FPS",CurrentValue=60,Callback=function(Value)
	pcall(function()
		setfpscap(Value);
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectionmiscscripts,Name="Set FPS Cap",PlaceholderText=60,CharacterLimit=2,NumbersOnly=false,RemoveTextAfterFocusLost=false,Callback=function(Text)
	setfpscap(Text);
end});
quliatyholder = {frholder=settings().Rendering.QualityLevel};
Togglelowfps = Miscclient:CreateToggle({SectionParent=Sectionmiscscripts,Name="Low FPS Detection",CurrentValue=false,Callback=function(Value)
	pcall(function()
		lowfpsdect = Value;
		if lowfpsdect then
			local FPS = nil;
			lowfpsdetection = game:GetService("RunService").RenderStepped:Connect(function(delta)
				FPS = math.round(1 / delta);
			end);
			while task.wait() do
				if (FPS == nil) then
				end
				if (FPS < 25) then
					Rayfield:Notify({Title="Low FPS Detected!",Content="Low FPS Detected!\nPress Lower To Higher up FPS \nGraphics Will Look Bad",Duration=6.5,Image=14388791023,Actions={yeatrue={Name="True!",Callback=function()
						settings().Rendering.QualityLevel = Enum.QualityLevel.Level01;
					end},nottrue={Name="False!",Callback=function()
						settings().Rendering.QualityLevel = quliatyholder.frholder;
					end}}});
					wait(30);
				end
			end
			if not lowfpsdect then
				lowfpsdetection:Disconnect();
			end
		end
	end);
end});
xNamingTbl = {};
Toggle = Miscclient:CreateToggle({SectionParent=Sectionmiscscripts,Name="Show Usernames Not Display",CurrentValue=false,Callback=function(Value)
	showrealnamesstog = Value;
	if showrealnamesstog then
		function clean(cplr)
			if (cplr.DisplayName ~= cplr.Name) then
				if cplr.Character then
					cplr.Character:WaitForChild("Humanoid").DisplayName = cplr.Name;
				end
				cplr.CharacterAdded:Connect(function(char)
					char:WaitForChild("Humanoid").DisplayName = "(NICKNAMED)\n" .. cplr.Name;
				end);
			end
		end
		xNaming = speakers.PlayerAdded:Connect(clean);
		for _, p in pairs(speakers:GetPlayers()) do
			clean(p);
		end
	end
	if not showrealnamesstog then
		xNaming:Disconnect();
	end
end});
Toggle = Miscclient:CreateToggle({SectionParent=Sectionmiscscripts,Name="No Network Claim",CurrentValue=false,Callback=function(Value)
	nonetworkclaimer = Value;
	if nonetworkclaimer then
		DHSaved = workspace.FallenPartsDestroyHeight;
		workspace.FallenPartsDestroyHeight = math.huge - math.huge;
	end
	if not nonetworkclaimer then
		workspace.FallenPartsDestroyHeight = DHSaved;
	end
end});
Paragraph = Miscclient:CreateParagraph({Title="Remove Kick GUI Info",Content="When You're Kicked From A Game It Will Remove The Prompt saying You're Kicked."}, Sectionmiscscripts);
Button = Miscclient:CreateButton({SectionParent=Sectionmiscscripts,Name="Remove Kick GUI",Interact="Click",Callback=function()
	game:GetService("GuiService"):ClearError();
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("Executed " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Input = Miscclient:CreateInput({SectionParent=Sectionmiscscripts,Name="Change Player ID",PlaceholderText="ID",RemoveTextAfterFocusLost=false,Callback=function(Text)
	game.Players.LocalPlayer.UserId = Text;
end});
Paragraph = Miscclient:CreateParagraph({Title="Kick Yourself Info",Content="Useful When Roblox UI Disappear's."}, Sectionmiscscripts);
Button = Miscclient:CreateButton({SectionParent=Sectionmiscscripts,Name="Kick Yourself",Interact="Click",Callback=function()
	game:GetService("Players").LocalPlayer:Kick("You've Kicked Yourself!");
end});
Paragraph = Miscclient:CreateParagraph({Title="Kick Yourself W/ A MSG Info",Content="In The Box First Type In The Message You Want To Be Kicked With And Press Enter."}, Sectionmiscscripts);
Input = Miscclient:CreateInput({SectionParent=Sectionmiscscripts,Name="Kick Yourself With a Custom Message",PlaceholderText="Enter Message",RemoveTextAfterFocusLost=false,Callback=function(Text)
	game:GetService("Players").LocalPlayer:Kick(Text);
end});
Button = Miscclient:CreateButton({SectionParent=Sectionmiscscripts,Name="Enable Shift Lock",Interact="Click",Callback=function()
	speaker.DevEnableMouseLock = true;
	effecttrue();
	Rayfield:Notify({Title="ShiftLock",Content="ShiftLock Is Available!",Duration=3,Image=7733715400});
end});
Sectiontchat = Miscclient:CreateSection("LocalPlayer / Player Related | Chat", false, false, 10734888228);
Label = Miscclient:CreateLabel("⬇ For Legacy Chat Only ⬇", Sectiontchat);
Togglea = Miscclient:CreateToggle({SectionParent=Sectiontchat,Name="Dark Chat Bubbles",CurrentValue=false,Callback=function(Value)
	darkchatbubble = Value;
	if darkchatbubble then
		if speaker.PlayerGui:FindFirstChild("BubbleChat") then
			_G.connections['darkbubbles'] = speaker.PlayerGui.BubbleChat.DescendantAdded:connect(function(msg)
				if ((msg:IsA("ImageLabel") and (msg.Name == "ChatBubble")) or (msg:IsA("ImageLabel") and (msg.Name == "ChatBubbleTail")) or (msg:IsA("ImageLabel") and (msg.Name == "SmallTalkBubble"))) then
					msg.ImageColor3 = Color3.fromRGB(0, 0, 0);
				end
				if (msg:IsA("TextLabel") and (msg.Name == "BubbleText")) then
					msg.TextColor3 = Color3.fromRGB(255, 255, 255);
					msg.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
				end
			end);
		end
		if not darkchatbubble then
			_G.connections['darkbubbles']:Disconnect();
			_G.connections['darkbubbles'] = nil;
		end
	end
end});
Button = Miscclient:CreateButton({SectionParent=Sectiontchat,Name="Chat Spy",Interact="Click",Callback=function()
	Players, SGui = game:GetService("Players"), game:GetService("StarterGui");
	Client, NColor3, UD, UD2 = Players.LocalPlayer, Color3.new, UDim.new, UDim2.new;
	local function ChatSpy()
		ChatSpyFrame = Client.PlayerGui.Chat.Frame;
		ChatSpyFrame.ChatChannelParentFrame.Visible = true;
		ChatSpyFrame.ChatBarParentFrame.Position = ChatSpyFrame.ChatChannelParentFrame.Position + UD2(UD(), ChatSpyFrame.ChatChannelParentFrame.Size.Y);
	end
	ChatSpy();
	getgenv().ShowHiddenMsg = function(T, C)
		SGui:SetCore("ChatMakeSystemMessage", {Text=T,Color=C});
	end;
	getgenv().Spy = function(Target)
		Target.Chatted:Connect(function(Msg)
			if (string.find(Msg, "/e ") or string.find(Msg, "/w ") or string.find(Msg, "/whisper ") or string.find(Msg, "/team ") or string.find(Msg, "/t ")) then
				ShowHiddenMsg("[SPY]: " .. "[" .. tostring(Target) .. "]: " .. Msg, NColor3(107, 107, 107));
			end
		end);
	end;
	GP = Players:GetPlayers();
	for i = 1, #GP do
		Plr = GP[i];
		if tostring(Plr) then
			Spy(Plr);
		end
	end
	Players.PlayerAdded:Connect(function(P)
		if tostring(P) then
			Spy(P);
		end
	end);
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content="Chat Spy On!",Duration=6,Image=7733715400});
end});
Sectionmiscworldscripts = Miscclient:CreateSection("LocalPlayer Related | World (Client)", false, false, 10709806631);
origsettingsbrightness = {sliderbright=game.Lighting.Brightness};
Buttonresetworld = Miscclient:CreateButton({SectionParent=Sectionmiscworldscripts,Name="Reset World Values",Interact="Click",Callback=function()
	pcall(function()
		Colorpickerskybox:Set(Color3.fromRGB(0, 0, 0));
		Colorpickerskyboxoutdfor:Set(Color3.fromRGB(0, 0, 0));
		Sliderbright:Set(5);
		Sliderranggerrr:Set(30);
	end);
end});
Toggle = Miscclient:CreateToggle({SectionParent=Sectionmiscworldscripts,Name="Day / Night",CurrentValue=false,Callback=function(Value)
	pcall(function()
		daytonight = Value;
		if daytonight then
			TweenService:Create(game.Lighting, TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {ClockTime=0}):Play();
		end
		if not daytonight then
			TweenService:Create(game.Lighting, TweenInfo.new(0.7, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {ClockTime=12}):Play();
		end
	end);
end});
Button = Miscclient:CreateButton({SectionParent=Sectionmiscworldscripts,Name="Full Bright",Interact="Click",Callback=function()
	Lighting.Brightness = 2;
	Lighting.ClockTime = 14;
	Lighting.FogEnd = 100000;
	Lighting.GlobalShadows = false;
	Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128);
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
origsettings = {abt=Lighting.Ambient,oabt=Lighting.OutdoorAmbient,brt=Lighting.Brightness,time=Lighting.ClockTime,fe=Lighting.FogEnd,fs=Lighting.FogStart,gs=Lighting.GlobalShadows};
Button = Miscclient:CreateButton({SectionParent=Sectionmiscworldscripts,Name="Restore Lighting",Interact="Click",Callback=function()
	Lighting.Ambient = origsettings.abt;
	Lighting.OutdoorAmbient = origsettings.oabt;
	Lighting.Brightness = origsettings.brt;
	Lighting.ClockTime = origsettings.time;
	Lighting.FogEnd = origsettings.fe;
	Lighting.FogStart = origsettings.fs;
	Lighting.GlobalShadows = origsettings.gs;
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Toggleshowhitboxes = Miscclient:CreateToggle({SectionParent=Sectionmiscworldscripts,Name="Show Hitboxe's",CurrentValue=false,Callback=function(Value)
	pcall(function()
		showhitboxes = Value;
		if showhitboxes then
			settings():GetService("RenderSettings").ShowBoundingBoxes = true;
		end
		if not showhitboxes then
			settings():GetService("RenderSettings").ShowBoundingBoxes = false;
		end
	end);
end});
Sliderbright = Miscclient:CreateSlider({SectionParent=Sectionmiscworldscripts,Name="Brightness",Range={0,15},Increment=1,Suffix="Brightness",CurrentValue=math.floor(game.Lighting.Brightness),Callback=function(Value)
	pcall(function()
		game.Lighting.Brightness = Value;
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderbright:Set(origsettingsbrightness.sliderbright);
		end);
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectionmiscworldscripts,Name="Brightness",PlaceholderText=math.floor(game.Lighting.Brightness),RemoveTextAfterFocusLost=false,Callback=function(Text)
	game.Lighting.Brightness = Text;
end});
Colorpickerskybox = Miscclient:CreateColorPicker({SectionParent=Sectionmiscworldscripts,Name="Ambient Color Picker",Color=Color3.fromRGB(0, 0, 0),Callback=function(Value)
	TweenService:Create(game.Lighting, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {Ambient=Value}):Play();
end});
Colorpickerskyboxoutdfor = Miscclient:CreateColorPicker({SectionParent=Sectionmiscworldscripts,Name="Outdoor Ambient Color Picker",Color=Color3.fromRGB(0, 0, 0),Callback=function(Value)
	TweenService:Create(game.Lighting, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.In, 0, false, 0), {OutdoorAmbient=Value}):Play();
end});
SliderTOD = Miscclient:CreateSlider({SectionParent=Sectionmiscworldscripts,Name="Time Of Day",Range={0,24},Increment=1,Suffix="Time",CurrentValue=math.floor(game.Lighting.ClockTime),Callback=function(Value)
	pcall(function()
		TweenService:Create(game.Lighting, TweenInfo.new(1.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0), {ClockTime=Value}):Play();
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectionmiscworldscripts,Name="Time Of Day",PlaceholderText=math.floor(game.Lighting.ClockTime),NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		TweenService:Create(game.Lighting, TweenInfo.new(1.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0), {ClockTime=Text}):Play();
	end);
end});
Button = Miscclient:CreateButton({SectionParent=Sectionmiscworldscripts,Name="Very Low GFX",Interact="Click",Callback=function()
	decalsyeeted = true;
	g = game;
	w = g.Workspace;
	l = g.Lighting;
	t = w.Terrain;
	t.WaterWaveSize = 0;
	t.WaterWaveSpeed = 0;
	t.WaterReflectance = 0;
	t.WaterTransparency = 0;
	l.GlobalShadows = false;
	l.FogEnd = 8999999488;
	l.Brightness = 0;
	settings().Rendering.QualityLevel = "Level01";
	for i, v in pairs(g:GetDescendants()) do
		if (v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart")) then
			v.Material = "Plastic";
			v.Reflectance = 0;
		elseif (v:IsA("Decal") or (v:IsA("Texture") and decalsyeeted)) then
			v.Transparency = 1;
		elseif (v:IsA("ParticleEmitter") or v:IsA("Trail")) then
			v.Lifetime = NumberRange.new(0);
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1;
			v.BlastRadius = 1;
		elseif (v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke")) then
			v.Enabled = false;
		elseif v:IsA("MeshPart") then
			v.Material = "Plastic";
			v.Reflectance = 0;
			v.TextureID = 10385902758728956;
		end
	end
	for i, e in pairs(l:GetChildren()) do
		if (e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect")) then
			e.Enabled = false;
		end
	end
	wait(1);
	function WindowFocusReleasedFunction()
		RunService:Set3dRenderingEnabled(false);
		setfpscap(10);
		return;
	end
	function WindowFocusedFunction()
		RunService:Set3dRenderingEnabled(true);
		setfpscap(360);
		return;
	end
	function Initialize()
		UserInputService.WindowFocusReleased:Connect(WindowFocusReleasedFunction);
		UserInputService.WindowFocused:Connect(WindowFocusedFunction);
		return;
	end
	Initialize();
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
lightrangee = 30;
lightbrightness = 5;
lightinger = false;
Togglelightclient = Miscclient:CreateToggle({SectionParent=Sectionmiscworldscripts,Name="Light",CurrentValue=false,Callback=function(Value)
	pcall(function()
		lightroot = Value;
		if lightroot then
			lightinger = true;
			local light = Instance.new("PointLight");
			light.Parent = getRoot(speaker.Character);
			spawn(function()
				while wait() do
					light.Range = lightrangee;
					light.Brightness = lightbrightness;
				end
			end);
		end
		if not lightroot then
			lightinger = false;
			for i, v in pairs(speaker.Character:GetDescendants()) do
				if (v.ClassName == "PointLight") then
					v:Destroy();
				end
			end
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglelightclient:Set(false);
		end);
	end);
end});
Sliderbright = Miscclient:CreateSlider({SectionParent=Sectionmiscworldscripts,Name="Change Light Brightness",Range={0,20},Increment=1,Suffix="Brightness",CurrentValue=5,Callback=function(Value)
	lightbrightness = Value;
end});
Inputbrgiht = Miscclient:CreateInput({SectionParent=Sectionmiscworldscripts,Name="Change Light Brightness",PlaceholderText=lightbrightness,RemoveTextAfterFocusLost=false,Callback=function(Text)
	lightbrightness = Text;
end});
Sliderranggerrr = Miscclient:CreateSlider({SectionParent=Sectionmiscworldscripts,Name="Change Light Range",Range={0,60},Increment=1,Suffix="Range",CurrentValue=30,Callback=function(Value)
	lightrangee = Value;
end});
Inputrangerrr = Miscclient:CreateInput({SectionParent=Sectionmiscworldscripts,Name="Change Light Range",PlaceholderText=lightrangee,RemoveTextAfterFocusLost=false,Callback=function(Text)
	lightrangee = Text;
end});
Toggleremovefogga = Miscclient:CreateToggle({SectionParent=Sectionmiscworldscripts,Name="Remove Fog",CurrentValue=false,Callback=function(Value)
	pcall(function()
		removefogga = Value;
		if removefogga then
			removefogg = game:GetService("RunService").RenderStepped:Connect(function()
				Lighting.FogStart = 0;
				Lighting.FogEnd = 99999999999;
				wait();
			end);
		end
		if not removefogga then
			removefogg:Disconnect();
			Lighting.FogEnd = origsettings.fe;
		end
	end);
end});
transparent = false;
transprencypartxray = 0.5;
xrayingreyer = false;
function x(v)
	if v then
		for _, i in pairs(workspace:GetDescendants()) do
			if (i:IsA("BasePart") and not i.Parent:FindFirstChildOfClass("Humanoid") and not i.Parent.Parent:FindFirstChildOfClass("Humanoid")) then
				i.LocalTransparencyModifier = transprencypartxray;
			end
		end
	else
		for _, i in pairs(workspace:GetDescendants()) do
			if (i:IsA("BasePart") and not i.Parent:FindFirstChildOfClass("Humanoid") and not i.Parent.Parent:FindFirstChildOfClass("Humanoid")) then
				i.LocalTransparencyModifier = 0;
			end
		end
	end
end
Toggle = Miscclient:CreateToggle({SectionParent=Sectionmiscworldscripts,Name="X-Ray",CurrentValue=false,Callback=function(Value)
	pcall(function()
		xrayyer = Value;
		if xrayyer then
			xrayingreyer = true;
			xraylooper = RunService.RenderStepped:Connect(function()
				transparent = true;
				x(transparent);
			end);
		end
		if not xrayyer then
			xrayingreyer = false;
			xraylooper:Disconnect();
			transparent = false;
			x(transparent);
		end
	end);
end});
Sliderxrayvalue = Miscclient:CreateSlider({SectionParent=Sectionmiscworldscripts,Name="X-Ray Part Transparency",Range={0,1},Increment=0.1,Suffix="Transparency",CurrentValue=transprencypartxray,Callback=function(Value)
	pcall(function()
		transprencypartxray = Value;
	end);
end});
Inputxrayvalue = Miscclient:CreateInput({SectionParent=Sectionmiscworldscripts,Name="X-Ray Part Transparency",PlaceholderText=transprencypartxray,NumbersOnly=false,CharacterLimit=2,RemoveTextAfterFocusLost=false,Callback=function(Text)
	transprencypartxray = Text;
end});
Pxrts = {};
Toggle = Miscclient:CreateToggle({SectionParent=Sectionmiscworldscripts,Name="Show Invisible Wall's",CurrentValue=false,Callback=function(Value)
	pcall(function()
		showinvislbewalls = Value;
		if showinvislbewalls then
			for i, v in pairs(workspace:GetDescendants()) do
				if (v:IsA("BasePart") and (v.Transparency == 1)) then
					v.Transparency = 0;
					Pxrts[#Pxrts + 1] = v;
				end
			end
		end
		if not showinvislbewalls then
			for i, v in pairs(Pxrts) do
				v.Transparency = 1;
			end
		end
	end);
end});
Sectiontodloop = Miscclient:CreateSection("LocalPlayer Related | World | Time Of Day Loop (Client)", false, true, 10709806631);
todvalue = 12;
Label = Misc:CreateLabel("Set A Value First Then Enable", Sectiontodloop);
Toggle = Misc:CreateToggle({SectionParent=Sectiontodloop,Name="Time Of Day Loop",CurrentValue=false,Callback=function(Value)
	pcall(function()
		todloop = Value;
		if todloop then
			todlooper = RunService.Heartbeat:Connect(function()
				TweenService:Create(game.Lighting, TweenInfo.new(1.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0), {ClockTime=todvalue}):Play();
			end);
		end
		if not todloop then
			todlooper:Disconnect();
		end
	end);
end});
Sliderf = Miscclient:CreateSlider({SectionParent=Sectiontodloop,Name="Time Of Day Loop",Range={0,24},Increment=1,Suffix="Time",CurrentValue=math.floor(game.Lighting.ClockTime),Callback=function(Value)
	pcall(function()
		todvalue = Value;
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectiontodloop,Name="Time Of Day Loop",PlaceholderText=math.floor(game.Lighting.ClockTime),NumbersOnly=true,CharacterLimit=2,RemoveTextAfterFocusLost=false,Callback=function(Text)
	todvalue = Text;
end});
Sectioncamera = Miscclient:CreateSection("LocalPlayer Related | Camera (Client)", false, false, 10709789686);
Buttonresetflysvalue = Miscclient:CreateButton({SectionParent=Sectioncamera,Name="Reset Camera Values",Interact="Click",Callback=function()
	pcall(function()
		Sliderwalkloop:Set(16);
		Sliderfov:Set(70);
		Sliderminimalzoomnoloop:Set(0);
		Slidermaxzoomnoloop:Set(128);
	end);
end});
Button = Miscclient:CreateButton({SectionParent=Sectioncamera,Name="Fix Camera",Interact="Click",Callback=function()
	workspace.CurrentCamera:remove();
	wait(0.1);
	repeat
		wait();
	until speaker.Character ~= nil 
	workspace.CurrentCamera.CameraSubject = speaker.Character:FindFirstChildWhichIsA("Humanoid");
	workspace.CurrentCamera.CameraType = "Custom";
	speaker.CameraMinZoomDistance = 0.5;
	speaker.CameraMaxZoomDistance = 400;
	speaker.CameraMode = "Classic";
	speaker.Character.Head.Anchored = false;
end});
Button = Miscclient:CreateButton({SectionParent=Sectioncamera,Name="Noclip Camera",Interact="Click",Callback=function()
	local sc = (debug and debug.setconstant) or setconstant;
	local gc = (debug and debug.getconstants) or getconstants;
	if (not sc or not getgc or not gc) then
		return Rayfield:Notify({Title="Incompatible Exploit!",Content="Missing Function's : setconstant or getconstants or getgc",Duration=3,Image=7733715400});
	end
	local pop = speaker.PlayerScripts.PlayerModule.CameraModule.ZoomController.Popper;
	for _, v in pairs(getgc()) do
		if ((type(v) == "function") and (getfenv(v).script == pop)) then
			for i, v1 in pairs(gc(v)) do
				if (tonumber(v1) == 0.25) then
					sc(v, i, 0);
				elseif (tonumber(v1) == 0) then
					sc(v, i, 0.25);
				end
			end
		end
	end
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content="Script Is Now Working!",Duration=3,Image=7733715400});
end});
Sliderfov = Miscclient:CreateSlider({SectionParent=Sectioncamera,Name="Field Of View",Range={45,120},Increment=1,Suffix="FOV",CurrentValue=math.floor(game:GetService("Workspace").Camera.FieldOfView),Callback=function(Value)
	pcall(function()
		TweenService:Create(game:GetService("Workspace").Camera, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0), {FieldOfView=Value}):Play();
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderfov:Set(70);
		end);
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectioncamera,Name="Field Of View",PlaceholderText=math.floor(game:GetService("Workspace").Camera.FieldOfView),NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	game:GetService("Workspace").Camera.FieldOfView = Text;
end});
Buttonfreeca = Miscclient:CreateButton({SectionParent=Sectioncamera,Name="Freecam",Interact="Click",Callback=function()
	effecttrue();
	Buttonfreeca:Set("Freecam (SHIFT+P)");
	speaker.DevEnableMouseLock = false;
	Rayfield:Notify({Title="Executed, SHIFT+P To Toggle!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=6,Image=7733715400});
	function sandbox(var, func)
		env = getfenv(func);
		newenv = setmetatable({}, {__index=function(self, k)
			if (k == "script") then
				return var;
			else
				return env[k];
			end
		end});
		setfenv(func, newenv);
		return func;
	end
	cors = {};
	mas = Instance.new("Model", game:GetService("Lighting"));
	LocalScript0 = Instance.new("LocalScript");
	LocalScript0.Name = "FreeCamera";
	LocalScript0.Parent = mas;
	table.insert(cors, sandbox(LocalScript0, function()
		pi = math.pi;
		abs = math.abs;
		clamp = math.clamp;
		exp = math.exp;
		rad = math.rad;
		sign = math.sign;
		sqrt = math.sqrt;
		tan = math.tan;
		ContextActionService = game:GetService("ContextActionService");
		Players = game:GetService("Players");
		RunService = game:GetService("RunService");
		StarterGui = game:GetService("StarterGui");
		UserInputService = game:GetService("UserInputService");
		LocalPlayer = Players.LocalPlayer;
		if not LocalPlayer then
			Players:GetPropertyChangedSignal("LocalPlayer"):Wait();
			LocalPlayer = Players.LocalPlayer;
		end
		Camera = workspace.CurrentCamera;
		workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
			newCamera = workspace.CurrentCamera;
			if newCamera then
				Camera = newCamera;
			end
		end);
		TOGGLE_INPUT_PRIORITY = Enum.ContextActionPriority.Low.Value;
		INPUT_PRIORITY = Enum.ContextActionPriority.High.Value;
		FREECAM_MACRO_KB = {Enum.KeyCode.LeftShift,Enum.KeyCode.P};
		NAV_GAIN = Vector3.new(1, 1, 1) * 64;
		PAN_GAIN = Vector2.new(0.75, 1) * 8;
		FOV_GAIN = 300;
		PITCH_LIMIT = rad(90);
		VEL_STIFFNESS = 1.5;
		PAN_STIFFNESS = 1;
		FOV_STIFFNESS = 4;
		Spring = {};
		do
			Spring.__index = Spring;
			Spring.new = function(freq, pos)
				self = setmetatable({}, Spring);
				self.f = freq;
				self.p = pos;
				self.v = pos * 0;
				return self;
			end;
			Spring.Update = function(self, dt, goal)
				f = self.f * 2 * pi;
				p0 = self.p;
				v0 = self.v;
				offset = goal - p0;
				decay = exp(-f * dt);
				p1 = goal + (((v0 * dt) - (offset * ((f * dt) + 1))) * decay);
				v1 = ((f * dt * ((offset * f) - v0)) + v0) * decay;
				self.p = p1;
				self.v = v1;
				return p1;
			end;
			Spring.Reset = function(self, pos)
				self.p = pos;
				self.v = pos * 0;
			end;
		end
		cameraPos = Vector3.new();
		cameraRot = Vector2.new();
		cameraFov = 0;
		velSpring = Spring.new(VEL_STIFFNESS, Vector3.new());
		panSpring = Spring.new(PAN_STIFFNESS, Vector2.new());
		fovSpring = Spring.new(FOV_STIFFNESS, 0);
		Input = {};
		do
			local thumbstickCurve;
			do
				K_CURVATURE = 2;
				K_DEADZONE = 0.15;
				function fCurve(x)
					return (exp(K_CURVATURE * x) - 1) / (exp(K_CURVATURE) - 1);
				end
				function fDeadzone(x)
					return fCurve((x - K_DEADZONE) / (1 - K_DEADZONE));
				end
				function thumbstickCurve(x)
					return sign(x) * clamp(fDeadzone(abs(x)), 0, 1);
				end
			end
			gamepad = {ButtonX=0,ButtonY=0,DPadDown=0,DPadUp=0,ButtonL2=0,ButtonR2=0,Thumbstick1=Vector2.new(),Thumbstick2=Vector2.new()};
			keyboard = {W=0,A=0,S=0,D=0,E=0,Q=0,U=0,H=0,J=0,K=0,I=0,Y=0,Up=0,Down=0,LeftShift=0,RightShift=0};
			mouse = {Delta=Vector2.new(),MouseWheel=0};
			NAV_GAMEPAD_SPEED = Vector3.new(1, 1, 1);
			NAV_KEYBOARD_SPEED = Vector3.new(1, 1, 1);
			PAN_MOUSE_SPEED = Vector2.new(1, 1) * (pi / 64);
			PAN_GAMEPAD_SPEED = Vector2.new(1, 1) * (pi / 8);
			FOV_WHEEL_SPEED = 1;
			FOV_GAMEPAD_SPEED = 0.25;
			NAV_ADJ_SPEED = 0.75;
			NAV_SHIFT_MUL = 0.25;
			navSpeed = 1;
			Input.Vel = function(dt)
				navSpeed = clamp(navSpeed + (dt * (keyboard.Up - keyboard.Down) * NAV_ADJ_SPEED), 0.01, 4);
				kGamepad = Vector3.new(thumbstickCurve(gamepad.Thumbstick1.x), thumbstickCurve(gamepad.ButtonR2) - thumbstickCurve(gamepad.ButtonL2), thumbstickCurve(-gamepad.Thumbstick1.y)) * NAV_GAMEPAD_SPEED;
				kKeyboard = Vector3.new(((keyboard.D - keyboard.A) + keyboard.K) - keyboard.H, ((keyboard.E - keyboard.Q) + keyboard.I) - keyboard.Y, ((keyboard.S - keyboard.W) + keyboard.J) - keyboard.U) * NAV_KEYBOARD_SPEED;
				shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift);
				return (kGamepad + kKeyboard) * navSpeed * ((shift and NAV_SHIFT_MUL) or 1);
			end;
			Input.Pan = function(dt)
				kGamepad = Vector2.new(thumbstickCurve(gamepad.Thumbstick2.y), thumbstickCurve(-gamepad.Thumbstick2.x)) * PAN_GAMEPAD_SPEED;
				kMouse = mouse.Delta * PAN_MOUSE_SPEED;
				mouse.Delta = Vector2.new();
				return kGamepad + kMouse;
			end;
			Input.Fov = function(dt)
				kGamepad = (gamepad.ButtonX - gamepad.ButtonY) * FOV_GAMEPAD_SPEED;
				kMouse = mouse.MouseWheel * FOV_WHEEL_SPEED;
				mouse.MouseWheel = 0;
				return kGamepad + kMouse;
			end;
			do
				function Keypress(action, state, input)
					keyboard[input.KeyCode.Name] = ((state == Enum.UserInputState.Begin) and 1) or 0;
					return Enum.ContextActionResult.Sink;
				end
				function GpButton(action, state, input)
					gamepad[input.KeyCode.Name] = ((state == Enum.UserInputState.Begin) and 1) or 0;
					return Enum.ContextActionResult.Sink;
				end
				function MousePan(action, state, input)
					delta = input.Delta;
					mouse.Delta = Vector2.new(-delta.y, -delta.x);
					return Enum.ContextActionResult.Sink;
				end
				function Thumb(action, state, input)
					gamepad[input.KeyCode.Name] = input.Position;
					return Enum.ContextActionResult.Sink;
				end
				function Trigger(action, state, input)
					gamepad[input.KeyCode.Name] = input.Position.z;
					return Enum.ContextActionResult.Sink;
				end
				function MouseWheel(action, state, input)
					mouse[input.UserInputType.Name] = -input.Position.z;
					return Enum.ContextActionResult.Sink;
				end
				function Zero(t)
					for k, v in pairs(t) do
						t[k] = v * 0;
					end
				end
				Input.StartCapture = function()
					ContextActionService:BindActionAtPriority("FreecamKeyboard", Keypress, false, INPUT_PRIORITY, Enum.KeyCode.W, Enum.KeyCode.U, Enum.KeyCode.A, Enum.KeyCode.H, Enum.KeyCode.S, Enum.KeyCode.J, Enum.KeyCode.D, Enum.KeyCode.K, Enum.KeyCode.E, Enum.KeyCode.I, Enum.KeyCode.Q, Enum.KeyCode.Y, Enum.KeyCode.Up, Enum.KeyCode.Down);
					ContextActionService:BindActionAtPriority("FreecamMousePan", MousePan, false, INPUT_PRIORITY, Enum.UserInputType.MouseMovement);
					ContextActionService:BindActionAtPriority("FreecamMouseWheel", MouseWheel, false, INPUT_PRIORITY, Enum.UserInputType.MouseWheel);
					ContextActionService:BindActionAtPriority("FreecamGamepadButton", GpButton, false, INPUT_PRIORITY, Enum.KeyCode.ButtonX, Enum.KeyCode.ButtonY);
					ContextActionService:BindActionAtPriority("FreecamGamepadTrigger", Trigger, false, INPUT_PRIORITY, Enum.KeyCode.ButtonR2, Enum.KeyCode.ButtonL2);
					ContextActionService:BindActionAtPriority("FreecamGamepadThumbstick", Thumb, false, INPUT_PRIORITY, Enum.KeyCode.Thumbstick1, Enum.KeyCode.Thumbstick2);
				end;
				Input.StopCapture = function()
					navSpeed = 1;
					Zero(gamepad);
					Zero(keyboard);
					Zero(mouse);
					ContextActionService:UnbindAction("FreecamKeyboard");
					ContextActionService:UnbindAction("FreecamMousePan");
					ContextActionService:UnbindAction("FreecamMouseWheel");
					ContextActionService:UnbindAction("FreecamGamepadButton");
					ContextActionService:UnbindAction("FreecamGamepadTrigger");
					ContextActionService:UnbindAction("FreecamGamepadThumbstick");
				end;
			end
		end
		function GetFocusDistance(cameraFrame)
			znear = 0.1;
			viewport = Camera.ViewportSize;
			projy = 2 * tan(cameraFov / 2);
			projx = (viewport.x / viewport.y) * projy;
			fx = cameraFrame.rightVector;
			fy = cameraFrame.upVector;
			fz = cameraFrame.lookVector;
			minVect = Vector3.new();
			minDist = 512;
			for x = 0, 1, 0.5 do
				for y = 0, 1, 0.5 do
					cx = (x - 0.5) * projx;
					cy = (y - 0.5) * projy;
					offset = ((fx * cx) - (fy * cy)) + fz;
					origin = cameraFrame.p + (offset * znear);
					part, hit = workspace:FindPartOnRay(Ray.new(origin, offset.unit * minDist));
					dist = (hit - origin).magnitude;
					if (minDist > dist) then
						minDist = dist;
						minVect = offset.unit;
					end
				end
			end
			return fz:Dot(minVect) * minDist;
		end
		function StepFreecam(dt)
			vel = velSpring:Update(dt, Input.Vel(dt));
			pan = panSpring:Update(dt, Input.Pan(dt));
			fov = fovSpring:Update(dt, Input.Fov(dt));
			zoomFactor = sqrt(tan(rad(70 / 2)) / tan(rad(cameraFov / 2)));
			cameraFov = clamp(cameraFov + (fov * FOV_GAIN * (dt / zoomFactor)), 1, 120);
			cameraRot = cameraRot + (pan * PAN_GAIN * (dt / zoomFactor));
			cameraRot = Vector2.new(clamp(cameraRot.x, -PITCH_LIMIT, PITCH_LIMIT), cameraRot.y % (2 * pi));
			cameraCFrame = CFrame.new(cameraPos) * CFrame.fromOrientation(cameraRot.x, cameraRot.y, 0) * CFrame.new(vel * NAV_GAIN * dt);
			cameraPos = cameraCFrame.p;
			Camera.CFrame = cameraCFrame;
			Camera.Focus = cameraCFrame * CFrame.new(0, 0, -GetFocusDistance(cameraCFrame));
			Camera.FieldOfView = cameraFov;
		end
		PlayerState = {};
		do
			local mouseIconEnabled;
			local cameraSubject;
			local cameraType;
			local cameraFocus;
			local cameraCFrame;
			local cameraFieldOfView;
			screenGuis = {};
			coreGuis = {Backpack=true,Chat=true,Health=true,PlayerList=true};
			setCores = {BadgesNotificationsActive=true,PointsNotificationsActive=true};
			PlayerState.Push = function()
				for name in pairs(coreGuis) do
					coreGuis[name] = StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType[name]);
					StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], false);
				end
				for name in pairs(setCores) do
					setCores[name] = StarterGui:GetCore(name);
					StarterGui:SetCore(name, false);
				end
				playergui = LocalPlayer:FindFirstChildOfClass("PlayerGui");
				if playergui then
					for _, gui in pairs(playergui:GetChildren()) do
						if (gui:IsA("ScreenGui") and gui.Enabled) then
							screenGuis[#screenGuis + 1] = gui;
							gui.Enabled = false;
						end
					end
				end
				cameraFieldOfView = Camera.FieldOfView;
				Camera.FieldOfView = 70;
				cameraType = Camera.CameraType;
				Camera.CameraType = Enum.CameraType.Custom;
				cameraSubject = Camera.CameraSubject;
				Camera.CameraSubject = nil;
				cameraCFrame = Camera.CFrame;
				cameraFocus = Camera.Focus;
				mouseIconEnabled = UserInputService.MouseIconEnabled;
				UserInputService.MouseIconEnabled = false;
				mouseBehavior = UserInputService.MouseBehavior;
				UserInputService.MouseBehavior = Enum.MouseBehavior.Default;
			end;
			PlayerState.Pop = function()
				for name, isEnabled in pairs(coreGuis) do
					StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType[name], isEnabled);
				end
				for name, isEnabled in pairs(setCores) do
					StarterGui:SetCore(name, isEnabled);
				end
				for _, gui in pairs(screenGuis) do
					if gui.Parent then
						gui.Enabled = true;
					end
				end
				Camera.FieldOfView = cameraFieldOfView;
				cameraFieldOfView = nil;
				Camera.CameraType = cameraType;
				cameraType = nil;
				Camera.CameraSubject = cameraSubject;
				cameraSubject = nil;
				Camera.CFrame = cameraCFrame;
				cameraCFrame = nil;
				Camera.Focus = cameraFocus;
				cameraFocus = nil;
				UserInputService.MouseIconEnabled = mouseIconEnabled;
				mouseIconEnabled = nil;
				UserInputService.MouseBehavior = mouseBehavior;
				mouseBehavior = nil;
			end;
		end
		function StartFreecam()
			cameraCFrame = Camera.CFrame;
			cameraRot = Vector2.new(cameraCFrame:toEulerAnglesYXZ());
			cameraPos = cameraCFrame.p;
			cameraFov = Camera.FieldOfView;
			velSpring:Reset(Vector3.new());
			panSpring:Reset(Vector2.new());
			fovSpring:Reset(0);
			PlayerState.Push();
			RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, StepFreecam);
			Input.StartCapture();
		end
		function StopFreecam()
			Input.StopCapture();
			RunService:UnbindFromRenderStep("Freecam");
			PlayerState.Pop();
			speaker.DevEnableMouseLock = true;
		end
		do
			enabled = false;
			function ToggleFreecam()
				if enabled then
					StopFreecam();
				else
					StartFreecam();
				end
				enabled = not enabled;
			end
			function CheckMacro(macro)
				for i = 1, #macro - 1 do
					if not UserInputService:IsKeyDown(macro[i]) then
						return;
					end
				end
				ToggleFreecam();
			end
			function HandleActivationInput(action, state, input)
				if (state == Enum.UserInputState.Begin) then
					if (input.KeyCode == FREECAM_MACRO_KB[#FREECAM_MACRO_KB]) then
						CheckMacro(FREECAM_MACRO_KB);
					end
				end
				return Enum.ContextActionResult.Pass;
			end
			ContextActionService:BindActionAtPriority("FreecamToggle", HandleActivationInput, false, TOGGLE_INPUT_PRIORITY, FREECAM_MACRO_KB[#FREECAM_MACRO_KB]);
		end
	end));
	for i, v in pairs(mas:GetChildren()) do
		v.Parent = game:GetService("Players").LocalPlayer.PlayerGui;
		pcall(function()
			v:MakeJoints();
		end);
	end
	mas:Destroy();
	for i, v in pairs(cors) do
		spawn(function()
			pcall(v);
		end);
	end
end});
Slidermaxzoomnoloop = Miscclient:CreateSlider({SectionParent=Sectioncamera,Name="Change Max Zoom",Range={0,9999},Increment=1,Suffix="Zoom",CurrentValue=math.floor(speaker.CameraMaxZoomDistance),Callback=function(Value)
	pcall(function()
		speaker.CameraMaxZoomDistance = Value;
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectioncamera,Name="Change Max Zoom",PlaceholderText=math.floor(speaker.CameraMaxZoomDistance),RemoveTextAfterFocusLost=false,NumbersOnly=true,Callback=function(Text)
	speaker.CameraMaxZoomDistance = Text;
end});
Sliderminimalzoomnoloop = Miscclient:CreateSlider({SectionParent=Sectioncamera,Name="Change Minimal Zoom",Range={0,9999},Increment=1,Suffix="Zoom",CurrentValue=math.floor(speaker.CameraMinZoomDistance),Callback=function(Value)
	pcall(function()
		speaker.CameraMinZoomDistance = Value;
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectioncamera,Name="Change Minimal Zoom",PlaceholderText=math.floor(speaker.CameraMinZoomDistance),NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	speaker.CameraMinZoomDistance = Text;
end});
maxzoomvalue = 128;
Sectioncameraloops = Miscclient:CreateSection("LocalPlayer Related | Camera | Max Zoom Loop (Client)", false, true, 10709789686);
Label = Miscclient:CreateLabel("Set A Value First Then Enable", Sectioncameraloops);
Buttonresetflysvalue = Miscclient:CreateButton({SectionParent=Sectioncameraloops,Name="Reset Camera Loop Values",Interact="Click",Callback=function()
	pcall(function()
		Sliderloopmaxzoom:Set(128);
	end);
end});
Toggle = Miscclient:CreateToggle({SectionParent=Sectioncameraloops,Name="Loop Max Zoom",CurrentValue=false,Callback=function(Value)
	pcall(function()
		maxzoomloopvalue = Value;
		if maxzoomloopvalue then
			maxzoomloop = RunService.Heartbeat:Connect(function()
				speaker.CameraMaxZoomDistance = maxzoomvalue;
			end);
		end
		if not maxzoomloopvalue then
			maxzoomloop:Disconnect();
		end
	end);
end});
Sliderloopmaxzoom = Miscclient:CreateSlider({SectionParent=Sectioncameraloops,Name="Change Max Zoom",Range={0,99999},Increment=1,Suffix="Zoom",CurrentValue=math.floor(speaker.CameraMaxZoomDistance),Callback=function(Value)
	pcall(function()
		maxzoomvalue = Value;
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectioncameraloops,Name="Change Max Zoom",PlaceholderText="",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	maxzoomvalue = Text;
end});
Sectiontaudio = Miscclient:CreateSection("LocalPlayer Related | Audio (Client)", false, true, 10747375679);
Button = Miscclient:CreateButton({SectionParent=Sectiontaudio,Name="Edge's Audio Logger",Interact="Click",Callback=function()
	Rayfield:Notify({Title="Wait..",Content="Loading it...",Duration=2,Image=7733715400});
	wait(2);
	loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/audiologger.lua", true))();
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
audioid = nil;
Button = Miscclient:CreateButton({SectionParent=Sectiontaudio,Name="Play Audio",Interact="Click",Callback=function()
	Soundplayaudio = Instance.new("Sound", game:GetService("Lighting"));
	Soundplayaudio.SoundId = "rbxassetid://" .. audioid;
	Soundplayaudio:Play();
	Rayfield:Notify({Title="Playing!",Content="Playing The Audio",Duration=3,Image=7733715400});
end});
Button = Miscclient:CreateButton({SectionParent=Sectiontaudio,Name="Pause Audio",Interact="Click",Callback=function()
	Soundplayaudio:Pause();
	Rayfield:Notify({Title="Paused!",Content="Paused The Audio",Duration=3,Image=7733715400});
end});
Button = Miscclient:CreateButton({SectionParent=Sectiontaudio,Name="Resume Audio",Interact="Click",Callback=function()
	Soundplayaudio:Resume();
	Rayfield:Notify({Title="Resumed!",Content="Resumed The Audio",Duration=3,Image=7733715400});
end});
Button = Miscclient:CreateButton({SectionParent=Sectiontaudio,Name="Stop Audio",Interact="Click",Callback=function()
	Soundplayaudio:Stop();
	Rayfield:Notify({Title="Stopped!",Content="Stopped The Audio",Duration=3,Image=7733715400});
end});
Toggle = Miscclient:CreateToggle({SectionParent=Sectiontaudio,Name="Loop Audio",Interact="Click",CurrentValue=false,Callback=function(Value)
	pcall(function()
		playaudio = Value;
		if playaudio then
			Soundplayaudio.Looped = true;
		end
		if not playaudio then
			Soundplayaudio.Looped = false;
		end
	end);
end});
Sliderbright = Miscclient:CreateSlider({SectionParent=Sectiontaudio,Name="Audio Volume",Range={0,10},Increment=1,Suffix="Volume",CurrentValue=1,Callback=function(Value)
	pcall(function()
		Soundplayaudio.Volume = Value;
	end);
end});
Input = Miscclient:CreateInput({SectionParent=Sectiontaudio,Name="Audio Volume",PlaceholderText=1,NumbersOnly=true,CharacterLimit=2,RemoveTextAfterFocusLost=false,Callback=function(Text)
	Soundplayaudio.Volume = Text;
end});
Input = Miscclient:CreateInput({SectionParent=Sectiontaudio,Name="Enter Audio",PlaceholderText="",NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	audioid = Text;
end});
Animations = Window:CreateTab("Animation", 1114393432);
Sectiontotalscrismisc = Animations:CreateSection("Total Scripts: 45", true);
Paragraph = Animations:CreateParagraph({Title="Note",Content="Section's With FE (Filtering Enabled) Can Be Seen By Other Player's\nIf a Function Has (Client) Mean's You Only Can See It."});
SectionAnimHubs = Animations:CreateSection("FE LocalPlayer Related | Current Animation", false, false, 10734920149);
Togglefreezeanims = Animations:CreateToggle({SectionParent=SectionAnimHubs,Name="Freeze Current Animation",CurrentValue=false,Callback=function(Value)
	pcall(function()
		freezeanims = Value;
		if freezeanims then
			game.Players.LocalPlayer.Character.Animate.Disabled = true;
		end
		if not freezeanims then
			game.Players.LocalPlayer.Character.Animate.Disabled = false;
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglefreezeanims:Set(false);
		end);
	end);
end});
Slider = Animations:CreateSlider({SectionParent=SectionAnimHubs,Name="Current Animation Speed",Range={1,60},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	Char = speaker.Character;
	Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController");
	for i, v in next, Hum:GetPlayingAnimationTracks() do
		spawn(function()
			while wait() do
				v:AdjustSpeed(Value);
			end
		end);
	end
end});
Input = Animations:CreateInput({SectionParent=SectionAnimHubs,Name="Current Animation Speed",PlaceholderText=1,RemoveTextAfterFocusLost=false,NumbersOnly=true,CharacterLimit=2,Callback=function(Text)
	Char = speaker.Character;
	Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController");
	for i, v in next, Hum:GetPlayingAnimationTracks() do
		spawn(function()
			while wait() do
				v:AdjustSpeed(Text);
			end
		end);
	end
end});
SectionAnimpl = Animations:CreateSection("FE LocalPlayer Related | Animation Player", false, true, 10734923549);
Input = Animations:CreateInput({SectionParent=SectionAnimpl,Name="Animation",PlaceholderText="ID",RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		Animplr = Instance.new("Animation");
		if not r15(speaker) then
			Animplr.AnimationId = "rbxassetid://" .. Text .. "";
		else
			effecttrue();
			Rayfield:Notify({Title="R6!",Content="Bro Only R6!",Duration=3,Image=7733715400});
		end
	end);
end});
Button = Animations:CreateButton({SectionParent=SectionAnimpl,Name="Play Animation",Interact="Click",Callback=function()
	animpla = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(Animplr);
	animpla:Play(0.1, 1, 1);
	effecttrue();
	Rayfield:Notify({Title="Playing!",Content="Playing The Animation..",Duration=3,Image=7733715400});
end});
Button = Animations:CreateButton({SectionParent=SectionAnimpl,Name="Stop Animation",Interact="Click",Callback=function()
	animpla:Stop();
	Animplr:Destroy();
	effecttrue();
	Rayfield:Notify({Title="Stopped!",Content="Stopped The Animation..",Duration=3,Image=7733715400});
end});
Slider = Animations:CreateSlider({SectionParent=SectionAnimpl,Name="Playing Animation Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		animpla:AdjustSpeed(Value);
	end);
end});
Input = Animations:CreateInput({SectionParent=SectionAnimpl,Name="Playing Animation Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		animpla:AdjustSpeed(Text);
	end);
end});
SectionAnimHubs = Animations:CreateSection("FE Animation Hub's R6 & R15", false, true, 10709759610);
Button = Animations:CreateButton({SectionParent=SectionAnimHubs,Name="R6 & R15 Animation Hub",Interact="Click",Callback=function()
	effecttrue();
	loadstring(game:HttpGet("https://pastebin.com/raw/RmD3qNp7", true))();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Button = Animations:CreateButton({SectionParent=SectionAnimHubs,Name="R15 Emote Hub",Interact="Click",Callback=function()
	Rayfield:Notify({Title="Wait..",Content="Loading it...",Duration=2,Image=7733715400});
	wait(2);
	effecttrue();
	Rayfield:Notify({Title="Open With Comma (,)!",Content="Script Is Working!",Duration=6,Image=7733715400});
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Gi7331/scripts/main/Emote.lua", true))();
end});
Sectionrblxclientanims = Animations:CreateSection("FE Roblox Client Animation's", false, true, 11932783331);
dance1on = false;
Toggleedance1 = Animations:CreateToggle({SectionParent=Sectionrblxclientanims,Name="/e Dance1 R6 & R15",CurrentValue=false,Callback=function(Value)
	pcall(function()
		eedancerfee = Value;
		if eedancerfee then
			dance1on = true;
			edance1Anim = Instance.new("Animation");
			if not r15(speaker) then
				edance1Anim.AnimationId = "rbxassetid://182491065";
			else
				edance1Anim.AnimationId = "rbxassetid://507771955";
			end
			edance1 = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(edance1Anim);
			edance1:Play(0.1, 10, 1);
			edance1Died = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				edance1Died:Disconnect();
				edance1:Stop();
				edance1Anim:Destroy();
			end);
		end
		if not eedancerfee then
			dance1on = false;
			edance1Died:Disconnect();
			edance1:Stop();
			edance1Anim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleedance1:Set(false);
		end);
	end);
end});
edance1Slider = Animations:CreateSlider({SectionParent=Sectionrblxclientanims,Name="/e Dance1 Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		edance1:AdjustSpeed(Value);
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			edance1Slider:Set(1);
		end);
	end);
end});
edance1Input = Animations:CreateInput({SectionParent=Sectionrblxclientanims,Name="/e Dance1 Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		edance1:AdjustSpeed(Text);
	end);
end});
dance2on = false;
Toggleedance2 = Animations:CreateToggle({SectionParent=Sectionrblxclientanims,Name="/e Dance2 R6 & R15",CurrentValue=false,Callback=function(Value)
	pcall(function()
		eedancerfe = Value;
		if eedancerfe then
			dance2on = true;
			edance2Anim = Instance.new("Animation");
			if not r15(speaker) then
				edance2Anim.AnimationId = "rbxassetid://182491277";
			else
				edance2Anim.AnimationId = "rbxassetid://507776879";
			end
			edance2 = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(edance2Anim);
			edance2:Play(0.1, 10, 1);
			edance2Died = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				edance2Died:Disconnect();
				edance2:Stop();
				edance2Anim:Destroy();
			end);
		end
		if not eedancerfe then
			dance2on = false;
			edance2Died:Disconnect();
			edance2:Stop();
			edance2Anim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleedance2:Set(false);
		end);
	end);
end});
edance2Slider = Animations:CreateSlider({SectionParent=Sectionrblxclientanims,Name="/e Dance2 Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		edance2:AdjustSpeed(Value);
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			edance2Slider:Set(1);
		end);
	end);
end});
edance2Input = Animations:CreateInput({SectionParent=Sectionrblxclientanims,Name="/e Dance2 Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		edance2:AdjustSpeed(Text);
	end);
end});
dance3on = false;
Toggleedance3 = Animations:CreateToggle({SectionParent=Sectionrblxclientanims,Name="/e Dance3 R6 & R15",CurrentValue=false,Callback=function(Value)
	pcall(function()
		eedancerfe3 = Value;
		if eedancerfe3 then
			dance3on = true;
			edance3Anim = Instance.new("Animation");
			if not r15(speaker) then
				edance3Anim.AnimationId = "rbxassetid://182491368";
			else
				edance3Anim.AnimationId = "rbxassetid://507777268";
			end
			edance3 = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(edance3Anim);
			edance3:Play(0.1, 10, 1);
			edance3Died = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				edance3Died:Disconnect();
				edance3:Stop();
				edance2Anim:Destroy();
			end);
		end
		if not eedancerfe3 then
			dance3on = false;
			edance3Died:Disconnect();
			edance3:Stop();
			edance3Anim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleedance3:Set(false);
		end);
	end);
end});
edance3Slider = Animations:CreateSlider({SectionParent=Sectionrblxclientanims,Name="/e Dance3 Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		edance3:AdjustSpeed(Value);
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			edance3Slider:Set(1);
		end);
	end);
end});
edance3Input = Animations:CreateInput({SectionParent=Sectionrblxclientanims,Name="/e Dance3 Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		edance3:AdjustSpeed(Text);
	end);
end});
Button = Animations:CreateButton({SectionParent=Sectionrblxclientanims,Name="/e Cheer R6 & R15",Interact="Click",Callback=function()
	cheranim = Instance.new("Animation");
	if not r15(speaker) then
		cheranim.AnimationId = "rbxassetid://129423030";
	else
		cheranim.AnimationId = "rbxassetid://507770677";
	end
	ccheer = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(cheranim);
	ccheer:Play(0.1, 10, 1);
	cherdied = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
		cherdied:Disconnect();
		ccheer:Stop();
		cheranim:Destroy();
	end);
end});
Sectionfeanims = Animations:CreateSection("FE Animation's", false, true, 10686489468);
Togglebanganim = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Bang R6 & R15",CurrentValue=false,Callback=function(Value)
	pcall(function()
		febangerion = Value;
		if febangerion then
			cbangerAnim = Instance.new("Animation");
			if not r15(speaker) then
				cbangerAnim.AnimationId = "rbxassetid://148840371";
			else
				cbangerAnim.AnimationId = "rbxassetid://5918726674";
			end
			cbanger = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(cbangerAnim);
			cbanger:Play(0.1, 1, 1);
			cbangerDied = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
				cbangerDied:Disconnect();
				cbanger:Stop();
				cbangerAnim:Destroy();
			end);
		end
		if not febangerion then
			cbangerDied:Disconnect();
			cbanger:Stop();
			cbangerAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglebanganim:Set(false);
		end);
	end);
end});
bangerSlider = Animations:CreateSlider({SectionParent=Sectionfeanims,Name="Bang Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		cbanger:AdjustSpeed(Value);
	end);
end});
bangerInput = Animations:CreateInput({SectionParent=Sectionfeanims,Name="Bang Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		cbanger:AdjustSpeed(Text);
	end);
end});
dancerion = false;
Togglemovingdancer = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Moving Dance R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		dancer = Value;
		if dancer then
			dancerion = true;
			if not r15(speaker) then
				dancerAnim = Instance.new("Animation");
				dancerAnim.AnimationId = "rbxassetid://429703734";
				dancerr = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(dancerAnim);
				dancerr:Play(0.1, 1, 1);
				dancerrr = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
					dancerrr:Disconnect();
					dancerr:Stop();
					dancerAnim:Destroy();
				end);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not dancer then
			dancerion = false;
			dancerrr:Disconnect();
			dancerr:Stop();
			dancerAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglemovingdancer:Set(false);
		end);
	end);
end});
Slidermovindanc = Animations:CreateSlider({SectionParent=Sectionfeanims,Name="Moving Dance Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		dancerr:AdjustSpeed(Value);
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Slidermovindanc:Set(1);
		end);
	end);
end});
dancerInput = Animations:CreateInput({SectionParent=Sectionfeanims,Name="Moving Dance Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		dancerr:AdjustSpeed(Text);
	end);
end});
Togglerandance = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Random Dance R6 & R15",CurrentValue=false,Callback=function(Value)
	pcall(function()
		randomizedance = Value;
		randomstringdances = {"27789359","30196114","248263260","45834924","33796059","28488254","52155728"};
		if r15(speaker) then
			randomstringdances = {"3333432454","4555808220","4049037604","4555782893","10214311282","10714010337","10713981723","10714372526","10714076981","10714392151","11444443576"};
		end
		if randomizedance then
			animation = Instance.new("Animation");
			animation.AnimationId = "rbxassetid://" .. randomstringdances[math.random(1, #randomstringdances)];
			danceTrack = speaker.Character:FindFirstChildWhichIsA("Humanoid"):LoadAnimation(animation);
			danceTrack.Looped = true;
			danceTrack:Play();
		end
		if not randomizedance then
			danceTrack:Stop();
			danceTrack:Destroy();
		end
	end);
end});
Sliderrandance = Animations:CreateSlider({SectionParent=Sectionfeanims,Name="Random Dance Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		randance:AdjustSpeed(Value);
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Sliderrandance:Set(1);
		end);
	end);
end});
Inputrandance = Animations:CreateInput({SectionParent=Sectionfeanims,Name="Random Dance Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		randance:AdjustSpeed(Text);
	end);
end});
monsterdancefrrr = false;
Togglemonstermasher = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Monster Mash Dance R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		monsterdancer = Value;
		if monsterdancer then
			monsterdancefrrr = true;
			if not r15(speaker) then
				monsterdancerAnim = Instance.new("Animation");
				monsterdancerAnim.AnimationId = "rbxassetid://35654637";
				monsterdancerr = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(monsterdancerAnim);
				monsterdancerr:Play(0.1, 1, 1);
				monsterdancerrr = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
					monsterdancerrr:Disconnect();
					monsterdancerr:Stop();
					monsterdancerAnim:Destroy();
				end);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not monsterdancer then
			monsterdancefrrr = false;
			monsterdancerrr:Disconnect();
			monsterdancerr:Stop();
			monsterdancerAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglemonstermasher:Set(false);
		end);
	end);
end});
Slidermonsterdanc = Animations:CreateSlider({SectionParent=Sectionfeanims,Name="Monster Mash Dance Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		monsterdancerr:AdjustSpeed(Value);
	end);
end});
Inputmonster = Animations:CreateInput({SectionParent=Sectionfeanims,Name="Monster Mash Dance Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		monsterdancerr:AdjustSpeed(Text);
	end);
end});
dinowalkerrra = false;
Toggledinowalk = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Dino Walk R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		dinowalker = Value;
		if dinowalker then
			dinowalkerrra = true;
			if not r15(speaker) then
				dinowalkerAnim = Instance.new("Animation");
				dinowalkerAnim.AnimationId = "rbxassetid://204328711";
				dinowalkerr = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(dinowalkerAnim);
				dinowalkerr:Play(0.1, 1, 1);
				dinowalkerrr = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
					dinowalkerrr:Disconnect();
					dinowalkerr:Stop();
					dinowalkerAnim:Destroy();
				end);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not dinowalker then
			dinowalkerrra = false;
			dinowalkerrr:Disconnect();
			dinowalkerr:Stop();
			dinowalkerAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggledinowalk:Set(false);
		end);
	end);
end});
Sliderdinowalk = Animations:CreateSlider({SectionParent=Sectionfeanims,Name="Dino Walk Speed",Range={0,100},Increment=1,Suffix="Speed",CurrentValue=1,Callback=function(Value)
	pcall(function()
		dinowalkerr:AdjustSpeed(Value);
	end);
end});
Inputdinowalker = Animations:CreateInput({SectionParent=Sectionfeanims,Name="Dino Walk Speed",PlaceholderText="1",CharacterLimit=3,NumbersOnly=true,RemoveTextAfterFocusLost=false,Callback=function(Text)
	pcall(function()
		dinowalkerr:AdjustSpeed(Text);
	end);
end});
Togglecarpetanim = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Carpet R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		fecarpetion = Value;
		if fecarpetion then
			if not r15(speaker) then
				carpetAnim = Instance.new("Animation");
				carpetAnim.AnimationId = "rbxassetid://282574440";
				carpet = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(carpetAnim);
				carpet:Play(0.1, 1, 1);
				carpetDied = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
					carpet:Stop();
					carpetAnim:Destroy();
					carpetDied:Disconnect();
				end);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not fecarpetion then
			carpetDied:Disconnect();
			carpet:Stop();
			carpetAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglecarpetanim:Set(false);
		end);
	end);
end});
ToggleStaffwalk = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Staff Walk R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		dinowalker = Value;
		if dinowalker then
			if not r15(speaker) then
				staffwalkeranim = Instance.new("Animation");
				staffwalkeranim.AnimationId = "rbxassetid://27759788";
				staffwalker = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(staffwalkeranim);
				staffwalker:Play(0.1, 1, 1);
				staffwalkerr = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
					staffwalkerr:Disconnect();
					staffwalker:Stop();
					staffwalkeranim:Destroy();
				end);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not dinowalker then
			staffwalkerr:Disconnect();
			staffwalker:Stop();
			staffwalkeranim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			ToggleStaffwalk:Set(false);
		end);
	end);
end});
Togglespasm = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Spasm R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		spastic = Value;
		if spastic then
			if not r15(speaker) then
				spasmAnim = Instance.new("Animation");
				spasmAnim.AnimationId = "rbxassetid://33796059";
				spasmm = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(spasmAnim);
				spasmm:Play();
				spasmm:AdjustSpeed(99);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not spastic then
			spasmm:Stop();
			spasmAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglespasm:Set(false);
		end);
	end);
end});
Togglecloneillu = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Clone Illusion R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		clonerillusion = Value;
		if clonerillusion then
			if not r15(speaker) then
				cloneillusionAnim = Instance.new("Animation");
				cloneillusionAnim.AnimationId = "rbxassetid://215384594";
				cloneillu = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(cloneillusionAnim);
				cloneillu:Play(0.5, 1, 10000000);
				cloneillu:AdjustSpeed(9999);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not clonerillusion then
			cloneillu:Stop();
			cloneillusionAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglecloneillu:Set(false);
		end);
	end);
end});
Toggleglitchjump = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Glitch Jump R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		glitchingjump = Value;
		if glitchingjump then
			if not r15(speaker) then
				glitchjumpAnim = Instance.new("Animation");
				glitchjumpAnim.AnimationId = "rbxassetid://184574340";
				glitchjump = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(glitchjumpAnim);
				while wait() do
					if (glitchjump.IsPlaying == false) then
						if glitchingjump then
							glitchjump:Play(0.5, 1, 40);
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not glitchingjump then
			superfaintt:Stop();
			glitchjumpAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleglitchjump:Set(false);
		end);
	end);
end});
Toggleglitchlevi = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Glitch Levitate R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		glitchleviii = Value;
		if glitchleviii then
			if not r15(speaker) then
				glitchleviAnim = Instance.new("Animation");
				glitchleviAnim.AnimationId = "rbxassetid://313762630";
				glitchlevi = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(glitchleviAnim);
				glitchlevi:Play(0.5, 1, 10000000);
				glitchlevi:AdjustSpeed(9999);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not glitchleviii then
			glitchlevi:Stop();
			glitchleviAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleglitchlevi:Set(false);
		end);
	end);
end});
Togglefainter = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Faint R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		fainterrr = Value;
		if fainterrr then
			if not r15(speaker) then
				faintAnim = Instance.new("Animation");
				faintAnim.AnimationId = "rbxassetid://181526230";
				faintt = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(faintAnim);
				faintt:Play(0.5, 1, 10000000);
				faintt:AdjustSpeed(9999);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not fainterrr then
			faintt:Stop();
			faintAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglefainter:Set(false);
		end);
	end);
end});
Togglesuperfainter = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Super Faint R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		superfainterrr = Value;
		if superfainterrr then
			if not r15(speaker) then
				superfaintAnim = Instance.new("Animation");
				superfaintAnim.AnimationId = "rbxassetid://181525546";
				superfaintt = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(superfaintAnim);
				while wait() do
					if (superfaintt.IsPlaying == false) then
						if superfainterrr then
							superfaintt:Play(0.5, 1, 40);
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not superfainterrr then
			superfaintt:Stop();
			superfaintAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglesuperfainter:Set(false);
		end);
	end);
end});
Togglearmtubine = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Arm Turbine R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		armturbine = Value;
		if armturbine then
			if not r15(speaker) then
				armturbineAnim = Instance.new("Animation");
				armturbineAnim.AnimationId = "rbxassetid://259438880";
				armturb = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(armturbineAnim);
				armturb:Play(0.5, 1, 10000000);
				armturb:AdjustSpeed(9999);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not armturbine then
			armturb:Stop();
			armturbineAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglearmtubine:Set(false);
		end);
	end);
end});
Togglearmdetacher = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Arm Detach R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		armdetacherrr = Value;
		if armdetacherrr then
			if not r15(speaker) then
				armdetachAnim = Instance.new("Animation");
				armdetachAnim.AnimationId = "rbxassetid://33169583";
				armdetach = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(armdetachAnim);
				while wait() do
					if (armdetach.IsPlaying == false) then
						if armdetacherrr then
							armdetach:Play(0.1, 1, 1000000);
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not armdetacherrr then
			armdetach:Stop();
			armdetachAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglearmdetacher:Set(false);
		end);
	end);
end});
Toggleinsanelegs = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Insane Leg's R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		insanelegger = Value;
		if insanelegger then
			if not r15(speaker) then
				insanelegsAnim = Instance.new("Animation");
				insanelegsAnim.AnimationId = "rbxassetid://87986341";
				insanelegs = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(insanelegsAnim);
				while wait() do
					if (insanelegs.IsPlaying == false) then
						if insanelegger then
							insanelegs:Play(0.1, 1, 1000000);
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not insanelegger then
			insanelegs:Stop();
			insanelegsAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Toggleinsanelegs:Set(false);
		end);
	end);
end});
Togglepinchnose = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Pinch Nose R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		pinchnoser = Value;
		if pinchnoser then
			if not r15(speaker) then
				pinchnoseAnim = Instance.new("Animation");
				pinchnoseAnim.AnimationId = "rbxassetid://30235165";
				pinchnose = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(pinchnoseAnim);
				while wait() do
					if (pinchnose.IsPlaying == false) then
						if pinchnoser then
							pinchnose:Play(0.1, 1, 1);
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not pinchnoser then
			pinchnose:Stop();
			pinchnoseAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglepinchnose:Set(false);
		end);
	end);
end});
Togglefloatinghead = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Floating Head R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		floatingheader = Value;
		if floatingheader then
			if not r15(speaker) then
				floatingheadAnim = Instance.new("Animation");
				floatingheadAnim.AnimationId = "rbxassetid://121572214";
				floathead = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(floatingheadAnim);
				while wait() do
					if (floathead.IsPlaying == false) then
						if floatingheader then
							floathead:Play(0.1, 1, 1);
						end
					end
				end
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not floatingheader then
			floathead:Stop();
			floatingheadAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglefloatinghead:Set(false);
		end);
	end);
end});
Togglezombiearmss = Animations:CreateToggle({SectionParent=Sectionfeanims,Name="Zombie Arm's R6",CurrentValue=false,Callback=function(Value)
	pcall(function()
		zombiearmss = Value;
		if zombiearmss then
			if not r15(speaker) then
				zombiearmsAnim = Instance.new("Animation");
				zombiearmsAnim.AnimationId = "rbxassetid://183294396";
				zomearm = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(zombiearmsAnim);
				zomearm:Play();
				zomearm:AdjustSpeed(0);
			else
				effectfalse();
				Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
			end
		end
		if not zombiearmss then
			zomearm:Stop();
			zombiearmsAnim:Destroy();
		end
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			Togglezombiearmss:Set(false);
		end);
	end);
end});
Button = Animations:CreateButton({SectionParent=Sectionfeanims,Name="HeadThrow R6",Interact="Click",Callback=function()
	if not r15(speaker) then
		AnimationId = "35154961";
		HeadThrowAnim = Instance.new("Animation");
		HeadThrowAnim.AnimationId = "rbxassetid://" .. AnimationId;
		headthrowk = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(HeadThrowAnim);
		headthrowk:Play(0);
		headthrowk:AdjustSpeed(1);
	else
		effectfalse();
		Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
	end
end});
Button = Animations:CreateButton({SectionParent=Sectionfeanims,Name="KickBoard R6",Interact="Click",Callback=function()
	if not r15(speaker) then
		monsterdancerAnim = Instance.new("Animation");
		monsterdancerAnim.AnimationId = "rbxassetid://160737244";
		monsterdancerr = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(monsterdancerAnim);
		monsterdancerr:Play(0.1, 1, 1);
		monsterdancerrr = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
			monsterdancerrr:Disconnect();
			monsterdancerr:Stop();
			monsterdancerAnim:Destroy();
		end);
	else
		effectfalse();
		Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
	end
end});
Button = Animations:CreateButton({SectionParent=Sectionfeanims,Name="Taunt R6",Interact="Click",Callback=function()
	if not r15(speaker) then
		monsterdancerAnim = Instance.new("Animation");
		monsterdancerAnim.AnimationId = "rbxassetid://74901237";
		monsterdancerr = speaker.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(monsterdancerAnim);
		monsterdancerr:Play(0.1, 1, 1);
		monsterdancerrr = speaker.Character:FindFirstChildOfClass("Humanoid").Died:Connect(function()
			monsterdancerrr:Disconnect();
			monsterdancerr:Stop();
			monsterdancerAnim:Destroy();
		end);
	else
		effectfalse();
		Rayfield:Notify({Title="R6 Needed!",Content="Bro Your R15..",Duration=6,Image=7733715400});
	end
end});
Sectionotherfeanimssc = Animations:CreateSection("Other FE Animation Script's", false, false, 10709759610);
Paragraph = Animations:CreateParagraph({Title="Giant Info",Content="Body Size's: \nBodyHeightScale: 105%\nHeadScale: 100%\nBodyWidthScale: 100%\nBodyProportionScale: 0%"}, Sectionotherfeanimssc);
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Giant R15",Interact="Click",Callback=function()
	pcall(function()
		if r15(speaker) then
			local LocalPlayer = game:GetService("Players").LocalPlayer;
			local Character = LocalPlayer.Character;
			local Humanoid = Character:FindFirstChildOfClass("Humanoid");
			function rm()
				for i, v in pairs(Character:GetDescendants()) do
					if v:IsA("BasePart") then
						if ((v.Name == "Handle") or (v.Name == "Head")) then
							if Character.Head:FindFirstChild("OriginalSize") then
								Character.Head.OriginalSize:Destroy();
							end
						else
							for i, cav in pairs(v:GetDescendants()) do
								if cav:IsA("Attachment") then
									if cav:FindFirstChild("OriginalPosition") then
										cav.OriginalPosition:Destroy();
									end
								end
							end
							v:FindFirstChild("OriginalSize"):Destroy();
							if v:FindFirstChild("AvatarPartScaleType") then
								v:FindFirstChild("AvatarPartScaleType"):Destroy();
							end
						end
					end
				end
			end
			rm();
			wait(0.05);
			Humanoid:FindFirstChild("BodyProportionScale"):Destroy();
			wait(1);
			rm();
			wait(0.05);
			Humanoid:FindFirstChild("BodyHeightScale"):Destroy();
			wait(1);
			rm();
			wait(0.05);
			Humanoid:FindFirstChild("BodyWidthScale"):Destroy();
			wait(1);
			rm();
			wait(0.05);
			Humanoid:FindFirstChild("BodyDepthScale"):Destroy();
			wait(1);
			rm();
			wait(0.05);
			Humanoid:FindFirstChild("HeadScale"):Destroy();
			wait(1);
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!\nBy The Way If It Doesn't Work it Should!"),Duration=3,Image=7733715400});
		else
			effectfalse();
			Rayfield:Notify({Title="R15 Needed!",Content="Bro your R6..",Duration=3,Image=7733715400});
		end
	end);
end});
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Giant Leg R15",Interact="Click",Callback=function()
	pcall(function()
		if r15(speaker) then
			local Character = game.Players.LocalPlayer.Character;
			local Hum = {"BodyTypeScale","BodyProportionScale","BodyWidthScale","BodyHeightScale","BodyDepthScale","HeadScale"};
			function Remove()
				repeat
					task.wait();
				until Character.LeftFoot:FindFirstChild("OriginalSize") 
				Character.LeftFoot.OriginalSize:Destroy();
				Character.LeftLowerLeg.OriginalSize:Destroy();
				Character.LeftUpperLeg.OriginalSize:Destroy();
			end
			Character.LeftLowerLeg.LeftKneeRigAttachment.OriginalPosition:Destroy();
			Character.LeftUpperLeg.LeftKneeRigAttachment.OriginalPosition:Destroy();
			Character.LeftLowerLeg.LeftKneeRigAttachment:Destroy();
			Character.LeftUpperLeg.LeftKneeRigAttachment:Destroy();
			for i = 1, 6 do
				Remove();
				Character.Humanoid[Hum[i]]:Destroy();
			end
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!\nBy The Way If It Doesn't Work it Should!"),Duration=3,Image=7733715400});
		else
			effectfalse();
			Rayfield:Notify({Title="R15 Needed!",Content="Bro your R6..",Duration=3,Image=7733715400});
		end
	end);
end});
Label = Animations:CreateLabel("⬇ Rthro Head ⬇", Sectionotherfeanimssc);
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Big Head R15",Interact="Click",Callback=function()
	pcall(function()
		if r15(speaker) then
			for i, v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetChildren()) do
				if (string.find(v.Name, "Scale") and (v.Name ~= "HeadScale")) then
					repeat
						wait(HeadGrowSpeed);
					until game.Players.LocalPlayer.Character.Head:FindFirstChild("OriginalSize") 
					game.Players.LocalPlayer.Character.Head.OriginalSize:Destroy();
					v:Destroy();
					game.Players.LocalPlayer.Character.Head:WaitForChild("OriginalSize");
				end
			end
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!\nBy The Way If It Doesn't Work it Should!"),Duration=3,Image=7733715400});
		else
			effectfalse();
			Rayfield:Notify({Title="R15 Needed!",Content="Bro your R6..",Duration=3,Image=7733715400});
		end
	end);
end});
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Invisible Skateboard R6",Interact="Click",Callback=function()
	if not r15(speaker) then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/rouxhaver/scripts-3/main/invisible%20skateboard.lua", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	else
		effectfalse();
		Rayfield:Notify({Title="R6 Needed!",Content="Bro your R15..",Duration=3,Image=7733715400});
	end
end});
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Car R6",Interact="Click",Callback=function()
	if not r15(speaker) then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/MonkoTubeYT/carscript/master/!carscript.lua", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	else
		effectfalse();
		Rayfield:Notify({Title="R6 Needed!",Content="Bro your R15..",Duration=3,Image=7733715400});
	end
end});
Paragraph = Animations:CreateParagraph({Title="Rewind Info",Content="X = Rewind"}, Sectionotherfeanimssc);
Buttonrewinb = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Rewind R6 & R15",Interact="Click",Callback=function()
	Buttonrewinb:Set("Rewind R6 & R15 (Exed)");
	loadstring(game:HttpGet("https://pastebin.com/raw/2h8E1DVT", true))();
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Paragraph = Animations:CreateParagraph({Title="Hamster Ball Info",Content="People See You Rolling Like a Hamster Ball, But They Don't See The Ball"}, Sectionotherfeanimssc);
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Hamster Ball R6 & R15",Interact="Click",Callback=function()
	UserInputService = game:GetService("UserInputService");
	RunService = game:GetService("RunService");
	Camera = workspace.CurrentCamera;
	SPEED_MULTIPLIER = 30;
	JUMP_POWER = 60;
	JUMP_GAP = 0.3;
	character = game.Players.LocalPlayer.Character;
	for i, v in ipairs(character:GetDescendants()) do
		if v:IsA("BasePart") then
			v.CanCollide = false;
		end
	end
	ball = character.HumanoidRootPart;
	ball.Shape = Enum.PartType.Ball;
	ball.Size = Vector3.new(7, 7, 7);
	ball.Transparency = 0.5;
	humanoid = character:WaitForChild("Humanoid");
	params = RaycastParams.new();
	params.FilterType = Enum.RaycastFilterType.Blacklist;
	params.FilterDescendantsInstances = {character};
	tc = RunService.RenderStepped:Connect(function(delta)
		ball.CanCollide = true;
		humanoid.PlatformStand = true;
		if UserInputService:GetFocusedTextBox() then
			return;
		end
		if UserInputService:IsKeyDown("W") then
			ball.RotVelocity -= (Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER)
		end
		if UserInputService:IsKeyDown("A") then
			ball.RotVelocity -= (Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER)
		end
		if UserInputService:IsKeyDown("S") then
			ball.RotVelocity += (Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER)
		end
		if UserInputService:IsKeyDown("D") then
			ball.RotVelocity += (Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER)
		end
	end);
	UserInputService.JumpRequest:Connect(function()
		local result = workspace:Raycast(ball.Position, Vector3.new(0, -((ball.Size.Y / 2) + JUMP_GAP), 0), params);
		if result then
			ball.Velocity = ball.Velocity + Vector3.new(0, JUMP_POWER, 0);
		end
	end);
	Camera.CameraSubject = ball;
	humanoid.Died:Connect(function()
		tc:Disconnect();
	end);
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Roblox R6 Parkour",Interact="Click",Callback=function()
	if not r15(speaker) then
		loadstring(game:HttpGet("https://pastebin.com/raw/R5YR13pG", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	else
		effecttrue();
		Rayfield:Notify({Title="R6 Needed!",Content="Bro your R15..",Duration=3,Image=7733715400});
	end
end});
Paragraph = Animations:CreateParagraph({Title="BackFlip, FrontFlip Info",Content="Z = FrontFlip, \nX = BackFlip, \nC = Jump"}, Sectionotherfeanimssc);
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="BackFlip, FrontFlip R6 & R15",Interact="Click",Callback=function()
	Rayfield:Notify({Title="Wait..",Content="Loading it...",Duration=4.5,Image=7733715400});
	wait(5);
	pcall(function()
		ver = "2.00";
		scriptname = "feFlip";
		FrontflipKey = Enum.KeyCode.Z;
		BackflipKey = Enum.KeyCode.X;
		AirjumpKey = Enum.KeyCode.C;
		ca = game:GetService("ContextActionService");
		zeezy = game:GetService("Players").LocalPlayer;
		h = 0.0174533;
		local antigrav;
		function zeezyFrontflip(act, inp, obj)
			if (inp == Enum.UserInputState.Begin) then
				zeezy.Character.Humanoid:ChangeState("Jumping");
				wait();
				zeezy.Character.Humanoid.Sit = true;
				for i = 1, 360 do
					delay(i / 720, function()
						zeezy.Character.Humanoid.Sit = true;
						zeezy.Character.HumanoidRootPart.CFrame = zeezy.Character.HumanoidRootPart.CFrame * CFrame.Angles(-h, 0, 0);
					end);
				end
				wait(0.55);
				zeezy.Character.Humanoid.Sit = false;
			end
		end
		function zeezyBackflip(act, inp, obj)
			if (inp == Enum.UserInputState.Begin) then
				zeezy.Character.Humanoid:ChangeState("Jumping");
				wait();
				zeezy.Character.Humanoid.Sit = true;
				for i = 1, 360 do
					delay(i / 720, function()
						zeezy.Character.Humanoid.Sit = true;
						zeezy.Character.HumanoidRootPart.CFrame = zeezy.Character.HumanoidRootPart.CFrame * CFrame.Angles(h, 0, 0);
					end);
				end
				wait(0.55);
				zeezy.Character.Humanoid.Sit = false;
			end
		end
		function zeezyAirjump(act, inp, obj)
			if (inp == Enum.UserInputState.Begin) then
				zeezy.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Seated");
				wait();
				zeezy.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping");
			end
		end
		ca:BindAction("zeezyFrontflip", zeezyFrontflip, false, FrontflipKey);
		ca:BindAction("zeezyBackflip", zeezyBackflip, false, BackflipKey);
		ca:BindAction("zeezyAirjump", zeezyAirjump, false, AirjumpKey);
		print(scriptname .. " " .. ver .. " loaded successfully");
		print("made by Zeezy#7203");
		notifSound = Instance.new("Sound", workspace);
		notifSound.PlaybackSpeed = 1.5;
		notifSound.Volume = 0.15;
		notifSound.SoundId = "rbxassetid://170765130";
		notifSound.PlayOnRemove = true;
		notifSound:Destroy();
		game.StarterGui:SetCore("SendNotification", {Title="feFlip",Text="feFlip loaded successfully!",Icon="rbxassetid://505845268",Duration=5,Button1="Okay"});
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end);
end});
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="Walk On Walls R6 & R15",Interact="Click",Callback=function()
	loadstring(game:HttpGet("https://pastebin.com/raw/zXk4Rq2r"))();
	effecttrue();
	Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
end});
Button = Animations:CreateButton({SectionParent=Sectionotherfeanimssc,Name="CLOVR R15",Interact="Click",Callback=function()
	if r15(speaker) then
		Rayfield:Notify({Title="Wait..",Content="Loading it...",Duration=2,Image=7733715400});
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/vr.lua"))();
		wait(2);
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	else
		effectfalse();
		Rayfield:Notify({Title="R15 Needed!",Content="Bro your R6..",Duration=3,Image=7733715400});
	end
end});
local TDS = Window:CreateTab("Tower Defense\nSimulator", 14716927183);
Sectiontdstotal = TDS:CreateSection("Total Scripts : 6", true);
Paragraph = TDS:CreateParagraph({Title="Note",Content="Some Scripts Are Not Guaranteed To Work 100%. They Can Break!"});
if (game.PlaceId == 5591597781) then
	Sectionautomatic = TDS:CreateSection("Automatic Script's", false, false, 10723415766);
	Button = TDS:CreateButton({SectionParent=Sectionautomatic,Name="Auto Commander Chain",Interact="Click",Callback=function()
		pcall(function()
			loadstring(game:HttpGet("https://mmdevelopment.xyz/scripts/tdsautochain"))();
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
		end);
	end});
	Button = TDS:CreateButton({SectionParent=Sectionautomatic,Name="Auto Sell Farms At 40 , 50",Interact="Click",Callback=function()
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
		effecttrue();
		if not game:IsLoaded() then
			game.Loaded:Wait();
		end
		if (game.PlaceId ~= 5591597781) then
			return;
		end
		rf, id, StateReplicatorPath = game.ReplicatedStorage.RemoteFunction, game.Players.LocalPlayer.UserId;
		for i, v in pairs(game.ReplicatedStorage.StateReplicators:GetChildren()) do
			if v:GetAttribute("Wave") then
				StateReplicatorPath = v;
				break;
			end
		end
		StateReplicatorPath:GetAttributeChangedSignal("Wave"):Wait();
		FinalWaveAtDifferentMode = {Easy=30,Normal=40,Insane=40,Hardcore=50};
		FinalWave = FinalWaveAtDifferentMode[game.ReplicatedStorage.State.Difficulty.Value];
		StateReplicatorPath:GetAttributeChangedSignal("Wave"):Connect(function()
			if (StateReplicatorPath:GetAttribute("Wave") == FinalWave) then
				for i, v in ipairs(workspace.Towers:GetChildren()) do
					if ((v.Owner.Value == id) and (v.Replicator:GetAttribute("Type") == "Farm")) then
						spawn(function()
							rf:InvokeServer("Troops", "Sell", {Troop=v});
						end);
					end
				end
			end
		end);
	end});
	Paragraph = TDS:CreateParagraph({Title="Auto Skip Note",Content="If The Skip Prompt Appears After You Enable It.\nYou Have To Click The Skip Button Then It Will Work"}, Sectionautomatic);
	Toggle = TDS:CreateToggle({SectionParent=Sectionautomatic,Name="Auto Wave Skip",CurrentValue=false,Callback=function(Value)
		shared.Autoskipenabled = Value;
	end});
	local SkipProperty = game:GetService("Players").LocalPlayer.PlayerGui.RoactGame.Vote.content.votes.vote;
	SkipProperty:GetPropertyChangedSignal("IsNotOccluded"):Connect(function()
		if (SkipProperty.IsNotOccluded and shared.Autoskipenabled) then
			game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Waves", "Skip");
		end
	end);
	Sectionotherscriptstds = TDS:CreateSection("Other Script's", false, false, 10709759610);
	Button = TDS:CreateButton({SectionParent=Sectionotherscriptstds,Name="Skip With E",Callback=function()
		game:GetService("UserInputService").InputBegan:Connect(function(input, chatting)
			if ((input.KeyCode == Enum.KeyCode.E) and not chatting) then
				game.ReplicatedStorage.RemoteEvent:FireServer("Waves", "Skip");
			end
		end);
	end});
elseif (game.PlaceId == 3260590327) then
	Sectiongointogametds = TDS:CreateSection("Go Into The Game!", true);
	Label = TDS:CreateLabel("Go Into a Elevator / Game To See The Ingame Script's!", Sectiongojoibgametds);
	Sectionlobbyscirpttds = TDS:CreateSection("Lobby Script's", false);
	Button = TDS:CreateButton({SectionParent=Sectionlobbyscirpttds,Name="Show Everything That You Don't Own",Interact="Click",Callback=function()
		Towers = game:GetService("Players").LocalPlayer.PlayerGui.Interface.Root.Inventory.View.Frame.Frame.Frame;
		for _, v in pairs(Towers:GetDescendants()) do
			if v:IsA("ImageButton") then
				v.Visible = true;
			end
		end
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content="Check Your Inventory!",Duration=3,Image=7733715400});
	end});
	Sectionlobbyscirpttdsplayerstats = TDS:CreateSection("Player Stat's", false);
	Clickonplayer = TDS:CreateLabel("Click On a Player To Show Stat's", Sectionlobbyscirpttdsplayerstats);
	Name = TDS:CreateLabel("Name: ", Sectionlobbyscirpttdsplayerstats);
	Coins = TDS:CreateLabel("Coins: ", Sectionlobbyscirpttdsplayerstats);
	Gems = TDS:CreateLabel("Gems: ", Sectionlobbyscirpttdsplayerstats);
	Level = TDS:CreateLabel("Level: ", Sectionlobbyscirpttdsplayerstats);
	Troops = TDS:CreateLabel("Troops: ", Sectionlobbyscirpttdsplayerstats);
	JMouse.Button1Down:Connect(function()
		model = JMouse.Target:FindFirstAncestorOfClass("Model");
		player = speaker;
		if model then
			clickedPlayer = game.Players:GetPlayerFromCharacter(model);
			if clickedPlayer then
				player = game:GetService("Players")[clickedPlayer.Name];
				Name:Set("Name: " .. clickedPlayer.Name);
				Coins:Set("Coins: " .. player['Coins']['Value']);
				Gems:Set("Gems: " .. player['Gems']['Value']);
				Level:Set("Level: " .. player['Level']['Value']);
				args = {[1]="Profiles",[2]="Download",[3]=player};
				returnedPlayer = game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer(unpack(args));
				troopText = "Troops: ";
				for i, v in pairs(returnedPlayer.Troops) do
					if (i ~= 1) then
						troopText = troopText .. ", ";
					end
					troopText = troopText .. v;
				end
				Troops:Set(troopText);
			end
		end
	end);
else
	Sectiongojoibgametds = TDS:CreateSection("Go Join The Game", false, false, 14754300297);
	Button = TDS:CreateButton({SectionParent=Sectiongojoibgametds,Name="Join Tower Defense",Interact="Click",Callback=function()
		game:GetService("TeleportService"):Teleport(3260590327, LocalPlayer);
		effecttrue();
		Rayfield:Notify({Title="Teleported!",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Label = TDS:CreateLabel("Join The Game To See The Button's!", Sectiongojoibgametds);
end
DH = Window:CreateTab("DaHood", 14367231837);
Sectiontotaldh = DH:CreateSection("Total Scripts : 13", true);
Paragraph = DH:CreateParagraph({Title="Note",Content="Some Scripts Are Not Guaranteed To Work 100%. They Can Break!"});
if ((game.PlaceId == 2788229376) or (game.PlaceId == 5602055394)) then
	Sectiondhhubs = DH:CreateSection("Hub's", false, false, 10709759610);
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="RayX",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/SpaceYes/Lua/Main/DaHood.Lua"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="Nyula",Interact="Click",Callback=function()
		loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/nyulachan/nyula/main/nyuladhm"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="Swag Mode",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/lerkermer/lua-projects/master/SwagModeV002"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="Space-X",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/spacexrandom/Lua/main/DaHood"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="Destiny",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/compwnter/destiny/main/loader"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="Nova",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://icxy.xyz/NovaGui/NovaGui", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectiondhhubs,Name="Faded",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/NighterEpic/Faded/main/YesEpic", true))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Sectionaimlockdh = DH:CreateSection("Aim Locks & Aim Viewer", false, false, 10709818534);
	Button = DH:CreateButton({SectionParent=Sectionaimlockdh,Name="Aim Viewer",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Raycodex/Exploiting/main/Roblox/Aim%20Viewer"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectionaimlockdh,Name="Sun God AimLock",Interact="Click",Callback=function()
		Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vKhonshu/intro2/main/ui2"))();
		NotifyLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/vKhonshu/intro/main/ui"))();
		NotifyLib.prompt("Sun God", "Loading..", 5);
		NotifyLib.prompt("Aimlock loaded", "Smite them with Q", 5);
		NotifyLib.prompt("Sun God", "best lock :pray:", 5);
		Settings = {rewrittenmain={Enabled=true,Key="q",DOT=true,AIRSHOT=true,NOTIF=true,AUTOPRED=false,FOV=math.huge,RESOVLER=false}};
		SelectedPart = "HumanoidRootPart";
		Prediction = true;
		PredictionValue = 0.1357363;
		AnchorCount = 0;
		MaxAnchor = 50;
		CC = game:GetService("Workspace").CurrentCamera;
		local Plr;
		enabled = false;
		accomidationfactor = 0.136;
		mouse = game.Players.LocalPlayer:GetMouse();
		placemarker = Instance.new("Part", game.Workspace);
		function makemarker(Parent, Adornee, Color, Size, Size2)
			e = Instance.new("BillboardGui", Parent);
			e.Name = "PP";
			e.Adornee = Adornee;
			e.Size = UDim2.new(Size, Size2, Size, Size2);
			e.AlwaysOnTop = Settings.rewrittenmain.DOT;
			a = Instance.new("Frame", e);
			if (Settings.rewrittenmain.DOT == true) then
				a.Size = UDim2.new(1, 0, 1, 0);
			else
				a.Size = UDim2.new(0, 0, 0, 0);
			end
			if (Settings.rewrittenmain.DOT == true) then
				a.Transparency = 0;
				a.BackgroundTransparency = 0;
			else
				a.Transparency = 1;
				a.BackgroundTransparency = 1;
			end
			a.BackgroundColor3 = Color;
			g = Instance.new("UICorner", a);
			if (Settings.rewrittenmain.DOT == false) then
				g.CornerRadius = UDim.new(0, 0);
			else
				g.CornerRadius = UDim.new(1, 1);
			end
			return e;
		end
		data = game.Players:GetPlayers();
		function noob(player)
			local character;
			repeat
				wait();
			until player.Character 
			handler = makemarker(guimain, player.Character:WaitForChild(SelectedPart), Color3.fromRGB(240, 250, 1), 0.3, 3);
			handler.Name = player.Name;
			player.CharacterAdded:connect(function(Char)
				handler.Adornee = Char:WaitForChild(SelectedPart);
			end);
			spawn(function()
				while wait() do
					if player.Character then
					end
				end
			end);
		end
		for i = 1, #data do
			if (data[i] ~= game.Players.LocalPlayer) then
				noob(data[i]);
			end
		end
		game.Players.PlayerAdded:connect(function(Player)
			noob(Player);
		end);
		spawn(function()
			placemarker.Anchored = true;
			placemarker.CanCollide = false;
			if (Settings.rewrittenmain.DOT == true) then
				placemarker.Size = Vector3.new(8, 8, 8);
			else
				placemarker.Size = Vector3.new(0, 0, 0);
			end
			placemarker.Transparency = 0.5;
			if Settings.rewrittenmain.DOT then
				makemarker(placemarker, placemarker, Color3.fromRGB(240, 250, 1), 0.4, 0);
			end
		end);
		game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
			if ((k == Settings.rewrittenmain.Key) and Settings.rewrittenmain.Enabled) then
				if (enabled == true) then
					enabled = false;
					if (Settings.rewrittenmain.NOTIF == true) then
						Plr = getClosestPlayerToCursor();
						game.StarterGui:SetCore("SendNotification", {Title="Sun God",Text="Spared Victim",Duration=3});
					end
				else
					Plr = getClosestPlayerToCursor();
					enabled = true;
					if (Settings.rewrittenmain.NOTIF == true) then
						game.StarterGui:SetCore("SendNotification", {Title="Sun God",Text=("Victim: " .. tostring(Plr.Character.Humanoid.DisplayName)),Duration=3});
					end
				end
			end
		end);
		function getClosestPlayerToCursor()
			local closestPlayer;
			shortestDistance = Settings.rewrittenmain.FOV;
			for i, v in pairs(game.Players:GetPlayers()) do
				if ((v ~= game.Players.LocalPlayer) and v.Character and v.Character:FindFirstChild("Humanoid") and (v.Character.Humanoid.Health ~= 0) and v.Character:FindFirstChild("HumanoidRootPart")) then
					pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position);
					magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude;
					if (magnitude < shortestDistance) then
						closestPlayer = v;
						shortestDistance = magnitude;
					end
				end
			end
			return closestPlayer;
		end
		pingvalue = nil;
		split = nil;
		ping = nil;
		game:GetService("RunService").Stepped:connect(function()
			if (enabled and (Plr.Character ~= nil) and Plr.Character:FindFirstChild("HumanoidRootPart")) then
				placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + (Plr.Character.HumanoidRootPart.Velocity * accomidationfactor));
			else
				placemarker.CFrame = CFrame.new(0, 9999, 0);
			end
			if (Settings.rewrittenmain.AUTOPRED == true) then
				pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString();
				split = string.split(pingvalue, "(");
				ping = tonumber(split[1]);
				if (ping < 130) then
					PredictionValue = 0.151;
				elseif (ping < 125) then
					PredictionValue = 0.149;
				elseif (ping < 110) then
					PredictionValue = 0.146;
				elseif (ping < 105) then
					PredictionValue = 0.138;
				elseif (ping < 90) then
					PredictionValue = 0.136;
				elseif (ping < 80) then
					PredictionValue = 0.134;
				elseif (ping < 70) then
					PredictionValue = 0.131;
				elseif (ping < 60) then
					PredictionValue = 0.1229;
				elseif (ping < 50) then
					PredictionValue = 0.1225;
				elseif (ping < 40) then
					PredictionValue = 0.1256;
				end
			end
		end);
		mt = getrawmetatable(game);
		old = mt.__namecall;
		setreadonly(mt, false);
		mt.__namecall = newcclosure(function(...)
			local args = {...};
			if (enabled and (getnamecallmethod() == "FireServer") and (args[2] == "UpdateMousePos") and Settings.rewrittenmain.Enabled and (Plr.Character ~= nil)) then
				if (Prediction == true) then
					args[3] = Plr.Character[SelectedPart].Position + (Plr.Character[SelectedPart].Velocity * PredictionValue);
				else
					args[3] = Plr.Character[SelectedPart].Position;
				end
				return old(unpack(args));
			end
			return old(...);
		end);
		game:GetService("RunService").RenderStepped:Connect(function()
			if ((Settings.rewrittenmain.RESOVLER == true) and (Plr.Character ~= nil) and enabled and Settings.rewrittenmain.Enabled) then
				if ((Settings.rewrittenmain.AIRSHOT == true) and enabled and (Plr.Character ~= nil)) then
					if (game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall) then
						if ((Plr.Character ~= nil) and (Plr.Character.HumanoidRootPart.Anchored == true)) then
							AnchorCount = AnchorCount + 1;
							if (AnchorCount >= MaxAnchor) then
								Prediction = false;
								wait(2);
								AnchorCount = 0;
							end
						else
							Prediction = true;
							AnchorCount = 0;
						end
						SelectedPart = "LeftFoot";
					else
						if ((Plr.Character ~= nil) and (Plr.Character.HumanoidRootPart.Anchored == true)) then
							AnchorCount = AnchorCount + 1;
							if (AnchorCount >= MaxAnchor) then
								Prediction = false;
								wait(2);
								AnchorCount = 0;
							end
						else
							Prediction = true;
							AnchorCount = 0;
						end
						SelectedPart = "HumanoidRootPart";
					end
				else
					if ((Plr.Character ~= nil) and (Plr.Character.HumanoidRootPart.Anchored == true)) then
						AnchorCount = AnchorCount + 1;
						if (AnchorCount >= MaxAnchor) then
							Prediction = false;
							wait(2);
							AnchorCount = 0;
						end
					else
						Prediction = true;
						AnchorCount = 0;
					end
					SelectedPart = "HumanoidRootPart";
				end
			else
				SelectedPart = "HumanoidRootPart";
			end
		end);
		UICorner_3.Parent = Submit;
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectionaimlockdh,Name="Streamable AimLock",Interact="Click",Callback=function()
		configs = {main={enabled=true,aimlockkey="q",prediction=0.173,aimpart="HumanoidRootPart",notifications=false}};
		boxsettings = {box={Showbox=false,boxsize=Vector3.new(3.3, 3, 2.8),markercolor=Color3.fromRGB(255, 245, 0),markersize=UDim2.new(0, 0, 0, 0)}};
		box = Instance.new("Part", game.Workspace);
		Mouse = game.Players.LocalPlayer:GetMouse();
		function makemarker(Parent, Adornee, Color, Size, Size2)
			box = Instance.new("BillboardGui", Parent);
			box.Name = "Dashware!";
			box.Adornee = Adornee;
			box.Size = UDim2.new(Size, Size2, Size, Size2);
			box.AlwaysOnTop = true;
			a = Instance.new("Frame", box);
			a.Size = boxsettings.box.markersize;
			a.BackgroundColor3 = Color;
			g = Instance.new("UICorner", a);
			g.CornerRadius = UDim.new(0, 0);
			return box;
		end
		local Plr;
		Mouse.KeyDown:Connect(function(KeyPressed)
			if (KeyPressed == configs.main.aimlockkey) then
				if (configs.main.enabled == true) then
					configs.main.enabled = false;
					if (configs.main.notifications == true) then
						Plr = FindClosestUser();
						game.StarterGui:SetCore("SendNotification", {Title="Dashware",Text="Unlocked;"});
					end
				else
					Plr = FindClosestUser();
					configs.main.enabled = true;
					if (configs.main.notifications == true) then
						game.StarterGui:SetCore("SendNotification", {Title="Dashware",Text=("Locked On;  " .. tostring(Plr.Character.Humanoid.DisplayName))});
					end
				end
			end
		end);
		data = game.Players:GetPlayers();
		function noob(player)
			local character;
			repeat
				wait();
			until player.Character 
			handler = makemarker(guimain, player.Character:WaitForChild(configs.main.aimpart), Color3.fromRGB(107, 184, 255), 0.1, 8);
			handler.Name = player.Name;
			player.CharacterAdded:connect(function(Char)
				handler.Adornee = Char:WaitForChild("HumanoidRootPart");
			end);
		end
		for i = 1, #data do
			if (data[i] ~= game.Players.LocalPlayer) then
				noob(data[i]);
			end
		end
		game.Players.PlayerAdded:connect(function(Player)
			noob(Player);
		end);
		spawn(function()
			box.Anchored = true;
			box.CanCollide = false;
			box.Size = boxsettings.box.boxsize;
			if (boxsettings.box.Showbox == true) then
				box.Transparency = 0.8;
			else
				box.Transparency = 1;
			end
			makemarker(box, box, boxsettings.box.markercolor, 0.4, 1);
		end);
		function FindClosestUser()
			local closestPlayer;
			ShortestDistance = 300;
			for i, v in pairs(game.Players:GetPlayers()) do
				if ((v ~= game.Players.LocalPlayer) and v.Character and v.Character:FindFirstChild("Humanoid") and (v.Character.Humanoid.Health ~= 0) and v.Character:FindFirstChild("HumanoidRootPart")) then
					pos = game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position);
					magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y)).magnitude;
					if (magnitude < ShortestDistance) then
						closestPlayer = v;
						ShortestDistance = magnitude;
					end
				end
			end
			return closestPlayer;
		end
		game:GetService("RunService").Stepped:connect(function()
			if (configs.main.enabled and Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart")) then
				box.CFrame = CFrame.new(Plr.Character[configs.main.aimpart].Position + (Plr.Character.UpperTorso.Velocity * configs.main.prediction));
			else
				box.CFrame = CFrame.new(0, 9999, 0);
			end
		end);
		repeat
			wait();
		until game:IsLoaded() 
		mt = getrawmetatable(game);
		old = mt.__namecall;
		setreadonly(mt, false);
		mt.__namecall = newcclosure(function(...)
			args = {...};
			if (configs.main.enabled and (getnamecallmethod() == "FireServer") and (args[2] == "UpdateMousePos")) then
				args[3] = Plr.Character[configs.main.aimpart].Position + (Plr.Character[configs.main.aimpart].Velocity * configs.main.prediction);
				return old(unpack(args));
			end
			return old(...);
		end);
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectionaimlockdh,Name="Ahm Tracer Aim Lock",Interact="Click",Callback=function()
		lib = loadstring(game:HttpGet("https://pastebin.com/raw/9Cau6Xvm"))();
		win = lib:CreateWindow("amh#0001", Vector2.new(492, 598), Enum.KeyCode.RightShift);
		tab1 = win:CreateTab("main");
		sector1 = tab1:CreateSector("main", "left");
		button = sector1:AddButton("enable amh", function()
			configs = {Main={Enabled=true,Aimlockkey="c",Prediction=0.13093,Aimpart="HumanoidRootPart",Notifications=true,AirshotFunc=true},Tracer={TracerThickness=3.5,TracerTransparency=1,TracerColor=Color3.fromRGB(99, 95, 98)}};
			RunService = game:GetService("RunService");
			CurrentCamera = game:GetService("Workspace").CurrentCamera;
			Mouse = game.Players.LocalPlayer:GetMouse();
			inset = game:GetService("GuiService"):GetGuiInset().Y;
			Line = Drawing.new("Line");
			local Plr;
			Mouse.KeyDown:Connect(function(KeyPressed)
				if (KeyPressed == configs.Main.Aimlockkey) then
					if (configs.Main.Enabled == true) then
						configs.Main.Enabled = false;
						if (configs.Main.Notifications == true) then
							Plr = FindClosestPlayer();
							game.StarterGui:SetCore("SendNotification", {Title="amh#0001 | <3",Text="unlocked",Icon="http://www.roblox.com/asset/?id=6917008796"});
						end
					else
						Plr = FindClosestPlayer();
						configs.Main.Enabled = true;
						if (configs.Main.Notifications == true) then
							game.StarterGui:SetCore("SendNotification", {Title="amh#0001 | <3",Text=("locked: " .. tostring(LocalPlayer.Character.Humanoid.DisplayName)),Icon="http://www.roblox.com/asset/?id=6917008796"});
						end
					end
				end
			end);
			function FindClosestPlayer()
				local closestPlayer;
				shortestDistance = math.huge;
				for i, v in pairs(game.Players:GetPlayers()) do
					if ((v ~= game.Players.LocalPlayer) and v.Character and v.Character:FindFirstChild("Humanoid") and (v.Character.Humanoid.Health ~= 0) and v.Character:FindFirstChild("HumanoidRootPart")) then
						pos = CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position);
						magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude;
						if (magnitude < shortestDistance) then
							closestPlayer = v;
							shortestDistance = magnitude;
						end
					end
				end
				return closestPlayer;
			end
			RunService.Stepped:connect(function()
				if (configs.Main.Enabled == true) then
					Vector = CurrentCamera:worldToViewportPoint(Plr.Character[configs.Main.Aimpart].Position + (Plr.Character.HumanoidRootPart.Velocity * configs.Main.Prediction));
					Line.Color = configs.Tracer.TracerColor;
					Line.Thickness = configs.Tracer.TracerThickness;
					Line.Transparency = configs.Tracer.TracerTransparency;
					Line.From = Vector2.new(Mouse.X, Mouse.Y + inset);
					Line.To = Vector2.new(Vector.X, Vector.Y);
					Line.Visible = true;
				elseif (configs.Main.Enabled == false) then
					Line.Visible = false;
				end
			end);
			mt = getrawmetatable(game);
			old = mt.__namecall;
			setreadonly(mt, false);
			mt.__namecall = newcclosure(function(...)
				args = {...};
				if (configs.Main.Enabled and (getnamecallmethod() == "FireServer") and (args[2] == "UpdateMousePos")) then
					args[3] = Plr.Character[configs.Main.Aimpart].Position + (Plr.Character[configs.Main.Aimpart].Velocity * configs.Main.Prediction);
					return old(unpack(args));
				end
				return old(...);
			end);
			if (configs.Main.AirshotFunc == true) then
				if ((Plr.Character.Humanoid.Jump == true) and (Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air)) then
					settings.config.Part = "RightFoot";
				else
					Plr.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old, new)
						if (new == Enum.HumanoidStateType.Freefall) then
							settings.config.Part = "RightFoot";
						else
							settings.config.Part = "LowerTorso";
						end
					end);
				end
			end
		end);
		sector1:AddTextbox("enter new pred here", false, function(bool)
			getgenv().Prediction = bool;
		end);
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DH:CreateButton({SectionParent=Sectionaimlockdh,Name="Cam AimLock",Interact="Click",Callback=function()
		getgenv().AimPart = "HumanoidRootPart";
		getgenv().AimlockKey = "q";
		getgenv().AimRadius = 30;
		getgenv().ThirdPerson = true;
		getgenv().FirstPerson = true;
		getgenv().TeamCheck = false;
		getgenv().PredictMovement = true;
		getgenv().PredictionVelocity = 8.8;
		Players, Uis, RService, SGui = game:GetService("Players"), game:GetService("UserInputService"), game:GetService("RunService"), game:GetService("StarterGui");
		Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
		Aimlock, MousePressed, CanNotify = true, false, false;
		local AimlockTarget;
		getgenv().CiazwareUniversalAimbotLoaded = true;
		getgenv().WorldToViewportPoint = function(P)
			return Camera:WorldToViewportPoint(P);
		end;
		getgenv().WorldToScreenPoint = function(P)
			return Camera.WorldToScreenPoint(Camera, P);
		end;
		getgenv().GetObscuringObjects = function(T)
			if (T and T:FindFirstChild(getgenv().AimPart) and Client and Client.Character:FindFirstChild("Head")) then
				RayPos = workspace:FindPartOnRay(RNew(T[getgenv().AimPart].Position, Client.Character.Head.Position));
				if RayPos then
					return RayPos:IsDescendantOf(T);
				end
			end
		end;
		getgenv().GetNearestTarget = function()
			players = {};
			PLAYER_HOLD = {};
			DISTANCES = {};
			for i, v in pairs(Players:GetPlayers()) do
				if (v ~= Client) then
					table.insert(players, v);
				end
			end
			for i, v in pairs(players) do
				if (v.Character ~= nil) then
					AIM = v.Character:FindFirstChild("Head");
					if ((getgenv().TeamCheck == true) and (v.Team ~= Client.Team)) then
						DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude;
						RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE);
						HIT, POS = game.Workspace:FindPartOnRay(RAY, game.Workspace);
						DIFF = math.floor((POS - AIM.Position).magnitude);
						PLAYER_HOLD[v.Name .. i] = {};
						PLAYER_HOLD[v.Name .. i].dist = DISTANCE;
						PLAYER_HOLD[v.Name .. i].plr = v;
						PLAYER_HOLD[v.Name .. i].diff = DIFF;
						table.insert(DISTANCES, DIFF);
					elseif ((getgenv().TeamCheck == false) and (v.Team == Client.Team)) then
						DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude;
						RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE);
						HIT, POS = game.Workspace:FindPartOnRay(RAY, game.Workspace);
						DIFF = math.floor((POS - AIM.Position).magnitude);
						PLAYER_HOLD[v.Name .. i] = {};
						PLAYER_HOLD[v.Name .. i].dist = DISTANCE;
						PLAYER_HOLD[v.Name .. i].plr = v;
						PLAYER_HOLD[v.Name .. i].diff = DIFF;
						table.insert(DISTANCES, DIFF);
					end
				end
			end
			if (unpack(DISTANCES) == nil) then
				return nil;
			end
			L_DISTANCE = math.floor(math.min(unpack(DISTANCES)));
			if (L_DISTANCE > getgenv().AimRadius) then
				return nil;
			end
			for i, v in pairs(PLAYER_HOLD) do
				if (v.diff == L_DISTANCE) then
					return v.plr;
				end
			end
			return nil;
		end;
		Mouse.KeyDown:Connect(function(a)
			if ((a == AimlockKey) and (AimlockTarget == nil)) then
				pcall(function()
					if (MousePressed ~= true) then
						MousePressed = true;
					end
					local Target;
					Target = GetNearestTarget();
					if (Target ~= nil) then
						AimlockTarget = Target;
					end
				end);
			elseif ((a == AimlockKey) and (AimlockTarget ~= nil)) then
				if (AimlockTarget ~= nil) then
					AimlockTarget = nil;
				end
				if (MousePressed ~= false) then
					MousePressed = false;
				end
			end
		end);
		RService.RenderStepped:Connect(function()
			if ((getgenv().ThirdPerson == true) and (getgenv().FirstPerson == true)) then
				if (((Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1) or ((Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1)) then
					CanNotify = true;
				else
					CanNotify = false;
				end
			elseif ((getgenv().ThirdPerson == true) and (getgenv().FirstPerson == false)) then
				if ((Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1) then
					CanNotify = true;
				else
					CanNotify = false;
				end
			elseif ((getgenv().ThirdPerson == false) and (getgenv().FirstPerson == true)) then
				if ((Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1) then
					CanNotify = true;
				else
					CanNotify = false;
				end
			end
			if ((Aimlock == true) and (MousePressed == true)) then
				if (AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(getgenv().AimPart)) then
					if (getgenv().FirstPerson == true) then
						if (CanNotify == true) then
							if (getgenv().PredictMovement == true) then
								Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + (AimlockTarget.Character[getgenv().AimPart].Velocity / PredictionVelocity));
							elseif (getgenv().PredictMovement == false) then
								Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position);
							end
						end
					elseif (getgenv().ThirdPerson == true) then
						if (CanNotify == true) then
							if (getgenv().PredictMovement == true) then
								Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + (AimlockTarget.Character[getgenv().AimPart].Velocity / PredictionVelocity));
							elseif (getgenv().PredictMovement == false) then
								Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position);
							end
						end
					end
				end
			end
		end);
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed It " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
else
	Sectionjointhegamedh = DH:CreateSection("Join The Game!", false, false, 14754300297);
	Button = DH:CreateButton({SectionParent=Sectionjointhegamedh,Name="Join DaHood",Interact="Click",Callback=function()
		game:GetService("TeleportService"):Teleport(2788229376, LocalPlayer);
		effecttrue();
		Rayfield:Notify({Title="Teleported!",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Label = DH:CreateLabel("Join The Game To See The Button's!", Sectionjointhegamedh);
end
TOH = Window:CreateTab("Tower Of Hell", 14367002464);
Sectiontotlatoh = TOH:CreateSection("Total Scripts: 5", true);
Paragraph = TOH:CreateParagraph({Title="Note",Content="Some Scripts Are Not Guaranteed To Work 100%. They Can Break!\nIf You Get Banned It's Not My Fault.\nExecute Bypass Anti-Cheat First."});
if ((game.PlaceId == 1962086868) or (game.PlaceId == 3582763398) or (game.PlaceId == 2127551566)) then
	Sectionscriptstoh = TOH:CreateSection("Script's", false, false, 10709759610);
	Button = TOH:CreateButton({SectionParent=Sectionscriptstoh,Name="Anti-Cheat Bypass",Interact="Click",Callback=function()
		wait(1.5);
		pcall(function()
			effecttrue();
			Rayfield:Notify({Title="Executed Bypass!",Content="You Can Now Use Fly!",Duration=3,Image=7733715400});
			v0 = getreg();
			for v6, v7 in next, v0 do
				if (type(v7) == "function") then
					local v12 = getinfo(v7);
					if (v12.name == "kick") then
						if (hookfunction(v12.func, function(...)
						end)) then
							print("succesfully hooked kick");
						else
							print("failed to hook kick");
						end
					end
				end
			end
			local v1 = game("Players").LocalPlayer.PlayerScripts;
			local v2 = v1.LocalScript;
			local v3 = v1.LocalScript2;
			local v4 = v2.Changed;
			local v5 = v3.Changed;
			for v8, v9 in next, getconnections(v4) do
				v9:Disable();
			end
			for v10, v11 in next, getconnections(v5) do
				v11:Disable();
			end
			v2:Destroy();
			v3:Destroy();
		end);
	end});
	Toggleremoa = TOH:CreateToggle({SectionParent=Sectionscriptstoh,Name="Remove Fog",CurrentValue=false,Callback=function(Value)
		pcall(function()
			removefogga = Value;
			if removefogga then
				removefogg = game:GetService("RunService").RenderStepped:Connect(function()
					Lighting.FogStart = 0;
					Lighting.FogEnd = 99999999999;
					wait();
				end);
			end
			if not removefogga then
				removefogg:Disconnect();
				Lighting.FogEnd = origsettings.fe;
			end
		end);
	end});
	Button = TOH:CreateButton({SectionParent=Sectionscriptstoh,Name="Get All Item's",Interact="Click",Callback=function()
		pcall(function()
			for v0, v1 in pairs(game.Players.LocalPlayer.Backpack:GetDescendants()) do
				if v1:IsA("Tool") then
					v1:Destroy();
				end
			end
			wait();
			for v2, v3 in pairs(game.ReplicatedStorage.Gear:GetDescendants()) do
				if v3:IsA("Tool") then
					local v4 = v3:Clone();
					wait();
					v4.Parent = game.Players.LocalPlayer.Backpack;
				end
			end
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
		end);
	end});
	Button = TOH:CreateButton({SectionParent=Sectionscriptstoh,Name="Remove Kill Part's",Interact="Click",Callback=function()
		pcall(function()
			for v0, v1 in pairs(game:GetService("Workspace").tower:GetDescendants()) do
				if (v1:IsA("BoolValue") and (v1.Name == "kills")) then
					v1.Parent:Destroy();
				end
			end
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
		end);
	end});
	Sectiontpscriptstoh = TOH:CreateSection("Teleport Script's", false, false, 6723742952);
	Button = TOH:CreateButton({SectionParent=Sectiontpscriptstoh,Name="Teleport To End",Interact="Click",Callback=function()
		pcall(function()
			v0 = game.Workspace.tower.sections.finish.FinishGlow.CFrame;
			v1 = game.Players.LocalPlayer.Character;
			v1.HumanoidRootPart.CFrame = v0;
			effecttrue();
			Rayfield:Notify({Title="Teleported!",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
		end);
	end});
	Sectionautofarmtoh = TOH:CreateSection("Auto-Farm", false, true, 10723415766);
	function name()
		spawn(function()
			while getgenv().Boolean == true do
				local endzone = game.Workspace.tower.sections.finish.FinishGlow.CFrame;
				Character.HumanoidRootPart.CFrame = endzone;
				wait();
			end
		end);
	end
	getgenv().Boolean = false;
	Toggle = TOH:CreateToggle({SectionParent=Sectionautofarmtoh,Name="Auto End",CurrentValue=false,Callback=function(v)
		getgenv().Boolean = v;
		if (v == true) then
			name();
		end
	end});
else
	Sectionjointhegametoh = TOH:CreateSection("Join The Game!", false, false, 14754300297);
	Button = TOH:CreateButton({SectionParent=Sectionjointhegametoh,Name="Join Tower Of Hell",Interact="Click",Callback=function()
		game:GetService("TeleportService"):Teleport(1962086868, LocalPlayer);
		effecttrue();
		Rayfield:Notify({Title="Teleported",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Label = TOH:CreateLabel("Join The Game To See The Button's!", Sectionjointhegametoh);
end
CM = Window:CreateTab("Combat Warrior's", 9616983018);
Sectiontotalsccm = CM:CreateSection("Total Scripts: 2", true);
Paragraph = CM:CreateParagraph({Title="Note",Content="Some Scripts Are Not Guaranteed To Work 100%. They Can Break!"});
if (game.PlaceId == 4282985734) then
	Sectionhubscm = CM:CreateSection("Hub's", false, false, 10709759610);
	Button = CM:CreateButton({SectionParent=Sectiontotalsccm,Name="Max Hub",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/1d4db6a1b04aaeccf046f7c63fbad31a.lua"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = CM:CreateButton({SectionParent=Sectiontotalsccm,Name="Lum Ware",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ditchmethis/Lumware-Combat-Warriors-/main/lumware_updated.lua"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
else
	Sectionjointhegamecm = CM:CreateSection("Join The Game!", false, false, 14754300297);
	Button = CM:CreateButton({SectionParent=Sectionjointhegamecm,Name="Join Combat Warrior's",Interact="Click",Callback=function()
		game:GetService("TeleportService"):Teleport(4282985734, LocalPlayer);
		effecttrue();
		Rayfield:Notify({Title="Teleported",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Label = CM:CreateLabel("Join The Game To See The Button's!", Sectionjointhegamecm);
end
DO = Window:CreateTab("Doors", 12771027845);
Sectiontotaldoors = DO:CreateSection("Total Scripts: 2", true);
Paragraph = DO:CreateParagraph({Title="Note",Content=("Some Menus have Right Shift or Right Ctrl to Close or Open." .. "Some Scripts Are Not Guaranteed To Work 100%. They Can Break!")});
if (game.PlaceId == 6839171747) then
	Sectiondoorshub = DO:CreateSection("Hub's", false, false, 10709759610);
	Button = DO:CreateButton({SectionParent=Sectiondoorshub,Name="Doors Vynixius",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Loader.lua"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Button = DO:CreateButton({SectionParent=Sectiondoorshub,Name="Doors Ominous",Interact="Click",Callback=function()
		local a = game("ReplicatedStorage");
		local b = [[https://raw.githubusercontent.com/OminousVibes-Exploit/Scripts/main/doors/]];
		local c = game.GameId;
		local d = game.PlaceId;
		if (c ~= 2440500124) then
			return;
		end
		if not game() then
			game.Loaded:Wait();
			task.wait(4);
		end
		task.wait(1);
		local e = a("GameData", 10):WaitForChild("Floor", 10).Value;
		if (d == 6516141723) then
		elseif (d == 6839171747) then
			if (e == "Hotel") then
				loadstring(game:HttpGet(b .. "places/hotel.lua"))();
			elseif (e == "Rooms") then
				loadstring(game:HttpGet(b .. "places/rooms.lua"))();
			end
		end
		local f = (syn and syn.queue_on_teleport) or queue_on_teleport;
		if f then
			f('loadstring(game:HttpGet("' .. b .. 'loadstring.lua"))()');
		end
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
elseif (game.PlaceId == 6516141723) then
	Sectionelevatordoors = DO:CreateSection("Elevator", true);
	Label = DO:CreateLabel("Go Into a Elevator To See The Option's!", Sectionelevatordoors);
else
	Sectionjoingamedoors = DO:CreateSection("Join The Game!", false, false, 14754300297);
	Button = DO:CreateButton({SectionParent=Sectionjoingamedoors,Name="Join Doors",Interact="Click",Callback=function()
		game:GetService("TeleportService"):Teleport(6516141723, LocalPlayer);
		effecttrue();
		Rayfield:Notify({Title="Teleported",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Label = DO:CreateLabel("Join The Game To See The Button's!", Sectionjoingamedoors);
end
MM = Window:CreateTab("Murder Mystery 2", 2992801749);
Sectiontotmm = MM:CreateSection("Total Scripts: 3", true);
Paragraph = MM:CreateParagraph({Title="Note",Content="Some Scripts Are Not Guaranteed To Work 100%. They Can Break!"});
if (game.PlaceId == 142823291) then
	Sectionhubmm = MM:CreateSection("Hub's", false, false, 10709759610);
	Button = MM:CreateButton({SectionParent=Sectionhubmm,Name="Nexus",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/F2B-HUB/F2B/main/HUB"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	if (executor == "Fluxus") then
		Label = MM:CreateLabel("Eclipse Note: Your Executor May Not Be Supported!", Sectionhubmm);
	end
	Button = MM:CreateButton({SectionParent=Sectionhubmm,Name="Eclipse",Interact="Click",Callback=function()
		pcall(function()
			local a, b, c, d, e = loadstring, request or http_request or (http and http.request) or (syn and syn.request) or (fluxus and fluxus.request), assert, tostring, "https://api.eclipsehub.xyz/auth";
			c(a and b, "Executor not Supported");
			a(b({Url=(e .. "?\107e\121\61" .. d(mainKey)),Headers={["User-Agent"]="Eclipse"}}).Body)();
			effecttrue();
			Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
		end);
	end});
	Button = MM:CreateButton({SectionParent=Sectionhubmm,Name="Lunar Hub",Interact="Click",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/vwSaraa/LunarHub/main/mm2"))();
		effecttrue();
		Rayfield:Notify({Title="Executed!",Content=("You Have Executed it " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
else
	Sectionjoingamemm = MM:CreateSection("Join The Game", false, false, 14754300297);
	Button = MM:CreateButton({SectionParent=Sectionjoingamemm,Name="Join Murder Mystery 2",Interact="Click",Callback=function()
		game:GetService("TeleportService"):Teleport(142823291, LocalPlayer);
		effecttrue();
		Rayfield:Notify({Title="Teleported",Content=("Teleported " .. LocalPlayer.DisplayName .. "!"),Duration=3,Image=7733715400});
	end});
	Label = MM:CreateLabel("Join The Game To See The Button's!", Sectionjoingamemm);
end
local ESPTAB = Window:CreateTab("ESP", 7072716095);
Sectionesp = ESPTAB:CreateSection("ESP", false, false, 10723346959);
Sense = {whitelist={},sharedSettings={textSize=13,textFont=2,limitDistance=false,maxDistance=150,useTeamColor=false},teamSettings={enemy={enabled=false,box=false,boxColor={Color3.new(1, 0, 0),1},boxOutline=true,boxOutlineColor={Color3.new(),1},boxFill=false,boxFillColor={Color3.new(1, 0, 0),0.5},healthBar=false,healthyColor=Color3.new(0, 1, 0),dyingColor=Color3.new(1, 0, 0),healthBarOutline=true,healthBarOutlineColor={Color3.new(),0.5},healthText=false,healthTextColor={Color3.new(1, 1, 1),1},healthTextOutline=true,healthTextOutlineColor=Color3.new(),box3d=false,box3dColor={Color3.new(1, 0, 0),1},name=false,nameColor={Color3.new(1, 1, 1),1},nameOutline=true,nameOutlineColor=Color3.new(),weapon=false,weaponColor={Color3.new(1, 1, 1),1},weaponOutline=true,weaponOutlineColor=Color3.new(),distance=false,distanceColor={Color3.new(1, 1, 1),1},distanceOutline=true,distanceOutlineColor=Color3.new(),tracer=false,tracerOrigin="Bottom",tracerColor={Color3.new(1, 0, 0),1},tracerOutline=true,tracerOutlineColor={Color3.new(),1},offScreenArrow=false,offScreenArrowColor={Color3.new(1, 1, 1),1},offScreenArrowSize=15,offScreenArrowRadius=150,offScreenArrowOutline=true,offScreenArrowOutlineColor={Color3.new(),1},chams=false,chamsVisibleOnly=false,chamsFillColor={Color3.new(0.2, 0.2, 0.2),0.5},chamsOutlineColor={Color3.new(1, 0, 0),0}},friendly={enabled=false,box=false,boxColor={Color3.new(0, 1, 0),1},boxOutline=true,boxOutlineColor={Color3.new(),1},boxFill=false,boxFillColor={Color3.new(0, 1, 0),0.5},healthBar=false,healthyColor=Color3.new(0, 1, 0),dyingColor=Color3.new(1, 0, 0),healthBarOutline=true,healthBarOutlineColor={Color3.new(),0.5},healthText=false,healthTextColor={Color3.new(1, 1, 1),1},healthTextOutline=true,healthTextOutlineColor=Color3.new(),box3d=false,box3dColor={Color3.new(0, 1, 0),1},name=false,nameColor={Color3.new(1, 1, 1),1},nameOutline=true,nameOutlineColor=Color3.new(),weapon=false,weaponColor={Color3.new(1, 1, 1),1},weaponOutline=true,weaponOutlineColor=Color3.new(),distance=false,distanceColor={Color3.new(1, 1, 1),1},distanceOutline=true,distanceOutlineColor=Color3.new(),tracer=false,tracerOrigin="Bottom",tracerColor={Color3.new(0, 1, 0),1},tracerOutline=true,tracerOutlineColor={Color3.new(),1},offScreenArrow=false,offScreenArrowColor={Color3.new(1, 1, 1),1},offScreenArrowSize=15,offScreenArrowRadius=150,offScreenArrowOutline=true,offScreenArrowOutlineColor={Color3.new(),1},chams=false,chamsVisibleOnly=false,chamsFillColor={Color3.new(0.2, 0.2, 0.2),0.5},chamsOutlineColor={Color3.new(0, 1, 0),0}}}};
Sense = loadstring(game:HttpGet("https://sirius.menu/sense"))();
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionesp,Name="Main ESP",CurrentValue=false,Callback=function(ESP)
	pcall(function()
		espfunc = ESP;
		if espfunc then
			Sense:Load();
		end
		if not espfunc then
			Sense:Unload();
		end
	end);
end});
Sectionshared = ESPTAB:CreateSection("ESP Shared Settings", false, false, 10709759610);
Slider = ESPTAB:CreateSlider({SectionParent=Sectionshared,Name="Text Size",Range={0,50},Increment=1,Suffix="Size",CurrentValue=13,Callback=function(Value)
	Sense.sharedSettings.textSize = Value;
end});
Slider = ESPTAB:CreateSlider({SectionParent=Sectionshared,Name="Text Font",Range={0,10},Increment=1,Suffix="Font",CurrentValue=2,Callback=function(Value)
	Sense.sharedSettings.textFont = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionshared,Name="Limit Distance",CurrentValue=false,Callback=function(Value)
	Sense.sharedSettings.limitDistance = Value;
end});
Slider = ESPTAB:CreateSlider({SectionParent=Sectionshared,Name="Max Distance",Range={0,10000},Increment=10,Suffix="Distance",CurrentValue=150,Callback=function(Value)
	Sense.sharedSettings.maxDistance = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionshared,Name="Use Team Color",Callback=function(Value)
	Sense.sharedSettings.useTeamColor = Value;
end});
Sectionenemy = ESPTAB:CreateSection("ESP Enemy Settings", false, true, 10709759610);
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Enabled",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.enabled = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Boxes",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.box = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Boxes Color Picker",Color=Color3.fromRGB(1, 0, 0),Callback=function(Value)
	Sense.teamSettings.enemy.boxColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Box OutLines",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.boxOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Boxes OutLines Color Picker",Color=Color3.fromRGB(255, 255, 255),Callback=function(Value)
	Sense.teamSettings.enemy.boxOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Boxes Fill",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.boxFill = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Boxes Fill Color Picker",Color=Color3.fromRGB(1, 0, 0),Callback=function(Value)
	Sense.teamSettings.enemy.boxFillColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Health Bars",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.healthBar = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Health Bars Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.healthyColor = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Dying Color Picker",Color=Color3.fromRGB(1, 0, 0),Callback=function(Value)
	Sense.teamSettings.enemy.dyingColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Health Bars Outlines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.healthBarOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Health Bars OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.healthBarOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Health Text",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.healthText = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Health Text Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.healthTextColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Health Text OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.healthTextOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Health Text OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.healthTextOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Boxes 3D",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.box3d = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Boxes 3D Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.box3dColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Names",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.name = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Names Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.nameColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Names OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.nameOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Names OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.nameOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Weapons",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.weapon = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Weapons Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.weaponColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Weapons OutLines",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.weaponOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Weapons OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.weaponOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Distance",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.distance = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Distance Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.distanceColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Distance OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.distanceOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Distance OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.distanceOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Tracers",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.tracer = Value;
end});
TracersOrigin = ESPTAB:CreateDropdown({SectionParent=Sectionenemy,Name="Tracers Location",Options={"Mouse","Top","Bottom"},CurrentOption="Bottom",Callback=function(Option)
	Sense.teamSettings.enemy.tracerOrigin = Option;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Tracers Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.tracerColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Tracers OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.tracerOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Tracers OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.tracerOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Off Screen Arrows",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.offScreenArrow = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Off Screen Arrows Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.offScreenArrowColor = Value;
end});
Slider = ESPTAB:CreateSlider({SectionParent=Sectionenemy,Name="Off Screen Arrows Size",Range={0,50},Increment=1,Suffix="Size",CurrentValue=15,Callback=function(Value)
	Sense.teamSettings.enemy.offScreenArrowSize = Value;
end});
Slider = ESPTAB:CreateSlider({SectionParent=Sectionenemy,Name="Off Screen Arrows Radius",Range={0,1000},Increment=1,Suffix="Radius",CurrentValue=150,Callback=function(Value)
	Sense.teamSettings.enemy.offScreenArrowRadius = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Off Screen Arrows OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.offScreenArrowOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Off Screen Arrows OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.offScreenArrowOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Chams",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.enemy.chams = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionenemy,Name="Chams Visible Only",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.enemy.chamsVisibleOnly = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Chams Fill Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.chamsFillColor = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionenemy,Name="Chams OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.enemy.chamsOutlineColor = Value;
end});
Sectionfriendly = ESPTAB:CreateSection("ESP Friendly Settings", false, true, 10709759610);
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Enabled",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.enabled = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Boxes",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.box = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Boxes Color Picker",Color=Color3.fromRGB(1, 0, 0),Callback=function(Value)
	Sense.teamSettings.friendly.boxColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Box OutLines",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.boxOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Boxes OutLines Color Picker",Color=Color3.fromRGB(255, 255, 255),Callback=function(Value)
	Sense.teamSettings.friendly.boxOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Boxes Fill",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.boxFill = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Boxes Fill Color Picker",Color=Color3.fromRGB(1, 0, 0),Callback=function(Value)
	Sense.teamSettings.friendly.boxFillColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Health Bars",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.healthBar = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Health Bars Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.healthyColor = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Dying Color Picker",Color=Color3.fromRGB(1, 0, 0),Callback=function(Value)
	Sense.teamSettings.friendly.dyingColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Health Bars Outlines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.healthBarOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Health Bars OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.healthBarOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Health Text",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.healthText = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Health Text Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.healthTextColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Health Text OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.healthTextOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Health Text OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.healthTextOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Boxes 3D",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.box3d = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Boxes 3D Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.box3dColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Names",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.name = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Names Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.nameColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Names OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.nameOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Names OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.nameOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Weapons",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.weapon = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Weapons Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.weaponColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Weapons OutLines",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.weaponOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Weapons OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.weaponOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Distance",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.distance = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Distance Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.distanceColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Distance OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.distanceOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Distance OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.distanceOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Tracers",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.tracer = Value;
end});
TracersOrigin = ESPTAB:CreateDropdown({SectionParent=Sectionfriendly,Name="Tracers Location",Options={"Mouse","Top","Bottom"},CurrentOption="Bottom",Callback=function(Option)
	Sense.teamSettings.friendly.tracerOrigin = Option;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Tracers Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.tracerColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Tracers OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.tracerOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Tracers OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.tracerOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Off Screen Arrows",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.offScreenArrow = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Off Screen Arrows Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.offScreenArrowColor = Value;
end});
Slider = ESPTAB:CreateSlider({SectionParent=Sectionfriendly,Name="Off Screen Arrows Size",Range={0,50},Increment=1,Suffix="Size",CurrentValue=15,Callback=function(Value)
	Sense.teamSettings.friendly.offScreenArrowSize = Value;
end});
Slider = ESPTAB:CreateSlider({SectionParent=Sectionfriendly,Name="Off Screen Arrows Radius",Range={0,1000},Increment=1,Suffix="Radius",CurrentValue=150,Callback=function(Value)
	Sense.teamSettings.friendly.offScreenArrowRadius = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Off Screen Arrows OutLines",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.offScreenArrowOutline = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Off Screen Arrows OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.offScreenArrowOutlineColor = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Chams",CurrentValue=true,Callback=function(Value)
	Sense.teamSettings.friendly.chams = Value;
end});
Toggle = ESPTAB:CreateToggle({SectionParent=Sectionfriendly,Name="Chams Visible Only",CurrentValue=false,Callback=function(Value)
	Sense.teamSettings.friendly.chamsVisibleOnly = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Chams Fill Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.chamsFillColor = Value;
end});
Colorpicker = ESPTAB:CreateColorPicker({SectionParent=Sectionfriendly,Name="Chams OutLines Color Picker",Color=Color3.fromRGB(0, 1, 0),Callback=function(Value)
	Sense.teamSettings.friendly.chamsOutlineColor = Value;
end});
local CRD = Window:CreateTab("Credit's &\nChangelog", 7743876054);
Sectioncredit = CRD:CreateSection("Credit's", true);
Paragraphim = CRD:CreateParagraph({Title="Important People",Content="Script Owner: Javolo\nCo Owner: TripleDomm\nTesting: Javolo's Brother\nGeneral Helping: Sunken\nGeneral Helping: Kooggy\nGeneral Helping: Nihan\nGeneral Helping: Valco\nOther's:\nMoney Maker\nEdgeIY\nPigeon\nPeople From V3rmillion\nPaint\nUI: Array Field Library (Modified)"}, nil);
Sectionchangelog = CRD:CreateSection("Changelog", true);
Paragraphchangelog = CRD:CreateParagraph({Title="Changelog",Content="> Made Some Improvement's."}, nil);
Sectionother = CRD:CreateSection("Point", true);
Paragraphpoi = CRD:CreateParagraph({Title="Point",Content="I've Made This Hub So You Don't Have To Look For Script's And Waste Executor Tab Space And Time Looking For The Right One. \nBasically This is a All-in-one Hub With Script's From The Internet / Script's By Me."}, nil);
Button = CRD:CreateButton({SectionParent=Sectionother,Name="Destroy Hub UI",Interact="Click",Callback=function()
	Rayfield:Destroy();
end});
Sectionclientinfo = CRD:CreateSection("Client Information", true);
DTinfo = DateTime.fromUnixTimestamp(86400 * LocalPlayer.AccountAge);
Daysinfo = tonumber(DTinfo:FormatUniversalTime("DD", "en-us"));
Monthsinfo = tonumber(DTinfo:FormatUniversalTime("MM", "en-us"));
Yearsinfo = tonumber(DTinfo:FormatUniversalTime("YYYY", "en-us")) - 1970;
totalSeconds = math.floor(workspace.DistributedGameTime);
hours = math.floor(totalSeconds / 3600);
minutes = math.floor((totalSeconds % 3600) / 60);
seconds = totalSeconds % 60;
Paragraphcrdd = CRD:CreateParagraph({Title="Information",Content=("Username | Display Name: " .. LocalPlayer.Name .. " | " .. LocalPlayer.DisplayName .. "" .. "\nUserId: " .. LocalPlayer.UserId .. "" .. "\nAccount Age | In Days: " .. "Day's " .. Daysinfo .. " Month's: " .. Monthsinfo .. " Year's: " .. Yearsinfo .. " | " .. speaker.AccountAge .. "" .. "\nPlaceId: " .. game.PlaceId .. "")});
task.spawn(function()
	while task.wait() do
		totalSeconds = math.floor(workspace.DistributedGameTime);
		hours = math.floor(totalSeconds / 3600);
		minutes = math.floor((totalSeconds % 3600) / 60);
		seconds = totalSeconds % 60;
		Paragraphcrdd:Set({Title="Detailed Information",Content=("Country: " .. country .. " / " .. countryCode .. "" .. "\nTimezone: " .. timezone .. "" .. "\nExecutor: " .. executor .. "" .. "\nPing: " .. StatsService.Network.ServerStatsItem["Data Ping"]:GetValueString() .. " ms" .. "\nFPS: " .. UpdatedFPS .. "" .. "\nMemory: " .. math.floor(stats():GetTotalMemoryUsageMb()) .. " MB" .. "\nSession Time Spent: " .. string.format("%02d:%02d:%02d", hours, minutes, seconds) .. "\nPlayers: " .. tostring(#game.Players:GetChildren()) .. "/" .. tostring(game.Players.MaxPlayers) .. "")});
	end
end);
Sectionclientinfo = CRD:CreateSection("Detailed Client Information", true);
Paragraphcrdd = CRD:CreateParagraph({Title="Information",Content=("Username | Display Name: " .. LocalPlayer.Name .. " | " .. LocalPlayer.DisplayName .. "" .. "\nUserId: " .. LocalPlayer.UserId .. "" .. "\nAccount Age | In Days: " .. "Day's " .. Daysinfo .. " Month's: " .. Monthsinfo .. " Year's: " .. Yearsinfo .. " | " .. speaker.AccountAge .. "" .. "\nPlaceId: " .. game.PlaceId .. "" .. "\nCountry: " .. country .. " / " .. countryCode .. "" .. "\nTimezone: " .. timezone .. "" .. "\nExecutor: " .. executor .. "" .. "\nPing: " .. StatsService.Network.ServerStatsItem["Data Ping"]:GetValueString() .. " ms" .. "\nFPS: " .. UpdatedFPS .. "" .. "\nMemory: " .. math.floor(stats():GetTotalMemoryUsageMb()) .. " MB" .. "\nSession Time Spent: " .. string.format("%02d:%02d:%02d", hours, minutes, seconds) .. "\nPlayers: " .. tostring(#game.Players:GetChildren()) .. "/" .. tostring(game.Players.MaxPlayers) .. "")});
Sectionfriendinfo = CRD:CreateSection("Friend Information", true);
Paragraphcrddfriendrelated = CRD:CreateParagraph({Title="Information",Content=(friendsallfr .. "\n" .. friendsofflinefr .. "\n" .. friendsonlinefr .. "\n" .. friendsinserverfr .. "")});
task.spawn(function()
	while task.wait() do
		Paragraphcrddfriendrelated:Set({Title="Friend Information",Content=(friendsallfr .. "\n" .. friendsofflinefr .. "\n" .. friendsonlinefr .. "\n" .. friendsinserverfr .. "")});
	end
end);
Sectioncopysc = CRD:CreateSection("Copy Script's", false, true, 10709799288);
Button = CRD:CreateButton({SectionParent=Sectioncopysc,Name="Discord Invite",Interact="Click",Callback=function()
	toClipboard("https://discord.gg/PhEH8uh9pR");
	effecttrue();
	Rayfield:Notify({Title="Copied Link!",Content="Copied Discord Link To Clipboard!",Duration=3,Image=7733715400});
end});
Button = CRD:CreateButton({SectionParent=Sectioncopysc,Name="Copy LocalPlayer Username",Interact="Click",Callback=function()
	toClipboard("" .. LocalPlayer.Name .. "");
	effecttrue();
	Rayfield:Notify({Title="Copied!",Content="Copied To Clipboard!",Duration=3,Image=7733715400});
end});
Button = CRD:CreateButton({SectionParent=Sectioncopysc,Name="Copy LocalPlayer UserId",Interact="Click",Callback=function()
	toClipboard("" .. LocalPlayer.UserId .. "");
	effecttrue();
	Rayfield:Notify({Title="Copied!",Content="Copied To Clipboard!",Duration=3,Image=7733715400});
end});
Paragraphchangelog = CRD:CreateParagraph({Title="Copy Player ID Info",Content="Basically You Enter Some Player's Username And You Press Enter, You'll Have Their ID Copied."}, Sectioncopysc);
Input = CRD:CreateInput({SectionParent=Sectioncopysc,Name="Copy Player's UserId",PlaceholderText="Player",RemoveTextAfterFocusLost=false,Callback=function(Text)
	plrName = Text;
	function getPlr(name)
		x = nil;
		for i, v in next, game:GetService("Players"):GetPlayers() do
			if string.find(v.Name:lower(), name:lower()) then
				x = v;
				break;
			end
		end
		return x;
	end
	foundPlr = getPlr(plrName);
	toClipboard("" .. foundPlr.UserId .. "");
end});
Button = CRD:CreateButton({SectionParent=Sectioncopysc,Name="Join Script",Interact="Click",Callback=function()
	soundnotification = Instance.new("Sound");
	effecttrue();
	Rayfield:Notify({Title="Copied!",Content="Copied To Clipboard!",Duration=3,Image=7733715400});
	toClipboard("--[[Will Join Your Friend's Game\nIf Not Join The Game He's Playing and Execute]]--" .. "\ngame:GetService(\'TeleportService\'):TeleportToPlaceInstance(\'" .. game.PlaceId .. "\', \'" .. game.JobId .. "\');");
end});
Button = CRD:CreateButton({SectionParent=Sectioncopysc,Name="Copy PlaceId",Interact="Click",Callback=function()
	toClipboard("" .. game.PlaceId .. "");
	effecttrue();
	Rayfield:Notify({Title="Copied!",Content="Copied To Clipboard!",Duration=3,Image=7733715400});
end});
